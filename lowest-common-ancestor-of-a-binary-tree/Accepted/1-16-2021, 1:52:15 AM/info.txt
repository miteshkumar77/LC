{"id":443573347,"lang":"cpp","time":"1 year, 3 months","timestamp":1610779935,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/443573347/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Tree","memory":"16.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\n\nstruct Res {\n    \n    Res() {\n        p = false;\n        q = false;\n        tn = nullptr;\n    }\n    \n    \n    \n    bool p;\n    bool q;\n    TreeNode* tn;\n};\n\nclass Solution {\npublic:\n    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {\n        return lca(root, p, q).tn;\n    }\n    Res lca(TreeNode* root, TreeNode* p, TreeNode* q) {\n        if (!root) return Res();\n        auto l = lca(root -> left, p, q);\n        if (l.tn) return l;\n        auto r = lca(root -> right, p, q);\n        if (r.tn) return r;\n        \n        auto curr = Res();\n        curr.p = l.p || r.p || p == root;\n        curr.q = l.q || r.q || q == root;\n        if (curr.p && curr.q) curr.tn = root; \n        return curr;\n    }\n};","compare_result":"1111111111111111111111111111111","title_slug":"lowest-common-ancestor-of-a-binary-tree"}