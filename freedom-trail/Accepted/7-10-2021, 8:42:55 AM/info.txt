{"id":520250556,"lang":"cpp","time":"9 months, 1 week","timestamp":1625920975,"status_display":"Accepted","runtime":"100 ms","url":"/submissions/detail/520250556/","is_pending":"Not Pending","title":"Freedom Trail","memory":"13.2 MB","code":"class Solution {\npublic:\n    int findRotateSteps(string ring, string key) {\n        int n = key.length();\n        int m = ring.length();\n        vector<vector<int>> dp(n+1, vector<int>(m, (int)(1e9 + 7)));\n        dp[0][0] = 0;\n        \n        for (int i = 1; i <= n; ++i) {\n            for (int j = 0; j < m; ++j) {\n                if (ring[j] != key[i-1]) continue;\n                for (int k = 0; k < m; ++k) {\n                    int dist = min((k + m - j) % m, (j + m - k) % m) + 1;\n                    dp[i][j] = min(dp[i][j], dp[i-1][k] + dist);\n                }\n            }\n        }\n        return *min_element(dp.back().begin(), dp.back().end());\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"freedom-trail"}