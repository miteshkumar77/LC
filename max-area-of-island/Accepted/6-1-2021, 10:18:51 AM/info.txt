{"id":501379991,"lang":"cpp","time":"10 months, 3 weeks","timestamp":1622557131,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/501379991/","is_pending":"Not Pending","title":"Max Area of Island","memory":"23.1 MB","code":"class Solution {\npublic:\n    array<int, 5> dirs{0, 1, 0, -1, 0};\n    int dfs(int i, int j, vector<vector<int>>& grid) {\n        int n = grid.size(); int m = grid[0].size();\n        if (i < 0 || i >= n || j < 0 || j >= m || grid[i][j] == 0) return 0;\n        grid[i][j] = 0;\n        int ans = 1;\n        for (int x = 0; x < 4; ++x) {\n            ans += dfs(i + dirs[x], j + dirs[x+1], grid);\n        }\n        return ans;\n    }\n    int maxAreaOfIsland(vector<vector<int>>& grid) {\n        int n = grid.size(); int m = grid[0].size();\n        int ans = 0;\n        for (int i = 0; i < n; ++i) {\n            for (int j = 0; j < m; ++j) {\n                ans = max(ans, dfs(i, j, grid));\n            }\n        }\n        return ans;\n    }\n};","compare_resulttitle_slug":"max-area-of-island"}