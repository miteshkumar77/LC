{"id":367569129,"lang":"cpp","time":"1 year, 9 months","timestamp":1594932318,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/367569129/","is_pending":"Not Pending","title":"Numbers With Repeated Digits","memory":"N/A","code":"class Solution {\npublic:\n    int numDupDigitsAtMostN(int N) {\n        if(N < 10) return 0;\n        int k = 0;\n        for(int i = N; i > 0; i /= 10) k++;\n        int digit[k] = {0};\n        for(int i = 0, j = N; i < k; i++, j /= 10) digit[k - 1 - i] = j % 10;\n        \n        int noDupBaseSum = 0;\n        int noDupBase[k - 1] = {0};\n        for(int i = 0; i < k - 1; i++)\n        {\n            noDupBase[i] = i == 0 ? 9 : noDupBase[i - 1] * (10 - i);\n            noDupBaseSum += noDupBase[i];\n        }\n        \n        int count[10] = {0};\n        int noDupRes[k] = {0};\n        bool duplicate = false;\n        for(int i = 0; i < k; i++)\n        {\n            noDupRes[i] = i == 0 ? 9 : noDupRes[i - 1] * (10 - i);\n            if(!duplicate)\n            {\n                int diff = 0;\n                for(int j = digit[i] + 1; j < 10; j++) diff += count[j] == 0;\n                noDupRes[i] -= diff;\n                count[digit[i]]++;\n                if(count[digit[i]] > 1) duplicate = true;\n            }\n        }\n        return N - (noDupBaseSum + noDupRes[k - 1]);\n    }\n};","compare_result":null,"title_slug":"numbers-with-repeated-digits"}