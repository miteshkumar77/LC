{"id":348969408,"lang":"cpp","time":"1 year, 10 months","timestamp":1591282773,"status_display":"Accepted","runtime":"72 ms","url":"/submissions/detail/348969408/","is_pending":"Not Pending","title":"Number of Longest Increasing Subsequence","memory":"13.1 MB","code":"class Solution {\npublic:\n    int findNumberOfLIS(vector<int>& nums) {\n        int ans = 0; \n        int m_len = 0; \n        vector<int> dp(nums.size(), 1); \n        vector<int> dp2(nums.size(), 1); \n        for (int i = 1; i < nums.size(); ++i) {\n            for (int j = 0; j < i; ++j) {\n                if (nums[j] < nums[i]) {\n                    \n                    if (dp[i] < dp[j] + 1) {\n                        dp[i] = dp[j] + 1; \n                        dp2[i] = dp2[j]; \n                    } else if (dp[i] == dp[j] + 1) {\n                        dp2[i] += dp2[j]; \n                    }\n                }\n            }\n        }\n        \n        for (int i = 0; i < dp.size(); ++i) {\n            if (dp[i] == m_len) {\n                ans += dp2[i];  \n            } else if (dp[i] > m_len) {\n                ans = dp2[i]; \n                m_len = dp[i]; \n            }\n        }\n        \n        return ans; \n        \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"number-of-longest-increasing-subsequence"}