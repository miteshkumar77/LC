{"id":348968300,"lang":"cpp","time":"1 year, 10 months","timestamp":1591282579,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/348968300/","is_pending":"Not Pending","title":"Number of Longest Increasing Subsequence","memory":"N/A","code":"class Solution {\npublic:\n    int findNumberOfLIS(vector<int>& nums) {\n        int ans = 0; \n        int m_len = 0; \n        vector<int> dp(nums.size(), 1); \n        vector<int> dp2(nums.size(), 1); \n        for (int i = 1; i < nums.size(); ++i) {\n            for (int j = 0; j < i; ++j) {\n                if (nums[j] < nums[i]) {\n                    \n                    if (dp[i] < dp[j] + 1) {\n                        dp[i] = dp[j] + 1; \n                        dp2[i] = dp2[j]; \n                    } else if (dp[i] == dp[j] + 1) {\n                        dp2[i] += dp2[j]; \n                    }\n                }\n                if (dp2[i] > ans) {\n                    ans = dp2[i]; \n                }\n            }\n        }\n        return ans; \n        \n    }\n};","compare_result":"1011001000100101001100000000000100001001110111010000000000001100010000111000011011000110000000000010000000000000000000001010001000000000000100000000000000000000000000010000000000000000000000000000000000000100001100000010001","title_slug":"number-of-longest-increasing-subsequence"}