{"id":345894200,"lang":"cpp","time":"1 year, 10 months","timestamp":1590682164,"status_display":"Accepted","runtime":"3476 ms","url":"/submissions/detail/345894200/","is_pending":"Not Pending","title":"3Sum","memory":"232.7 MB","code":"struct pair_hash {\n    inline size_t operator()(const pair<int,int> & v) const {\n        return v.first*31+v.second;\n    }\n};\n\nclass Solution {\npublic:\n    vector<vector<int>> threeSum(vector<int>& nums) {\n        \n        if (nums.size() < 3) {\n            return vector<vector<int> >(); \n        }\n        \n        vector<vector<int> > ans; \n        unordered_set<int> rems; \n        unordered_set< pair<int, int>,  pair_hash> pair_set; \n        \n        for (int i = 1; i < nums.size(); ++i) {\n            rems.insert(nums[i - 1]);\n            for (int j = i + 1; j < nums.size(); ++j) {\n                \n                if (rems.find(-nums[i] - nums[j]) != rems.end()) {\n                    vector<int> candidate{nums[i], nums[j], -nums[i] - nums[j]}; \n                    sort(candidate.begin(), candidate.end()); \n                    if (pair_set.find(pair<int, int>(candidate[0], candidate[1])) == pair_set.end()) {\n                        pair_set.insert(pair<int, int>(candidate[0], candidate[1])); \n                        ans.push_back(candidate); \n                    }\n                }\n            }\n        }\n        \n        return ans; \n        \n        \n        \n        \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"3sum"}