{"id":402505576,"lang":"cpp","time":"1 year, 6 months","timestamp":1601435595,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/402505576/","is_pending":"Not Pending","title":"Maximum Length of a Concatenated String with Unique Characters","memory":"N/A","code":"class Solution {\npublic:\n    int maxLength(vector<string>& arr) {\n        \n        unordered_set<char> seen;\n        unsigned int ans = 0;\n        function<void(int)> bt = [&](int i) -> void {\n            if (i == arr.size()) {\n                ans = max(ans, (unsigned int)seen.size());\n                return;\n            }\n            bool stillUnique = true;\n            for (char c : arr[i]) {\n                if (seen.find(c) != seen.end()) {\n                    stillUnique = false;\n                }\n            }\n            if (stillUnique) {\n                for (char c : arr[i]) {\n                    seen.insert(c);\n                }\n                bt(i + 1);\n                for (char c : arr[i]) {\n                    seen.erase(c);\n                }\n            }\n            bt(i + 1);\n        };\n        \n        bt(0);\n        return ans; \n    }\n};","compare_result":"1111111111011111111110111111100100111111001011101100111111011111111111111111101111111","title_slug":"maximum-length-of-a-concatenated-string-with-unique-characters"}