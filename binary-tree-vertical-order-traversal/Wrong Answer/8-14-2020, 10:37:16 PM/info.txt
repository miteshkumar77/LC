{"id":381033738,"lang":"cpp","time":"1 year, 8 months","timestamp":1597459036,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/381033738/","is_pending":"Not Pending","title":"Binary Tree Vertical Order Traversal","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>> verticalOrder(TreeNode* root) {\n        unordered_map<int, vector<int>> ans; \n        int minidx = 0; \n        int maxidx = 0; \n        function<void(TreeNode*,int)> vorder = [&] (TreeNode* root, int i) -> void {\n            if (!root) {\n                return; \n            }\n            minidx = min(i, minidx); \n            maxidx = max(i, maxidx); \n            ans[i].push_back(root -> val); \n            vorder(root -> left, i - 1); \n            vorder(root -> right, i + 1); \n        };\n        \n        vorder(root, 0); \n        vector<vector<int>> ansv; \n        for (int i = minidx; i <= maxidx; ++i) {\n            ansv.push_back(ans[i]); \n        }\n        return ansv; \n    }\n};","compare_result":"11001111111111111111111110111111111111111111111111111111111110110111111111111111111111011111111111111111101111111111111111111101111111111111110111111111101111111111111111111111111111111111111111111111111101111110","title_slug":"binary-tree-vertical-order-traversal"}