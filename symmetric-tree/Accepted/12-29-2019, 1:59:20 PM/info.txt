{"id":289532355,"lang":"cpp","time":"2 years, 3 months","timestamp":1577645960,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/289532355/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"14.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    bool isSymmetric(TreeNode* root) {\n        if (!root) {\n            return true;\n        }\n        \n        return isSymmetric(root -> left, root -> right); \n    }\n    \n    bool isSymmetric(TreeNode* p, TreeNode*q) {\n        if (!p && !q) {\n            return true;\n        }\n        \n        if ((!p && q) || (p && !q)) {\n            return false;\n        }\n        \n        if ((p -> val) != (q -> val)) {\n            return false;\n        }\n        \n        return isSymmetric(p -> left, q -> right) &&\n               isSymmetric(p -> right, q -> left);\n    }\n    \n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"symmetric-tree"}