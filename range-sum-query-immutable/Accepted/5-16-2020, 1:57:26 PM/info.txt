{"id":340276320,"lang":"cpp","time":"1 year, 11 months","timestamp":1589651846,"status_display":"Accepted","runtime":"1172 ms","url":"/submissions/detail/340276320/","is_pending":"Not Pending","title":"Range Sum Query - Immutable","memory":"518.3 MB","code":"class NumArray {\npublic:\n    \n    vector<vector<int> > sums; \n    NumArray(vector<int>& nums) {\n        int n = nums.size(); \n        sums = vector<vector<int> > (n + 1, vector<int>(n + 1, 0)); \n        for (int i = 1; i <= n; ++i) {\n            for (int j = i; j <= n; ++j) {\n                sums[i][j] = sums[i][j - 1] + nums[j - 1]; \n            }\n        }\n    }\n    \n    int sumRange(int i, int j) {\n        return this -> sums[i + 1][j + 1]; \n    }\n};\n\n/**\n * Your NumArray object will be instantiated and called as such:\n * NumArray* obj = new NumArray(nums);\n * int param_1 = obj->sumRange(i,j);\n */","compare_result":"1111111111111111","title_slug":"range-sum-query-immutable"}