{"id":435226508,"lang":"cpp","time":"1 year, 3 months","timestamp":1609092972,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/435226508/","is_pending":"Not Pending","title":"Jump Game IV","memory":"N/A","code":"class Solution {\npublic:\n    int minJumps(vector<int>& arr) {\n        int n = arr.size();\n        unordered_map<int,vector<int>> graph;\n        for (int i = 0; i < n; ++i) {\n            graph[arr[i]].push_back(i);\n        }\n        vector<bool> visited(n, false);\n        \n        queue<pair<int,int>> bfsq;\n        \n        bfsq.push({0, 0});\n        \n        while(!bfsq.empty()) {\n            auto& [idx, dist] = bfsq.front();\n            bfsq.pop();\n            \n            if (idx < 0 || idx >= n || visited[idx]) continue;\n            if (idx == n - 1) {\n                return dist;\n            }\n            visited[idx] = true;\n            bfsq.push({idx + 1, dist + 1});\n            bfsq.push({idx - 1, dist + 1});\n            \n            for (int x : graph[arr[idx]]) {\n                bfsq.push({x, dist + 1});\n            }\n            \n        }\n        \n        return -1;\n        \n        \n    }\n};","compare_result":"1111111111111100000000000000","title_slug":"jump-game-iv"}