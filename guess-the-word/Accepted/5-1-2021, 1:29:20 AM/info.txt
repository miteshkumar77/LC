{"id":487290424,"lang":"cpp","time":"11 months, 3 weeks","timestamp":1619846960,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/487290424/","is_pending":"Not Pending","title":"Guess the Word","memory":"6.8 MB","code":"/**\n * // This is the Master's API interface.\n * // You should not implement it, or speculate about its implementation\n * class Master {\n *   public:\n *     int guess(string word);\n * };\n */\nclass Solution {\npublic:\n    bool checkWd(int common, const string& wd, const string& ref) {\n        int numcommon = 0;\n        for (int i = 0; i < 6; ++i) {\n            numcommon += wd[i] == ref[i];\n            if (common == 0 && numcommon > 0) return false;\n        }\n        return numcommon >= common;\n    }\n    void findSecretWord(vector<string>& wordlist, Master& master) {\n        map<string, bool> words;\n        for (string s : wordlist) {\n            words.insert({s, false});\n        }\n        for (int i = 0; i < 10; ++i) {\n            for (auto& p : words) {\n                if (!p.second) {\n                    int common = master.guess(p.first);\n                    \n                    if (common == 6) {\n                        cout << \"GUESSES: \" << i << endl;\n                        return;\n                    }\n                    \n                    p.second = true;\n                    map<string, bool> nw;\n                    for (const auto& pi : words) {\n                        if (pi.first != p.first && checkWd(common, pi.first, p.first)) {\n                            nw.insert(pi);\n                        }\n                    }\n                    cout << \"common: \" << common << endl;\n                    cout << \"rid of: \" << words.size() - nw.size() << endl;\n                    cout << \"now sz: \" << nw.size() << endl;\n                    words = nw;\n                    break;\n                }\n            }\n        }\n    }\n};","compare_result":"1111111","title_slug":"guess-the-word"}