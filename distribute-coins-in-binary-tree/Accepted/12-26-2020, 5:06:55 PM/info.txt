{"id":434892914,"lang":"cpp","time":"1 year, 3 months","timestamp":1609020415,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/434892914/","is_pending":"Not Pending","title":"Distribute Coins in Binary Tree","memory":"14.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int distributeCoins(TreeNode* root) {\n        return helper(root).second;\n    }\n    \n    pair<int,int> helper(TreeNode* root) {\n        \n        if (!root) {\n            return {0, 0};\n        }\n        \n        int dist = root -> val - 1;\n        auto pl = helper(root -> left);\n        auto pr = helper(root -> right);\n        dist += pl.first + pr.first;\n        return {dist, \n                abs(dist) + pl.second + pr.second};\n    }\n    \n    \n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"distribute-coins-in-binary-tree"}