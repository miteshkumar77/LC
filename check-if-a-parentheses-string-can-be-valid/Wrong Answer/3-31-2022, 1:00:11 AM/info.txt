{"id":670798177,"lang":"cpp","time":"2 weeks, 4 days","timestamp":1648702811,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/670798177/","is_pending":"Not Pending","title":"Check if a Parentheses String Can Be Valid","memory":"N/A","code":"class Solution {\npublic:\n    bool canBeValid(string s, string locked) {\n        int n = s.length();\n        vector<int> need(n, 0);\n        int acc = 0;\n        for (int i = 0; i < n; ++i) {\n            if (locked[i] == '1' && (acc += (s[i] == '(' ? 1 : -1)) < 0) {\n                need[i] = 1;\n            }\n        }\n        \n        for (int i = n-1; i >= 0; --i) {\n            if (locked[i] == '1' && (acc += (s[i] == ')' ? 1 : -1)) < 0) {\n                need[i] = 1;\n            }\n        }\n        \n        queue<int> q;\n        for (int i = 0; i < n; ++i) {\n            if (locked[i] == '0') {\n                q.push(i);\n            } else if (need[i] && s[i] == ')') {\n                if (q.empty()) return false;\n                locked[q.front()] = '1';\n                q.pop();\n            }\n        }\n        \n        for (int i = n-1; i >= 0; --i) {\n            if (locked[i] == '0') {\n                q.push(i);\n            } else if (need[i] && s[i] == '(') {\n                if (q.empty()) return false;\n                locked[q.front()] = '1';\n                q.pop();\n            }\n        }\n        int num_unlocked = 0;\n        for (int i = 0; i < n; ++i) num_unlocked += (locked[i] == '0');\n        return num_unlocked % 2 == 0;\n        \n    }\n};","compare_result":"111111111111010111101111000001011110101111110100101111110110111111111111111101001111110111011111101111011111111111101110111010101111000110111111111100110111110111111111011111111111110011011111101111111111101011110101111011111110001111111111101111111110100110","title_slug":"check-if-a-parentheses-string-can-be-valid"}