{"id":349006391,"lang":"cpp","time":"1 year, 10 months","timestamp":1591289225,"status_display":"Accepted","runtime":"156 ms","url":"/submissions/detail/349006391/","is_pending":"Not Pending","title":"Longest String Chain","memory":"17.1 MB","code":"class Solution {\npublic:\n    int longestStrChain(vector<string>& words) {\n        \n        sort(words.begin(), words.end(), [](const string& a, const string& b) -> bool {\n            return a.length() < b.length(); \n        }); \n        unordered_map<string, int> hashmap; \n        int ans = 1; \n        for (string word : words) {\n            hashmap.insert(make_pair(word, 1)); \n            for (int i = 0; i < word.length(); ++i) {\n                string tmp = word.substr(0, i) + word.substr(i + 1, word.length()); \n                auto iter = hashmap.find(tmp); \n                if (iter != hashmap.end() && iter -> second + 1 > hashmap[word]) {\n                    hashmap[word] = iter -> second + 1; \n                    if (hashmap[word] > ans) {\n                        ans = hashmap[word]; \n                    }\n                }\n            }\n        }\n        return ans; \n    }\n    \n    \n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-string-chain"}