{"id":386700609,"lang":"cpp","time":"1 year, 7 months","timestamp":1598458038,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/386700609/","is_pending":"Not Pending","title":"Verifying an Alien Dictionary","memory":"9.5 MB","code":"class Solution {\npublic:\n    bool isAlienSorted(vector<string>& words, string order) {\n        array<int, 26> cmp; \n        for (int i = 0; i < order.length(); ++i) {\n            cmp[order[i] - 'a'] = i; \n        }\n        \n        for (int i = 0; i < words.size() - 1; ++i) {\n            int t = 0; \n            int b = 0;\n            bool valid = false; \n            while(t < words[i].length() && b < words[i + 1].length()) {\n                if (cmp[words[i][t] - 'a'] < cmp[words[i + 1][b] - 'a']) {\n                    valid = true; \n                    break; \n                }\n                \n                if (cmp[words[i][t] - 'a'] > cmp[words[i + 1][b] - 'a']) {\n                    return false; \n                }\n                ++t; ++b; \n            }\n            \n            if (t != words[i].length() && b == words[i + 1].length() && !valid) {\n                return false; \n            }\n        }\n        return true; \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"verifying-an-alien-dictionary"}