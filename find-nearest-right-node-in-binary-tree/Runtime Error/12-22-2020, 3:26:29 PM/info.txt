{"id":433449511,"lang":"cpp","time":"1 year, 3 months","timestamp":1608668789,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/433449511/","is_pending":"Not Pending","title":"Find Nearest Right Node in Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* findNearestRightNode(TreeNode* root, TreeNode* u) {\n        queue<pair<TreeNode*, int>> bfsq;\n        int prevLvl = -1;\n        TreeNode* prevNode = nullptr;\n        bfsq.push(make_pair(root, 0));\n        while(!bfsq.empty()) {\n            const auto&[node, lvl] = bfsq.front();\n            bfsq.pop();\n            if (!node) continue;\n            bfsq.push(make_pair(node->left, lvl+1));\n            bfsq.push(make_pair(node->right,lvl+1)); \n            if (prevNode == u) {\n                if (lvl != prevLvl) return nullptr;\n                return node;\n            }\n            prevLvl = lvl;\n            prevNode = node;\n        }\n        return nullptr;\n    }\n};","compare_result":"1111111111111111111111110000000000000000000000000000000000000000000000000000","title_slug":"find-nearest-right-node-in-binary-tree"}