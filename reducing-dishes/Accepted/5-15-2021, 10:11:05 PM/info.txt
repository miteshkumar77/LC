{"id":493730115,"lang":"cpp","time":"11 months, 1 week","timestamp":1621131065,"status_display":"Accepted","runtime":"48 ms","url":"/submissions/detail/493730115/","is_pending":"Not Pending","title":"Reducing Dishes","memory":"20.9 MB","code":"class Solution {\npublic:\n    int maxSatisfaction(vector<int>& satisfaction) {\n        /*\n            dp[i][j] = max satisfaction if subset of dishes 1 ... i are completed\n            at time j\n        */\n        sort(satisfaction.begin(), satisfaction.end());\n        int n = satisfaction.size();\n        int ans = 0;\n        vector<vector<int>> dp(n + 1, vector<int>(n + 1, -1e9));\n        for (int i = 0; i <= n; ++i) dp[i][0] = 0;\n        for (int i = 1; i <= n; ++i) {\n            for (int j = 1; j <= i; ++j) {\n                dp[i][j] = max(dp[i - 1][j], dp[i-1][j-1] + satisfaction[i-1]*j);\n                ans = max(ans, dp[i][j]);\n            }\n        }\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111","title_slug":"reducing-dishes"}