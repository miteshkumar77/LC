{"id":370076881,"lang":"cpp","time":"1 year, 9 months","timestamp":1595414105,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/370076881/","is_pending":"Not Pending","title":"Binary Tree Zigzag Level Order Traversal","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {\n        vector<vector<int>> ans; \n        deque<pair<TreeNode*, int> > dq; \n        dq.push_back(make_pair(root, 0)); \n        bool goingleft = true; \n        while(!dq.empty()) {\n            pair<TreeNode*, int> top; \n            if (goingleft && dq.front().second % 2 == 1) {\n                goingleft = false; \n            }\n            \n            if (!goingleft && dq.back().second % 2 == 0) {\n                goingleft = true; \n            }\n            \n            if (goingleft) {\n                top = dq.front(); \n                dq.pop_front(); \n                if (top.first -> left) {\n                    dq.push_back(make_pair(top.first -> left, top.second + 1)); \n                }\n                \n                if (top.first -> right) {\n                    dq.push_back(make_pair(top.first -> right, top.second + 1)); \n                }\n            } else {\n                top = dq.back(); \n                dq.pop_back(); \n                \n                if (top.first -> right) {\n                    dq.push_front(make_pair(top.first -> right, top.second + 1)); \n                }\n                \n                if (top.first -> left) {\n                    dq.push_front(make_pair(top.first -> left, top.second + 1)); \n                }\n            }\n            \n            if (top.second == ans.size()) {\n                ans.push_back(vector<int>()); \n            }\n            ans.back().push_back(top.first -> val); \n        }\n        return ans; \n        \n    }\n};","compare_result":"100000000000000000000000000000000","title_slug":"binary-tree-zigzag-level-order-traversal"}