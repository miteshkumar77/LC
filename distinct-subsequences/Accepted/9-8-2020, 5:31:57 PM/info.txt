{"id":392977133,"lang":"cpp","time":"1 year, 7 months","timestamp":1599600717,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/392977133/","is_pending":"Not Pending","title":"Distinct Subsequences","memory":"13 MB","code":"class Solution {\npublic:\n    int numDistinct(string s, string t) {\n        vector<vector<int>> dp(t.length() + 1, vector<int>(s.length() + 1, -1)); \n        function<int(int,int)> bt = [&](int sptr, int tptr) -> int {\n            if (sptr < tptr) {\n                return 0; \n            }\n            \n            if (tptr == 0) {\n                return 1; \n            }\n            \n            if (sptr == 0) {\n                return 0; \n            }\n            \n            if (dp[tptr][sptr] != -1) {\n                return dp[tptr][sptr]; \n            }\n            int ans = 0; \n            if (s[sptr - 1] == t[tptr - 1]) {\n                ans += bt(sptr - 1, tptr - 1); \n            }\n            ans += bt(sptr - 1, tptr); \n            dp[tptr][sptr] = ans; \n            return ans; \n        };\n        return bt(s.length(), t.length()); \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111","title_slug":"distinct-subsequences"}