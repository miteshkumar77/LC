{"id":511815627,"lang":"cpp","time":"9 months, 4 weeks","timestamp":1624405515,"status_display":"Accepted","runtime":"68 ms","url":"/submissions/detail/511815627/","is_pending":"Not Pending","title":"All Paths from Source Lead to Destination","memory":"29.9 MB","code":"class Solution {\npublic:\n    bool leadsToDestination(int n, vector<vector<int>>& edges, int source, int destination) {\n        vector<bool> pre(n, false); vector<bool> post(n, false);\n        vector<vector<int>> graph(n);\n        for (auto const& e : edges) {\n            graph[e[0]].push_back(e[1]);\n        }\n        \n        function<bool(int)> dfs = [&](int node) -> bool {\n            if (pre[node]) {\n                if (post[node]) return true;\n                return false;\n            }\n            pre[node] = true;\n            for (int neighbor : graph[node]) {\n                if (!dfs(neighbor)) return false;\n            }\n            if (node == destination) { post[node] = true; return true; }\n            if (graph[node].size() == 0) return false;\n            post[node] = true;\n            return true;\n        };\n        \n        return dfs(source);\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111","title_slug":"all-paths-from-source-lead-to-destination"}