{"id":346822435,"lang":"cpp","time":"1 year, 10 months","timestamp":1590873482,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/346822435/","is_pending":"Not Pending","title":"Longest Valid Parentheses","memory":"6.8 MB","code":"class Solution {\npublic:\n    int longestValidParentheses(string s) {\n        int sum = 0; \n        int last_idx = 0; \n        int longest_string = 0; \n        for (int i = 0; i < s.length(); ++i) {\n            if (s[i] == ')') {\n                --sum; \n            } else {\n                ++sum; \n            }\n            \n            if (sum < 0) {\n                sum = 0; \n                last_idx = i + 1; \n            } else if (sum == 0) {\n                if (i - last_idx + 1 > longest_string) {\n                    longest_string = i - last_idx + 1; \n                }\n            }\n        }\n        \n        sum = 0; \n        last_idx = s.length() - 1; \n        for (int i = s.length() - 1; i >= 0; --i) {\n            if (s[i] == '(') {\n                --sum; \n            } else {\n                ++sum; \n            }\n            \n            if (sum < 0) {\n                sum = 0; \n                last_idx = i - 1; \n            } else if (sum == 0) {\n                if (last_idx - i + 1 > longest_string) {\n                    longest_string = last_idx - i + 1; \n                }\n            }\n        }\n        return longest_string; \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-valid-parentheses"}