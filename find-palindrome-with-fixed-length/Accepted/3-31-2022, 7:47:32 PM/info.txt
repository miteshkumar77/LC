{"id":671276978,"lang":"cpp","time":"2 weeks, 3 days","timestamp":1648770452,"status_display":"Accepted","runtime":"747 ms","url":"/submissions/detail/671276978/","is_pending":"Not Pending","title":"Find Palindrome With Fixed Length","memory":"60 MB","code":"class Solution {\npublic:\n    vector<long long> kthPalindrome(vector<int>& queries, int intLength) {\n        int n = queries.size();\n        vector<string> v(n, string(intLength, '0'));\n        int p = (intLength + 1)/2;\n        cout << p << endl;\n        vector<long long> fact(p+1, 1);\n        for (int i = 1; i <= p; ++i) {\n            fact[i] = fact[i-1] * (i == p ? 9 : 10);\n        }\n        \n        for (int i = 0; i < n; ++i) {\n            if (queries[i] > fact[p]) {\n                v[i] = to_string(-1);\n                continue;\n            }\n            for (int j = 0; j < p; ++j) {\n                int f = (j == 0 ? 1 : 0);\n                int l = 9;\n                for (int k = f; k <= l; ++k) {\n                    int lo = 1 + (k - f) * fact[(p - j - 1)];\n                    int hi = (k + 1 - f) * fact[(p - j - 1)];\n                    if (lo <= queries[i] && hi >= queries[i]) {\n                        queries[i] -= (lo-1);\n                        v[i][j] = k + '0';\n                        break;\n                    }\n                }\n            }\n            int x = intLength % 2 == 0 ? p-1 : p-2;\n            for (int j = p; j < intLength; ++j, --x) {\n                v[i][j] = v[i][x];\n            }\n        }\n        vector<long long> ans(n);\n        for (int i = 0; i < n; ++i) ans[i] = stoll(v[i]);\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-palindrome-with-fixed-length"}