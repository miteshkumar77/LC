{"id":540037192,"lang":"cpp","time":"8Â months","timestamp":1629227599,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/540037192/","is_pending":"Not Pending","title":"Rectangle Overlap","memory":"7.9 MB","code":"class Solution {\npublic:\n    bool check_between(int L, int c1, int c2, int R, bool cont=true) {\n        return (L < c1 && R > c1) || (L < c2 && R > c2) || (cont && check_between(c1, L, R, c2, false));\n    }\n    \n    \n    \n    bool check(vector<int> const& r1, vector<int> const& r2) {\n        if (r1 == r2) return true;\n        int vertical_left_1 = r1[0];\n        int vertical_right_1 = r1[2];\n        int vertical_left_2 = r2[0];\n        int vertical_right_2 = r2[2];\n        int horizontal_bot_1 = r1[1];\n        int horizontal_top_1 = r1[3];\n        int horizontal_bot_2 = r2[1];\n        int horizontal_top_2 = r2[3];\n        bool vert = check_between(vertical_left_1, vertical_left_2, vertical_right_2, vertical_right_1);\n        bool horiz = check_between(horizontal_bot_1, horizontal_bot_2, horizontal_top_2, horizontal_top_1);\n        if (vertical_left_1 == vertical_left_2 && vertical_right_1 == vertical_right_2) {\n            return horiz;\n        } else if (horizontal_bot_1 == horizontal_bot_2 && horizontal_top_1 == horizontal_top_2) {\n            return vert;\n        }\n        return horiz && vert;\n    }\n    bool isRectangleOverlap(vector<int>& rec1, vector<int>& rec2) {\n        return check(rec1, rec2);\n    }\n};","compare_result":"1111111111111111111111111111111111111111","title_slug":"rectangle-overlap"}