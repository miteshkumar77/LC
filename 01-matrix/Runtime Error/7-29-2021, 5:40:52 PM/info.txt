{"id":530327075,"lang":"cpp","time":"8 months, 3 weeks","timestamp":1627594852,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/530327075/","is_pending":"Not Pending","title":"01 Matrix","memory":"N/A","code":"class Solution {\npublic:\n    vector<vector<int>> updateMatrix(vector<vector<int>>& mat) {\n        int m = mat.size(); int n = mat[0].size();\n        queue<array<int,3>> q;\n        vector<vector<bool>> visited(n, vector<bool>(m, false));\n        for (int i = 0; i < n; ++i) {\n            for (int j = 0; j < m; ++j) {\n                if (mat[i][j]==0) {\n                    q.push({i, j, 0});\n                }\n            }\n        }\n        array<int, 5> dirs{0, 1, 0, -1, 0};\n        while(!q.empty()) {\n            auto t = q.front(); q.pop();\n            if (t[0] < 0 || t[0] >= n || t[1] < 0 || t[1] >= m) continue;\n            if (visited[t[0]][t[1]]) continue;\n            visited[t[0]][t[1]] = true;\n            mat[t[0]][t[1]] = t[2];\n            for (int d = 0; d < 4; ++d) {\n                q.push({t[0] + dirs[d], t[1] + dirs[d+1], t[2] + 1});\n            }\n        }\n        return mat;\n    }\n};","compare_result":"1100000000000000000000000000000000000000000000000","title_slug":"01-matrix"}