{"id":456155369,"lang":"cpp","time":"1 year, 2 months","timestamp":1613354172,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/456155369/","is_pending":"Not Pending","title":"Replace Words","memory":"48.4 MB","code":"class Solution {\n    \n    \n    struct TN {\n        \n        TN() {\n            fill(letters.begin(), letters.end(), nullptr);\n            isEnd = false;\n        }\n        array<TN*, 26> letters;\n        bool isEnd;\n    };\n    \n    void insert(const string& wd, TN* head) {\n        for (char c : wd) {\n            if (!(head -> letters)[c - 'a']) {\n                (head -> letters)[c - 'a'] = new TN();\n            }\n            head = (head -> letters)[c - 'a'];\n        }\n        head -> isEnd = true;\n    }\npublic:\n    string replaceWords(vector<string>& dictionary, string sentence) {\n        int n = sentence.length(); \n        TN* head = new TN(); \n        for (const string& wd : dictionary) {\n            insert(wd, head); \n        }\n        string ans;\n        TN* curr = head;\n        \n        for (int i = 0; i < n; ++i) {\n            ans.push_back(sentence[i]);\n            if (sentence[i] == ' ') {\n                curr = head;\n                continue;\n            }\n            \n            curr = (curr -> letters)[sentence[i] - 'a'];\n            if (!curr) {\n                curr = head;\n                while(i + 1 < n && sentence[i] != ' ') {\n                    ans.push_back(sentence[++i]);\n                }\n            } else if (curr -> isEnd) {\n                curr = head; \n                while(i < n && sentence[i] != ' ') {\n                    ++i;\n                }\n                \n                if (i != n) ans.push_back(' ');\n                \n            }\n        }\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"replace-words"}