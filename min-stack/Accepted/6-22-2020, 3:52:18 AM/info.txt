{"id":356902882,"lang":"cpp","time":"1 year, 10 months","timestamp":1592812338,"status_display":"Accepted","runtime":"40 ms","url":"/submissions/detail/356902882/","is_pending":"Not Pending","title":"Min Stack","memory":"16.4 MB","code":"class MinStack {\npublic:\n    /** initialize your data structure here. */\n        stack<int> reg_s; \n        stack<int> min_stack; \n    MinStack() {\n        reg_s = stack<int>(); \n        min_stack = stack<int>(); \n    }\n    \n    void push(int x) {\n        reg_s.push(x);\n        if (reg_s.size() == 1) {\n            min_stack.push(x); \n        } else {\n            min_stack.push(min(x, min_stack.top())); \n        }\n    }\n    \n    void pop() {\n        reg_s.pop(); \n        min_stack.pop(); \n    }\n    \n    int top() {\n        return reg_s.top(); \n    }\n    \n    int getMin() {\n        return min_stack.top(); \n    }\n};\n\n/**\n * Your MinStack object will be instantiated and called as such:\n * MinStack* obj = new MinStack();\n * obj->push(x);\n * obj->pop();\n * int param_3 = obj->top();\n * int param_4 = obj->getMin();\n */","compare_result":"111111111111111111","title_slug":"min-stack"}