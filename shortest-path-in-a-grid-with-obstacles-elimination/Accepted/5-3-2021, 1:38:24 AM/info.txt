{"id":488178475,"lang":"cpp","time":"11 months, 2 weeks","timestamp":1620020304,"status_display":"Accepted","runtime":"24 ms","url":"/submissions/detail/488178475/","is_pending":"Not Pending","title":"Shortest Path in a Grid with Obstacles Elimination","memory":"16.6 MB","code":"class Solution {\npublic:\n    const array<int, 5> dirs{0, 1, 0, -1, 0};\n    int shortestPath(vector<vector<int>>& grid, int k) {\n        int m = grid.size(); int n = grid[0].size();\n        vector<vector<int>> ks(m, vector<int>(n, -1));\n        queue<array<int, 4>> q;\n        q.push({0, 0, k, 0});\n        while(!q.empty()) {\n            auto t = q.front(); q.pop();\n            if (t[0] < 0 || t[0] >= m || t[1] < 0 || t[1] >= n) continue;\n            t[2] -= grid[t[0]][t[1]];\n            if (ks[t[0]][t[1]] >= t[2]) continue;\n            if (t[0] == m - 1 && t[1] == n - 1) return t[3];\n            \n            ks[t[0]][t[1]] = t[2];\n            for (int i = 0; i < 4; ++i) q.push({t[0] + dirs[i], t[1] + dirs[i + 1], t[2], t[3] + 1});\n        }\n        return -1;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111","title_slug":"shortest-path-in-a-grid-with-obstacles-elimination"}