{"id":372752179,"lang":"cpp","time":"1 year, 8 months","timestamp":1595946106,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/372752179/","is_pending":"Not Pending","title":"Search a 2D Matrix II","memory":"N/A","code":"class Solution {\npublic:\n    bool searchMatrix(vector<vector<int>>& matrix, int target) {\n        if (matrix.size() == 0 || matrix[0].size() == 0) {\n            return false; \n        }\n        int L = 0; int R = matrix.size() - 1; \n        while(L <= R) {\n            int mid = L + (R - L)/2; \n            \n            int res = matrix[mid][binSearch(matrix[mid], 0, matrix[mid].size() - 1, target)]; \n            if (res > target) {\n                R = mid - 1; \n            } else if (res < target) {\n                L = mid + 1; \n            } else {\n                return true;\n            }\n        }\n        return false; \n    }\n    \n    \n    int binSearch(vector<int>& B, int L, int R, int target) {\n        while(L < R) {\n            // cout << L << ' ' << R << endl; \n            int mid = L + (R - L)/2; \n            if (B[mid] > target) {\n                R = mid - 1; \n            } else if (B[mid] < target) {\n                L = mid + 1; \n            } else {\n                return mid; \n            }\n        }\n        return L; \n    }\n    \n    \n};","compare_result":"111111111111111111111111111111111111110111111111111111111111111101111111111111111111111111111111111110110111111111111111110110101","title_slug":"search-a-2d-matrix-ii"}