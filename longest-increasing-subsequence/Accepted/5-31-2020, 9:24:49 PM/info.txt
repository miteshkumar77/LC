{"id":347365647,"lang":"cpp","time":"1 year, 10 months","timestamp":1590974689,"status_display":"Accepted","runtime":"76 ms","url":"/submissions/detail/347365647/","is_pending":"Not Pending","title":"Longest Increasing Subsequence","memory":"8 MB","code":"class Solution {\npublic:\n    int lengthOfLIS(vector<int>& nums) {\n        if (nums.size() == 1) {\n            return 1; \n        }\n        vector<int> dp(nums.size(), 1);\n        int max = 0; \n        for (int i = 1; i < nums.size(); ++i) {\n        \n            for (int j = 0; j < i; ++j) {\n                if (nums[j] < nums[i] && dp[j] + 1 > dp[i]) {\n                    dp[i] = dp[j] + 1; \n                }\n            }\n            if (dp[i] > max) {\n                max = dp[i]; \n            }\n        }\n        \n        return max; \n        \n        \n        \n        \n    }\n    \n    \n};","compare_result":"111111111111111111111111","title_slug":"longest-increasing-subsequence"}