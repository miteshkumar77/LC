{"id":535471622,"lang":"cpp","time":"8 months, 1 week","timestamp":1628465245,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/535471622/","is_pending":"Not Pending","title":"Longest Increasing Subsequence","memory":"10.4 MB","code":"class Solution {\npublic:\n    int lengthOfLIS(vector<int>& nums) {\n        vector<int> stax;\n        int l, r, ans, mid;\n        for (int i = 0; i < nums.size(); ++i) {\n            l = 0;\n            r = (int)stax.size()-1;\n            ans = stax.size();\n            while(l <= r) {\n                mid = l + (r - l)/2;\n                if (stax[mid] >= nums[i]) {\n                    ans = mid;\n                    r = mid - 1;\n                } else {\n                    l = mid + 1;\n                }\n            }\n            if (ans == stax.size()) {\n                stax.push_back(nums[i]);\n            } else {\n                stax[ans] = nums[i];\n            }\n        }\n        return stax.size();\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111","title_slug":"longest-increasing-subsequence"}