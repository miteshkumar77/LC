{"id":628380252,"lang":"cpp","time":"2 months, 3 weeks","timestamp":1643216974,"status_display":"Accepted","runtime":"136 ms","url":"/submissions/detail/628380252/","is_pending":"Not Pending","title":"All Elements in Two Binary Search Trees","memory":"84.6 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> getAllElements(TreeNode* root1, TreeNode* root2) {\n        stack<TreeNode*> s1;\n        stack<TreeNode*> s2;\n        vector<int> ans;\n        while(root1 || root2 || !s1.empty() || !s2.empty()) {\n            if (root1) {\n                s1.push(root1);\n                root1 = root1->left;\n            } else if (root2) {\n                s2.push(root2);\n                root2 = root2->left;\n            } else {\n                if (s1.empty() || (!s2.empty() && s2.top()->val <= s1.top()->val)) {\n                    ans.push_back(s2.top()->val);\n                    root2 = s2.top()->right;\n                    s2.pop();\n                } else {\n                    ans.push_back(s1.top()->val);\n                    root1 = s1.top()->right;\n                    s1.pop();\n                }\n            }\n        }\n        return ans;\n    }\n\n};","compare_result":"111111111111111111111111111111111111111111111111","title_slug":"all-elements-in-two-binary-search-trees"}