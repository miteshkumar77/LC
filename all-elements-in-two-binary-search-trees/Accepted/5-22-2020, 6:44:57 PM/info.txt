{"id":343253342,"lang":"cpp","time":"1 year, 11 months","timestamp":1590187497,"status_display":"Accepted","runtime":"220 ms","url":"/submissions/detail/343253342/","is_pending":"Not Pending","title":"All Elements in Two Binary Search Trees","memory":"83.2 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> getAllElements(TreeNode* root1, TreeNode* root2) {\n         \n        vector<int> res; \n        stack<TreeNode*> s1; \n        stack<TreeNode*> s2; \n        res.reserve(10000); \n        \n        while((!s1.empty() || root1) || (!s2.empty() || root2)) {\n            if (root1) {\n                s1.push(root1); \n                root1 = root1 -> left; \n            } else if (root2) {\n                s2.push(root2); \n                root2 = root2 -> left; \n            } else {\n                if ((!s1.empty()) && (s2.empty() || s1.top() -> val < s2.top() -> val)) {\n                    res.push_back(s1.top() -> val); \n                    root1 = s1.top() -> right; \n                    s1.pop(); \n                    \n                } else {\n                    res.push_back(s2.top() -> val); \n                    root2 = s2.top() -> right; \n                    s2.pop(); \n                }\n            }\n        }\n        \n        return res; \n    }\n    \n    \n};","compare_result":"111111111111111111111111111111111111111111111111","title_slug":"all-elements-in-two-binary-search-trees"}