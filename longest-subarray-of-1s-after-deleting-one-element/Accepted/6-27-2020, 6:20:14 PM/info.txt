{"id":359147975,"lang":"cpp","time":"1 year, 9 months","timestamp":1593296414,"status_display":"Accepted","runtime":"96 ms","url":"/submissions/detail/359147975/","is_pending":"Not Pending","title":"Longest Subarray of 1's After Deleting One Element","memory":"39.7 MB","code":"class Solution {\npublic:\n    int longestSubarray(vector<int>& nums) {\n        \n        int n = nums.size() - 1; \n        \n        if (n == 0) {\n            return 0; \n        }\n        vector<int> pref(nums.size(), 0); \n        vector<int> suff(nums.size(), 0); \n        pref[0] = nums[0]; suff[n] = nums[n]; \n        \n        for (int i = 1; i <= n; ++i) {\n            if (nums[i] == 0) {\n                pref[i] = 0; \n            } else {\n                 \n                pref[i] = pref[i - 1] + 1; \n                \n            }\n            \n            if (nums[n - i] == 0) {\n                suff[n - i] = 0; \n            } else {\n                suff[n - i] = suff[n - i + 1] + 1; \n            }\n        }\n        \n        \n        int ans = max(pref[n - 1], suff[1]); \n        \n        \n        for (int i = 1; i < n; ++i) {\n            ans = max(ans, pref[i - 1] + suff[i + 1]); \n        }\n        return ans; \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-subarray-of-1s-after-deleting-one-element"}