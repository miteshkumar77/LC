{"id":508532696,"lang":"cpp","time":"10Â months","timestamp":1623806487,"status_display":"Accepted","runtime":"300 ms","url":"/submissions/detail/508532696/","is_pending":"Not Pending","title":"Shortest Distance to Target Color","memory":"124.4 MB","code":"class Solution {\npublic:\n    vector<int> shortestDistanceColor(vector<int>& colors, vector<vector<int>>& queries) {\n        int n = colors.size();\n        vector<array<int,3>> left(n, {(int)1e9, (int)1e9, (int)1e9});\n        vector<array<int,3>> right(n, {(int)1e9, (int)1e9, (int)1e9});\n        for (int i = 0; i < n; ++i) {\n            left[i][colors[i]-1] = 0;\n            right[i][colors[i]-1] = 0;\n        } \n        for (int i = 1; i < n; ++i) {\n            for (int j = 0; j < 3; ++j) {\n                left[i][j] = min(left[i][j], left[i-1][j]+1);\n            }\n        }\n        for (int i = n - 2; i >= 0; --i) {\n            for (int j = 0; j < 3; ++j) {\n                right[i][j] = min(right[i][j], right[i+1][j]+1);\n            }\n        }\n        vector<int> ans(queries.size());\n        for (int i = 0; i < queries.size(); ++i) {\n            ans[i] = min(left[queries[i][0]][queries[i][1]-1],\n                        right[queries[i][0]][queries[i][1]-1]);\n            ans[i] = ans[i] >= (int)1e5 ? -1 : ans[i];\n        }\n        return ans;\n    }\n};","compare_result":"1111111111111111111","title_slug":"shortest-distance-to-target-color"}