{"id":475720852,"lang":"c","time":"1Â year","timestamp":1617414940,"status_display":"Accepted","runtime":"68 ms","url":"/submissions/detail/475720852/","is_pending":"Not Pending","title":"Sort an Array","memory":"14.6 MB","code":"\nvoid swep(int* a, int* b) {\n    int swap;\n    swap = *a;\n    *a = *b;\n    *b = swap;\n}\n\nint cmp(int* a, int* b) {\n    if (*a < *b) {\n        return -1;\n    } else if (*a > *b) {\n        return 1;\n    } else {\n        return 0;\n    }\n}\n\nint* partition(int* l, int* r, int pivot) {\n    \n    int* c = l;\n    \n    while(c <= r) {\n        if (cmp(l, &pivot) == -1) {\n            ++l;\n            if (c < l) {\n                c = l;\n            }\n            continue;\n        }\n        if (cmp(r, &pivot) == 1) {\n            --r;\n            continue;\n        }\n        if (c < l) {\n            c = l;\n            continue;\n        }\n        if (cmp(c, &pivot) == -1) {\n            swep(c, l);\n            ++l;\n            continue;\n        } \n        if (cmp(c, &pivot) == 1) {\n            swep(c, r);\n            --r;\n            continue;\n        }\n        ++c;\n    }\n    return r;\n}\n\nvoid qsurt(int* l, int* r) {\n    if (l >= r) { return; }\n    int* piv = rand() % (r - l) + l;\n    piv = partition(l, r, *piv);\n    qsurt(l, piv - 1);\n    qsurt(piv + 1, r);\n}\n\n/**\n * Note: The returned array must be malloced, assume caller calls free().\n */\nint* sortArray(int* nums, int numsSize, int* returnSize){\n    qsurt(nums, nums + numsSize - 1);\n    *returnSize = numsSize;\n    return nums;\n}","compare_result":"11111111111","title_slug":"sort-an-array"}