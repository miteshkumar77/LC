{"id":394927242,"lang":"cpp","time":"1 year, 7 months","timestamp":1599971003,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/394927242/","is_pending":"Not Pending","title":"Largest Divisible Subset","memory":"N/A","code":"class Solution {\npublic:\n    vector<int> largestDivisibleSubset(vector<int>& nums) {\n        sort(nums.begin(), nums.end()); \n        vector<int> prev(nums.size(), -1); \n        vector<int> sz(nums.size(), 1); \n        int maxr = 0; \n        for (int i = 1; i < nums.size(); ++i) {\n            for (int j = 0; j < i; ++j) {\n                if (nums[i] % nums[j] == 0) {\n                    if (sz[j] + 1 > sz[i]) {\n                        sz[i] = sz[j] + 1; \n                        prev[i] = j; \n                        if (sz[maxr] < sz[i]) {\n                            maxr = i; \n                        }    \n                    }\n                }\n            }\n        }\n        \n        vector<int> ans; \n        while(maxr != -1) {\n            ans.push_back(nums[maxr]); \n            maxr = prev[maxr]; \n        }\n        return ans; \n    }\n};","compare_result":"1110000000000000000000000000000000000000000","title_slug":"largest-divisible-subset"}