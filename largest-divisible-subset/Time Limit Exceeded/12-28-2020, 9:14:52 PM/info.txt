{"id":435792035,"lang":"cpp","time":"1 year, 3 months","timestamp":1609208092,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/435792035/","is_pending":"Not Pending","title":"Largest Divisible Subset","memory":"N/A","code":"class Solution {\npublic:\n    vector<int> largestDivisibleSubset(vector<int>& nums) {\n        vector<int> box;\n        vector<int> ans;\n        function<void(int)> bt = [&](int i) -> void {\n            if (i == nums.size()) {\n                if (box.size() > ans.size()) {\n                    ans = box;\n                }\n                return;\n            }\n            \n            bool ok = true;\n            for (int x : box) {\n                if (x % nums[i] != 0 && nums[i] % x != 0) {\n                    // cout << nums[i] << endl;\n                    // for (int x : box) cout << x << ' ';\n                    // cout << endl;\n                    \n                    ok = false;\n                    break;\n                }\n            }\n\n            if (ok) {\n                box.push_back(nums[i]);\n                bt(i + 1);\n                box.pop_back();\n                bt(i + 1);\n            } else {\n                bt(i + 1);\n            }\n                \n                \n        };\n        \n        bt(0); \n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111000","title_slug":"largest-divisible-subset"}