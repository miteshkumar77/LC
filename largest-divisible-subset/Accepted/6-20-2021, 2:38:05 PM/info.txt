{"id":510747366,"lang":"cpp","time":"10Â months","timestamp":1624214285,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/510747366/","is_pending":"Not Pending","title":"Largest Divisible Subset","memory":"8.8 MB","code":"class Solution {\npublic:\n    vector<int> largestDivisibleSubset(vector<int>& nums) {\n        sort(nums.begin(), nums.end());\n        int n = nums.size();\n        vector<int> dp(n, 1);\n        vector<int> pr(n, -1);\n        int idx = 0;\n        for (int i = 1; i < n; ++i) {\n            for (int j = 0; j < i; ++j) {\n                if (nums[i] % nums[j] == 0 && dp[i] < dp[j]+1) {\n                    dp[i] = dp[j] + 1; pr[i] = j;\n                }\n            }\n            if (dp[i] > dp[idx]) {\n                idx = i;\n            }\n        }\n        vector<int> ans;\n        ans.reserve(dp[idx]);\n        while(idx >= 0) {\n            ans.push_back(nums[idx]);\n            idx = pr[idx];\n        }\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111","title_slug":"largest-divisible-subset"}