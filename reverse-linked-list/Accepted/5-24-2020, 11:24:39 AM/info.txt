{"id":344029161,"lang":"cpp","time":"1Â year, 10Â months","timestamp":1590333879,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/344029161/","is_pending":"Not Pending","title":"Reverse Linked List","memory":"7.9 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* reverseList(ListNode* head) {\n        \n        if (!head) {\n            return head; \n        }\n        ListNode* prev = nullptr;\n        ListNode* curr = head; \n        ListNode* next = nullptr; \n        while(curr -> next) {\n            cout << curr -> val << endl; \n            next = curr -> next; \n            curr -> next = prev; \n            prev = curr; \n            curr = next;\n        }\n        \n        curr -> next = prev; \n        \n        return curr; \n    }\n};","compare_result":"111111111111111111111111111","title_slug":"reverse-linked-list"}