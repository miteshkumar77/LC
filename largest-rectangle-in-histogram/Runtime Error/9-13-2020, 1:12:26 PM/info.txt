{"id":395160601,"lang":"cpp","time":"1 year, 7 months","timestamp":1600017146,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/395160601/","is_pending":"Not Pending","title":"Largest Rectangle in Histogram","memory":"N/A","code":"class Solution {\npublic:\n    typedef array<int,2> pii; \n    int largestRectangleArea(vector<int>& heights) {\n        vector<int> a1 = check(heights); \n        reverse(heights.begin(), heights.end()); \n        vector<int> a2 = check(heights);\n        reverse(a1.begin(), a1.end()); \n        \n        // for (int i : a1) cout << i << ' ';\n        // cout << endl; \n        // for (int i : a2) cout << i << ' ';\n        // cout << endl; \n        \n        int ans = 0; \n        \n        for (int i = 0; i < heights.size(); ++i) {\n            ans = max(ans, a1[i] + a2[i] - heights[i]); \n        }\n        return ans; \n    }\n    \n    \n    vector<int> check(vector<int>& heights) {\n        stack<pii> m;  \n        vector<int> ans(heights.size()); \n        for (int i = 0; i < heights.size(); ++i) {\n            pii cur{heights[i], 1}; \n            while(!m.empty() && m.top()[0] >= cur[0]) {\n                cur[1] += m.top()[1]; \n                m.pop(); \n            }\n            ans[i] = cur[1] * cur[0]; \n            m.push(cur); \n        }\n        return ans; \n    }\n};","compare_result":"111111111111111111111111111111111111000000000000000000000000000000000000000000000000000000000000","title_slug":"largest-rectangle-in-histogram"}