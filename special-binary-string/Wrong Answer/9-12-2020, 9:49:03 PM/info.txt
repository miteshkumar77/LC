{"id":394853771,"lang":"cpp","time":"1 year, 7 months","timestamp":1599961743,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/394853771/","is_pending":"Not Pending","title":"Special Binary String","memory":"N/A","code":"class Solution {\npublic:\n    \n    \n    \n    string ss(string& s, int L, int R) {\n        return s.substr(L, R - L + 1); \n    }\n    \n    string makeLargestSpecial(string S) {\n        string ans = S; \n        \n        unordered_set<string> seen; \n        function<void(string)> bt = [&](string t) -> void {\n            if (seen.find(t) != seen.end()) {\n                return; \n            }\n            \n            if (t > ans) {\n                ans = t; \n            }\n            seen.insert(t); \n            \n            unordered_map<int,vector<int>> vmap; \n            int cmp = 0; \n            \n            for (int i = 0; i < t.length(); ++i) {\n                if (t[i] == '1') {\n                    ++cmp; \n                    vmap[cmp].push_back(i); \n                } else {\n                    \n                    if (vmap.find(cmp) != vmap.end()) {\n                        for (int st : vmap[cmp]) {\n                            \n                            int cmp1 = 0; \n                            for (int x = st; x <= i; ++x) {\n                                if (t[x] == '1') {\n                                    ++cmp1; \n                                } else {\n                                    --cmp1; \n                                    if (cmp1 == 0) {\n                                        string post = ss(t, st, x); \n                                        string pre = ss(t, x + 1, i); \n                                        if (pre > post) {\n                                            bt(ss(t, 0, st - 1) + pre + post + ss(t, i + 1, t.length() - 1)); \n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }; \n                    \n                    --cmp; \n                }\n            }\n        };\n        \n        bt(S); \n        return ans; \n    }\n};","compare_result":"11111111111111111011111111111111101110010000001000010000000000000000000000000000000000","title_slug":"special-binary-string"}