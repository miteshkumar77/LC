{"id":359953609,"lang":"cpp","time":"1 year, 9 months","timestamp":1593462250,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/359953609/","is_pending":"Not Pending","title":"Sliding Window Maximum","memory":"N/A","code":"class Solution {\n    typedef pair<int, int> pii; \n\n    \nprivate: \n    class MonoQueue {\n    public: \n        deque<pii> monoq; \n        MonoQueue() {\n            monoq = deque<pii>(); \n        }\n        \n        void enqueue(int val) {\n            pii newp {val, 0}; \n            while(!monoq.empty() && val > monoq.back().first) {\n                newp.second += monoq.back().second; \n                monoq.pop_back(); \n            }\n            \n            if (!monoq.empty() && val == monoq.back().first) {\n                monoq.back().second += newp.second; \n            } else {\n                monoq.push_back(newp); \n            }\n        }\n        \n        int pop() {\n            \n            int ret = monoq.front().first; \n            if ((--monoq.front().second) == 0) {\n                monoq.pop_front(); \n            }\n            return ret; \n        }\n    };\npublic:\n    vector<int> maxSlidingWindow(vector<int>& nums, int k) {\n        MonoQueue mq;  \n        for (int i = 0; i < k; ++i) {\n            mq.enqueue(nums[i]); \n        }\n        \n        vector<int> ans(nums.size() - k + 1);\n        for (int i = 0; i < ans.size() - 1; ++i) {\n            ans[i] = mq.pop(); \n            mq.enqueue(nums[i + k]); \n        }\n        ans[ans.size() - 1] = mq.pop(); \n        return ans; \n    }\n};","compare_result":"110110011010000101","title_slug":"sliding-window-maximum"}