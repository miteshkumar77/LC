{"id":507524992,"lang":"cpp","time":"10 months, 1 week","timestamp":1623625349,"status_display":"Accepted","runtime":"248 ms","url":"/submissions/detail/507524992/","is_pending":"Not Pending","title":"Maximum Number of Removable Characters","memory":"71.9 MB","code":"class Solution {\npublic:\n    bool isSubsequence(string& s, string& p) {\n        int i = 0;\n        for (char c : s) {\n            if (p[i] == c) ++i;\n            if (i == p.length()) return true;\n        }\n        return false;\n    }\n    \n    bool check(string& s, string& p, vector<int>& removable, int k) {\n        for (int i = 0; i < k; ++i) {\n            s[removable[i]] = toupper(s[removable[i]]);\n        }\n        bool res = isSubsequence(s, p);\n        for (int i = 0; i < k; ++i) {\n            s[removable[i]] = tolower(s[removable[i]]);\n        }\n        return res;\n    }\n    \n    int maximumRemovals(string s, string p, vector<int>& removable) {\n        int l = 1;\n        int r = removable.size();\n        int ans = 0;\n        int mid;\n        while(l <= r) {\n            mid = l + (r - l)/2;\n            if (check(s, p, removable, mid)) {\n                ans = mid;\n                l = mid + 1;\n            } else {\n                r = mid - 1;\n            }\n        }\n        \n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-number-of-removable-characters"}