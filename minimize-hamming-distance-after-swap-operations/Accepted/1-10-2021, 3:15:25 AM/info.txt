{"id":441065832,"lang":"cpp","time":"1 year, 3 months","timestamp":1610266525,"status_display":"Accepted","runtime":"1340 ms","url":"/submissions/detail/441065832/","is_pending":"Not Pending","title":"Minimize Hamming Distance After Swap Operations","memory":"214.3 MB","code":"class Solution {\npublic:\n    int minimumHammingDistance(vector<int>& source, vector<int>& target, vector<vector<int>>& allowedSwaps) {\n        int n = source.size();\n        vector<int> parent(n, -1);\n        vector<unordered_set<int>> children(n, unordered_set<int>());\n        \n        function<int(int)> find = [&](int node) -> int {\n            if (parent[node] == -1) return node;\n            parent[node] = find(parent[node]);\n            return parent[node];\n        };\n        function<bool(int,int)> onion = [&](int a, int b) -> bool {\n            int pa = find(a);\n            int pb = find(b);\n            if (pa == pb) return false;\n            parent[pa] = pb;\n            return true;\n        };\n        \n        for (auto sw : allowedSwaps) {\n            onion(sw[0], sw[1]);\n        }\n        \n        for (int i = 0; i < n; ++i) {\n            children[find(i)].insert(i);\n        }\n        \n        int ans = 0;\n        for (int i = 0; i < n; ++i) {\n            if (parent[i] == -1) {\n                unordered_map<int,int> ct_source;\n                unordered_map<int,int> ct_target;\n                for (int index : children[i]) {\n                    // cout << index << ' ';\n                    ++ct_source[source[index]];\n                    ++ct_target[target[index]];\n                }\n                // cout << endl;\n                for (auto p : ct_source) {\n                    if (ct_target.find(p.first) != ct_target.end()) {\n                        ans += min(p.second, ct_target[p.first]);\n                    }\n                }\n            }\n        }\n        \n        return n - ans;\n        \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimize-hamming-distance-after-swap-operations"}