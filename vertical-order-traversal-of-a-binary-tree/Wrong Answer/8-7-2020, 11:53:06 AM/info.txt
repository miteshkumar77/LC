{"id":377487264,"lang":"cpp","time":"1 year, 8 months","timestamp":1596815586,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/377487264/","is_pending":"Not Pending","title":"Vertical Order Traversal of a Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>> verticalTraversal(TreeNode* root) {\n        vector<vector<int>> ans; \n        unordered_map<int, vector<pair<int, int>>> buckets; \n        int minc = 0; \n        int maxc = 0; \n        function<void(TreeNode*,int)> bfs = [&](TreeNode* root, int x) {\n            \n            queue<tuple<TreeNode*,int,int>> q; \n            q.push(make_tuple(root, 0, 0));\n            \n            while(!q.empty()) {\n                TreeNode* r = get<0>(q.front()); \n                int c = get<1>(q.front()); \n                int clk = get<2>(q.front()); \n                minc = min(minc, c); \n                maxc = max(maxc, c); \n                q.pop(); \n                if (buckets[c].size() != 0 && buckets[c].back().second == clk) {\n                    int tmp = buckets[c].back().first; \n                    buckets[c].back().first = min(tmp, r -> val); \n                    buckets[c].push_back(make_pair(max(tmp, r -> val), clk)); \n                } else {\n                    buckets[c].push_back(make_pair(r -> val, clk)); \n                }\n                \n                if (r -> left) {\n                    q.push(make_tuple(r -> left, c - 1, clk + 1)); \n                }\n                if (r -> right) {\n                    q.push(make_tuple(r -> right, c + 1, clk + 1)); \n                }\n            }\n            \n        };\n        bfs(root, 0); \n        for (int i = minc; i <= maxc; ++i) {\n            vector<int> lvl; \n            for (auto p : buckets[i]) {\n                lvl.push_back(p.first); \n            }\n            ans.push_back(lvl); \n        }\n        return ans; \n        \n    }\n};","compare_result":"111111111111111111011000000000","title_slug":"vertical-order-traversal-of-a-binary-tree"}