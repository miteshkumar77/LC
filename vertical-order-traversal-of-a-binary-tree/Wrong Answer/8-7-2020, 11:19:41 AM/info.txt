{"id":377476261,"lang":"cpp","time":"1 year, 8 months","timestamp":1596813581,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/377476261/","is_pending":"Not Pending","title":"Vertical Order Traversal of a Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>> verticalTraversal(TreeNode* root) {\n        vector<vector<int>> ans; \n        unordered_map<int, vector<int>> buckets; \n        int minc = 0; \n        int maxc = 0; \n        function<void(TreeNode*,int)> dfs = [&](TreeNode* root, int c) {\n            \n            if (!root) {\n                return; \n            }\n            minc = min(minc, c); \n            maxc = max(maxc, c); \n            buckets[c].push_back(root -> val); \n            dfs(root -> left, c - 1); \n            dfs(root -> right, c + 1); \n        };\n        dfs(root, 0); \n        for (int i = minc; i <= maxc; ++i) {\n            ans.push_back(buckets[i]); \n        }\n        return ans; \n        \n    }\n};","compare_result":"111111111011000000000000000000","title_slug":"vertical-order-traversal-of-a-binary-tree"}