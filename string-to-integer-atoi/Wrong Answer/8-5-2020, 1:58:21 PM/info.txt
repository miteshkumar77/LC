{"id":376573560,"lang":"c","time":"1 year, 8 months","timestamp":1596650301,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/376573560/","is_pending":"Not Pending","title":"String to Integer (atoi)","memory":"N/A","code":"\n\nint myAtoi(char * str){\n    size_t n = strlen(str); \n    if (n == 0) {\n        return 0; \n    }\n    bool neg = false; \n    bool found_num = false; \n    int start_idx = -1; \n    int end_idx = -1; \n    \n    char intmax[] = \"2147483647\"; \n    char intmin[] = \"2147483648\";\n    \n    int ans = 0; \n    int acc = 1; \n    for (int i = 0; i < n; ++i) {\n        \n        if (found_num && !isdigit(*(str + i))) {\n            break; \n        }\n        if (((*(str + i)) == '-' || (*(str + i) == '+')) && (i + 1 < n) && isdigit(*(str + i + 1))) {\n            neg = (*(str + i)) == '-'; \n            continue; \n        }\n        \n        if (isdigit(*(str + i))) {\n            if (!found_num) {\n                start_idx = i; \n            }\n            end_idx = i; \n            found_num = true; \n        }\n        \n        if ((*(str + i)) == ' ' && !found_num) {\n            continue; \n        }\n        \n        if (!isdigit(*(str + i)) && !found_num) {\n            return 0; \n        }        \n    }\n    \n   \n    \n    if(end_idx - start_idx + 1 > 10) {\n        return neg?(-2147483648):(2147483647);  \n    }\n    \n    if (end_idx - start_idx + 1 == 10) {\n        int dig = 0; \n\n        for (int i = start_idx; i <= end_idx; ++i) {\n            if (!neg) {\n                if (intmax[dig] < str[i]) {\n                    return 2147483647; \n                } else if (intmax[dig] > str[i]) {\n                    break; \n                }\n            } else {\n                if (intmin[dig] < str[i]) {\n                    return -2147483648; \n                } else if (intmin[dig] > str[i]) {\n                    break; \n                }\n            }\n            ++dig; \n        }\n    }\n    \n    \n    for (int i = end_idx; i >= start_idx; --i) {\n        \n        if (neg) {\n            ans -= (str[i] - '0') * acc; \n        } else {\n            ans += (str[i] - '0') * acc; \n        }\n        if (i != start_idx) {\n            acc *= 10;\n        }\n    }\n    \n    \n    return ans; \n    \n    \n}","compare_resulttitle_slug":"string-to-integer-atoi"}