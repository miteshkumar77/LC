{"id":430696250,"lang":"cpp","time":"1 year, 4 months","timestamp":1607984593,"status_display":"Accepted","runtime":"152 ms","url":"/submissions/detail/430696250/","is_pending":"Not Pending","title":"Palindrome Partitioning","memory":"49.3 MB","code":"class Solution {\npublic:\n    \n    vector<vector<string>> partition(string s) {\n        int n = s.length();\n        function<bool(int,int)> isPal = [&](int l, int r) -> bool {\n            while(l < r) {\n                if (s[l++] != s[r--]) {\n                    return false;\n                }\n            }\n            return true;\n        };\n        \n        vector<vector<string>> ans;\n        function<void(int,vector<string>&)> sol = [&](int i, vector<string>& box) -> void {\n            if (i == n) {\n                ans.push_back(box);\n                return;\n            } \n            \n            for (int idx = i; idx < n; ++idx) {\n                if (isPal(i, idx)) {\n                    // cout << i << ' ' << idx << endl;\n                    box.push_back(s.substr(i, idx - i + 1));\n                    sol(idx + 1, box);\n                    box.pop_back();\n                }\n            }\n        };\n        \n        vector<string> tmp;\n        sol(0, tmp);\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111","title_slug":"palindrome-partitioning"}