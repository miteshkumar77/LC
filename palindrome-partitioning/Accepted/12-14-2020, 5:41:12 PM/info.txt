{"id":430700469,"lang":"cpp","time":"1 year, 4 months","timestamp":1607985672,"status_display":"Accepted","runtime":"388 ms","url":"/submissions/detail/430700469/","is_pending":"Not Pending","title":"Palindrome Partitioning","memory":"212.9 MB","code":"class Solution {\npublic:\n    \n    vector<vector<string>> partition(string s) {\n        int n = s.length();\n        function<bool(int,int)> isPal = [&](int l, int r) -> bool {\n            while(l < r) {\n                if (s[l++] != s[r--]) {\n                    return false;\n                }\n            }\n            return true;\n        };\n        \n        \n        vector<vector<vector<string>>> dp(n + 1, vector<vector<string>>()); \n        dp[0].push_back(vector<string>());\n        \n        for (int i = 0; i < n; ++i) {\n            for (int j = 0; j <= i; ++j) {\n                if (isPal(j, i)) {\n                    for (auto v : dp[j]) {\n                        dp[i + 1].push_back(v);\n                        dp[i + 1].back().push_back(s.substr(j, i - j + 1));\n                    }\n                }\n            }\n        }\n        \n        return dp.back();\n        \n    }\n};","compare_result":"11111111111111111111111111111111","title_slug":"palindrome-partitioning"}