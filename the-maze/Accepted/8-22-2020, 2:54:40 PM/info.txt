{"id":384779267,"lang":"cpp","time":"1 year, 7 months","timestamp":1598122480,"status_display":"Accepted","runtime":"152 ms","url":"/submissions/detail/384779267/","is_pending":"Not Pending","title":"The Maze","memory":"19.5 MB","code":"class Solution {\npublic:\n    bool hasPath(vector<vector<int>>& maze, vector<int>& start, vector<int>& destination) {\n        vector<vector<bool>> visited(maze.size(), vector<bool>(maze[0].size(), false)); \n        int M = visited.size(); \n        int N = visited[0].size(); \n        array<int, 5> dirs{0, 1, 0, -1, 0}; \n        \n        \n        function<bool(int,int)> checkPos = [&](int i, int j) -> bool {\n            return i >= 0 && j >= 0 && i < M && j < N && maze[i][j] == 0; \n        };\n        \n        function<bool(int,int)> dfs = [&](int i, int j) -> bool {\n            \n            if (i == destination[0] && j == destination[1]) {\n                return true; \n            }\n            \n            if (visited[i][j]) {\n                return false; \n            }\n            \n            visited[i][j] = true; \n            for (int x = 0; x < 4; ++x) {\n                int ni = i; \n                int nj = j; \n                while(checkPos(ni + dirs[x], nj + dirs[x + 1])) {\n                    ni += dirs[x]; \n                    nj += dirs[x + 1]; \n                }\n                \n                if (dfs(ni, nj)) {\n                    return true; \n                }\n            }\n            return false; \n        };\n        \n        return dfs(start[0], start[1]);\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"the-maze"}