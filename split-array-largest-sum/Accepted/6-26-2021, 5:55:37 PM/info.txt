{"id":513636311,"lang":"cpp","time":"9 months, 3 weeks","timestamp":1624744537,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/513636311/","is_pending":"Not Pending","title":"Split Array Largest Sum","memory":"7.3 MB","code":"class Solution {\npublic:\n    \n    bool check(vector<int>& nums, int t, int m) {\n        int s = 1;\n        int n = nums.size();\n        int sm = 0;\n        for (int i = 0; i < n; ++i) {\n            if (nums[i] + sm > t) {\n                ++s;\n                sm = nums[i];\n                if (sm > t || s > m) return false;\n            } else {\n                sm += nums[i];\n            }\n        }\n        return true;\n    }\n    \n    int splitArray(vector<int>& nums, int m) {\n        int l = 0;\n        int r = accumulate(nums.begin(), nums.end(), 0);\n        int ans = r; int mid;\n        while(l <= r) {\n            mid = l + (r - l)/2;\n            if (check(nums, mid, m)) {\n                ans = mid;\n                r = mid - 1;\n            } else {\n                l = mid + 1;\n            }\n        }\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111","title_slug":"split-array-largest-sum"}