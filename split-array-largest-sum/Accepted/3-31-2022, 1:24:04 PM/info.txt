{"id":671112452,"lang":"cpp","time":"2 weeks, 4 days","timestamp":1648747444,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/671112452/","is_pending":"Not Pending","title":"Split Array Largest Sum","memory":"7.1 MB","code":"class Solution {\npublic:\n    bool check(vector<int>& nums, int m, int t) {\n        int n = nums.size();\n        int acc = 0;\n        for (int i = 0; i < n; ++i) {\n            if (nums[i] > t) return false;\n            if ((acc += nums[i]) > t) {\n                if (--m == 0) return false;\n                acc = nums[i];\n            }\n        }\n        return true;\n    }\n    int splitArray(vector<int>& nums, int m) {\n        int l = *max_element(nums.begin(), nums.end());\n        int r = accumulate(nums.begin(), nums.end(), 0);\n        int mid;\n        while(l < r) {\n            mid = l + (r - l)/2;\n            if (check(nums, m, mid)) {\n                r = mid;\n            } else {\n                l = mid + 1;\n            }\n        }\n        return l;\n    }\n};","compare_result":"111111111111111111111111111111","title_slug":"split-array-largest-sum"}