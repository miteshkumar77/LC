{"id":399943713,"lang":"cpp","time":"1 year, 6 months","timestamp":1600918713,"status_display":"Accepted","runtime":"404 ms","url":"/submissions/detail/399943713/","is_pending":"Not Pending","title":"Make Sum Divisible by P","memory":"67.5 MB","code":"class Solution {\npublic:\n    int minSubarray(vector<int>& nums, int p) {\n        int n = nums.size(); \n        \n        int fwdsum = 0;\n        for (int i : nums) fwdsum = (fwdsum + i) % p; \n        \n        int bwdsum = 0; \n        unordered_map<int,int> seen; \n        seen[0] = -1; \n        int ans = INT_MAX; \n        // cout << fwdsum << ' ' << bwdsum << endl; \n        for (int i = 0; i < n; ++i) {\n            int r = (p - fwdsum) % p; \n            if (seen.find(r) != seen.end()) {\n                ans = min(ans, i - seen[r] - 1); \n            }\n            fwdsum = (fwdsum % p + p - nums[i] % p) % p; \n            bwdsum = (bwdsum + nums[i]) % p; \n            // cout << fwdsum << ' ' << bwdsum << endl; \n            seen[bwdsum] = i; \n        }\n        int r = (p - fwdsum) % p; \n        ans = min(ans, n - seen[r] - 1);\n        \n        return ans == INT_MAX || ans == n?-1:ans; \n        \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"make-sum-divisible-by-p"}