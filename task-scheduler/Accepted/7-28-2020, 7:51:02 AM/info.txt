{"id":372710876,"lang":"cpp","time":"1 year, 8 months","timestamp":1595937062,"status_display":"Accepted","runtime":"504 ms","url":"/submissions/detail/372710876/","is_pending":"Not Pending","title":"Task Scheduler","memory":"36.6 MB","code":"class Solution {    \n    \n    \n    \n    \n    \npublic:\n    int leastInterval(vector<char>& tasks, int n) {\n        int ans = 0; \n        priority_queue<int, vector<int>, less<int>> pq; \n        unordered_map<char, int> ct; \n        for (char c : tasks) {\n            ct[c]++;\n        }\n        \n        for (pair<char, int> p : ct) {\n            pq.push(p.second); \n        }\n        queue<int> awaited; \n        while(!pq.empty()) {\n            \n            int k = n + 1; \n            while(k > 0 && !pq.empty()) {\n                awaited.push(pq.top() - 1); pq.pop();\n                --k;\n                ++ans;\n            }\n            \n            while(!awaited.empty()) {\n                if (awaited.front() > 0) {\n                    pq.push(awaited.front()); \n                }\n                awaited.pop(); \n            }\n            \n            if (pq.empty()) {\n                break;\n            }\n            \n            ans += k; \n            \n        }      \n        \n        return ans; \n        \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"task-scheduler"}