{"id":358884153,"lang":"cpp","time":"1 year, 9 months","timestamp":1593243602,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/358884153/","is_pending":"Not Pending","title":"Continuous Subarray Sum","memory":"N/A","code":"class Solution {\npublic:\n    bool checkSubarraySum(vector<int>& nums, int k) {\n        unordered_map<int, int> mm; \n        if (k == 0) {\n            return false; \n        }\n        mm[0] = 0; \n        int sum = 0; \n        for (int i = 0; i < nums.size(); ++i) {\n            sum += i; \n            sum = sum % k; \n            if (mm.find(sum) != mm.end()) {\n                if (i - mm[sum] + 1 >= 2) {\n                    return true; \n                }\n            } else {\n                mm[sum] = i; \n            }\n        }\n        return false; \n    }\n};","compare_result":"11111101111111111111011001000101001011101011010110110111111111111111111111111001111111111","title_slug":"continuous-subarray-sum"}