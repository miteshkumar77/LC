{"id":394905664,"lang":"cpp","time":"1 year, 7 months","timestamp":1599968325,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/394905664/","is_pending":"Not Pending","title":"Continuous Subarray Sum","memory":"N/A","code":"class Solution {\npublic:\n    bool checkSubarraySum(vector<int>& nums, int k) {\n        \n        \n        \n        unordered_set<int> seen{0};\n        int pref1 = (k == 0)?nums[0]:nums[0] % k; \n        int pref2 = pref1; \n        for (int i = 1; i < nums.size(); ++i) {\n            pref2 = pref2 + nums[i];\n    \n            pref2 = (k == 0)?pref2:pref2 % k; \n            if (seen.find(k - pref2) != seen.end()) {\n                return true; \n            }\n            seen.insert(pref1); \n            pref1 = pref2; \n        }\n        return false; \n    }\n};","compare_result":"11001111011000000110011000000100001010100011111111111111111111111110000000000000000000000","title_slug":"continuous-subarray-sum"}