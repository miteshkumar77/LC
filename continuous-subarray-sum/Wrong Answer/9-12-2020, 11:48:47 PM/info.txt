{"id":394910839,"lang":"cpp","time":"1 year, 7 months","timestamp":1599968927,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/394910839/","is_pending":"Not Pending","title":"Continuous Subarray Sum","memory":"N/A","code":"class Solution {\npublic:\n    \n    \n    inline int mod(int a, int b) {\n        return (b == 0)?a:(a % b);     \n    }\n    bool checkSubarraySum(vector<int>& nums, int k) {\n        \n        k = abs(k); \n        \n        unordered_set<int> seen{0};\n        int pref1 = mod(nums[0], k);  \n        int pref2 = pref1; \n        for (int i = 1; i < nums.size(); ++i) {    \n            pref2 = mod(pref2 + nums[i], k);  \n            if (seen.find(mod(k - pref2 , k)) != seen.end()) {\n                return true; \n            }\n            seen.insert(pref1); \n            pref1 = pref2; \n        }\n        return false; \n    }\n};","compare_result":"11111111111111111111011001000111101111111011111111111111111111111111111111111001111111111","title_slug":"continuous-subarray-sum"}