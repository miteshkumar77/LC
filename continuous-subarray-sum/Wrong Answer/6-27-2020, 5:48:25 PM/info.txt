{"id":359138597,"lang":"cpp","time":"1 year, 9 months","timestamp":1593294505,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/359138597/","is_pending":"Not Pending","title":"Continuous Subarray Sum","memory":"N/A","code":"class Solution {\npublic:\n    bool checkSubarraySum(vector<int>& nums, int k) {\n        unordered_map<int, int> mm; \n        \n        mm[0] = 0; \n        int sum = 0; \n        for (int i = 0; i < nums.size(); ++i) {\n            sum += nums[i];\n            if (k != 0) {\n                sum = sum % k;\n            }\n            if (mm.find(sum) != mm.end()) {\n                if (i - mm[sum] + 1 >= 2) {\n                    return true; \n                }\n            } else {\n                mm[sum] = i; \n            }\n        }\n        return false; \n    }\n};","compare_result":"11111110111111111001100011010111111111111101111111111111111111111111111111111111111111111","title_slug":"continuous-subarray-sum"}