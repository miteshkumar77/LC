{"id":394915654,"lang":"cpp","time":"1 year, 7 months","timestamp":1599969471,"status_display":"Accepted","runtime":"76 ms","url":"/submissions/detail/394915654/","is_pending":"Not Pending","title":"Continuous Subarray Sum","memory":"26.7 MB","code":"class Solution {\npublic:\n    \n    inline int mod(int a, int b) {\n        return b == 0?a:a%b; \n    }\n    \n    bool checkSubarraySum(vector<int>& nums, int k) {\n        \n        unordered_set<int> seen{0}; \n        int p1 = mod(nums[0], k); \n        int p2 = p1; \n        for (int i = 1; i < nums.size(); ++i) {\n            p2 = mod(p2 + nums[i], k); \n            if (seen.find(p2) != seen.end()) {\n                return true; \n            }\n            \n            seen.insert(p1); \n            p1 = p2; \n        }\n        return false; \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"continuous-subarray-sum"}