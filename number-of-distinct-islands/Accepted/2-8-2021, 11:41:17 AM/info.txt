{"id":453671594,"lang":"cpp","time":"1 year, 2 months","timestamp":1612802477,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/453671594/","is_pending":"Not Pending","title":"Number of Distinct Islands","memory":"26.6 MB","code":"class Solution {\npublic:\n    \n    array<char, 4> letters{'%', '>', '|', '`'};\n    array<int, 5> dirs{0, 1, 0, -1, 0};\n    \n    void dfs(vector<vector<int>>& grid, string& path, int i, int j) {\n        if (i < 0 || j < 0 || i >= grid.size() || j >= grid[0].size()) return;\n        if (grid[i][j] == 0) return;\n        grid[i][j] = 0;\n        for (int x = 0; x < 4; ++x) {\n            path.push_back(letters[x]);\n            dfs(grid, path, i + dirs[x], j + dirs[x + 1]);\n        }\n    }\n    \n    int numDistinctIslands(vector<vector<int>>& grid) {\n        unordered_set<string> uniques;\n        \n        for (int i = 0; i < grid.size(); ++i) {\n            for (int j = 0; j < grid[0].size(); ++j) {\n                if (grid[i][j]) {\n                    string path = \"\";\n                    dfs(grid, path, i, j);\n                    uniques.insert(path);\n                }\n            }\n        }\n        return uniques.size(); \n    }\n};","compare_resulttitle_slug":"number-of-distinct-islands"}