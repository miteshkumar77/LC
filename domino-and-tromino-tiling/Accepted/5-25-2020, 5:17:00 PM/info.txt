{"id":344632978,"lang":"cpp","time":"1 year, 10 months","timestamp":1590441420,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/344632978/","is_pending":"Not Pending","title":"Domino and Tromino Tiling","memory":"6.6 MB","code":"class Solution {\npublic:\n    int numTilings(int N) {\n        vector<array<unsigned long long int, 2> > dp(N + 1, array<unsigned long long int, 2>{0}); \n        \n        \n        // dp[X][0]: how many ways to tile a 2 by X board fully \n        // dp[X][1]: how many ways to tile a 2 by X board with one\n        // corner left untiled. \n        \n        unsigned long long int MOD = 1000000007; \n        \n        dp[1][0] = 1; \n        dp[0][0] = 1; \n        for (int i = 2; i <= N; ++i) {\n            dp[i][0] = (dp[i - 1][0] % MOD + dp[i - 2][0] % MOD + dp[i - 1][1] % MOD) % MOD; \n            dp[i][1] = (2 * dp[i - 2][0] % MOD + dp[i - 1][1] % MOD) % MOD;\n        }\n        \n        return (int)(dp.back()[0] % MOD);\n        \n    }\n};","compare_result":"111111111111111111111111111111111111111","title_slug":"domino-and-tromino-tiling"}