{"id":544219451,"lang":"cpp","time":"7 months, 3 weeks","timestamp":1629929864,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/544219451/","is_pending":"Not Pending","title":"The Skyline Problem","memory":"14.4 MB","code":"class Solution {\npublic:\n    struct Elem {\n        Elem(int pos, int height, bool end) : pos(pos), height(height), end(end) {}\n        int pos;\n        int height;\n        bool end;\n        bool operator<(Elem const& o) {\n            if (pos < o.pos) {\n                return true;\n            } else if (pos > o.pos) {\n                return false;\n            } else {\n                if (end && o.end) {\n                    return height < o.height;\n                } else if (!(end || o.end)) {\n                    return height > o.height;\n                } else {\n                    return !end;\n                }\n            }\n        }\n    };\n    \n    vector<vector<int>> getSkyline(vector<vector<int>>& buildings) {\n        map<int,int> ht_ct;\n        ++ht_ct[0];    \n        vector<Elem> skl;\n        skl.reserve(buildings.size() * 2);\n        for (auto& v : buildings) {\n            skl.push_back(Elem(v[0], v[2], false));\n            skl.push_back(Elem(v[1], v[2], true));\n        }\n        \n        sort(skl.begin(), skl.end());\n        vector<vector<int>> ans;\n        for (auto& e : skl) {\n            if (!e.end) {\n                if (e.height > prev(ht_ct.end())->first) {\n                    ans.push_back({e.pos, e.height});\n                }\n                ++ht_ct[e.height];\n            } else {\n                if (e.height == prev(ht_ct.end())->first && ht_ct[e.height] == 1) {\n                    ans.push_back({e.pos, prev(prev(ht_ct.end()))->first});    \n                }\n                if (--ht_ct[e.height] == 0) ht_ct.erase(e.height);\n            }\n        }\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111","title_slug":"the-skyline-problem"}