{"id":342470495,"lang":"cpp","time":"1 year, 11 months","timestamp":1590033019,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/342470495/","is_pending":"Not Pending","title":"Merge Two Sorted Lists","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {\n        ListNode* head = l1; \n        ListNode* prev1 = nullptr; \n        ListNode* next2 = (l2)?(l2 -> next):(nullptr); \n        while(l2) {\n            if (l1 && l2) {\n                if (l1 -> val >= l2 -> val) {\n                    if (prev1) {\n                        prev1 -> next = l2; \n                    } else {\n                        head = l2; \n                    }\n                    prev1 = l2; \n                    l2 -> next = l1; \n                    l2 = next2; \n                    if (next2) {\n                        next2 = l2 -> next; \n                    }\n                } else {\n                    prev1 = l1; \n                    l1 = l1 -> next;\n                }\n            }\n            \n            if (!l1) {\n                prev1 -> next = l2; \n                break;\n            }\n        }\n        \n        return head; \n    }\n};\n\n\n\n// if (!l1) {\n//             return l2;\n//         }\n        \n//         if (!l2) {\n//             return l1; \n//         }\n//         ListNode* res = l1; \n//         ListNode* prev1 = nullptr; \n//         ListNode* next1 = l1 -> next;\n//         ListNode* prev2 = nullptr; \n//         ListNode* next2 = l2 -> next; \n//         while(l1 || l2) {\n//             if (l1 && l2 && l1 -> val > l2 -> val) {\n//                 if (prev1) {\n//                     prev1 -> next = l2; \n//                     prev1 = l2;\n//                 }\n//                 next2 = l2 -> next; \n//                 l2 -> next = l1; \n//                 l2 = next2; \n//                 next2 = l2 -> next; \n                \n//             }\n            \n//             if (!l2) {\n//                 break; \n//             }\n//             if (l1 && l2 && l1 -> val <= l2 -> val) {\n//                 prev1 = l1; \n//                 l1 = l1 -> next; \n//             }\n            \n//             if (!l1) {\n//                 prev1 -> next = l2;\n//                 break; \n//             }\n//         }\n        \n//         return res; ","compare_result":"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"merge-two-sorted-lists"}