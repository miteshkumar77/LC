{"id":375164736,"lang":"cpp","time":"1 year, 8 months","timestamp":1596412182,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/375164736/","is_pending":"Not Pending","title":"Unique Paths III","memory":"7 MB","code":"class Solution {\npublic:\n    int uniquePathsIII(vector<vector<int>>& grid) {\n        int si; int sj; int ei; int ej; \n        int M = grid.size(); int N = grid[0].size(); \n        int maxV = M * N; \n        for (int i = 0; i < M; ++i) {\n            for (int j = 0; j < N; ++j) {\n                if (grid[i][j] == 1) {\n                    si = i; sj = j; \n                }\n                if (grid[i][j] == -1) {\n                    --maxV; \n                }\n                if (grid[i][j] == 2) {\n                    ei = i; ej = j; \n                }\n            }\n        }\n        array<int, 5> dirs {0, 1, 0, -1, 0}; \n        int visited = 0; \n        function<int(int,int)> bt = [&] (int i, int j) {\n            if (i >= 0 && j >= 0 && i < M && j < N && grid[i][j] != -1) {\n                \n                \n                if (grid[i][j] == 2) {\n                    if (visited == maxV - 1) {\n                        return 1; \n                    } else {\n                        return 0; \n                    }\n                }\n                \n                \n                int tmp = grid[i][j]; \n                grid[i][j] = -1; \n                ++visited; \n                int ans = 0; \n                for (int x = 0; x < 4; ++x) {\n                    ans += bt(i + dirs[x], j + dirs[x + 1]); \n                }\n                \n                grid[i][j] = tmp; \n                --visited; \n                return ans; \n                \n            } else {\n                return 0; \n            }\n        };\n        \n        return bt(si, sj); \n    }\n};","compare_result":"111111111111111111111111111111111111111","title_slug":"unique-paths-iii"}