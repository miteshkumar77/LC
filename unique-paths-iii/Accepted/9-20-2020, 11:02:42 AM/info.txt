{"id":398338149,"lang":"cpp","time":"1 year, 7 months","timestamp":1600614162,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/398338149/","is_pending":"Not Pending","title":"Unique Paths III","memory":"7 MB","code":"class Solution {\npublic:\n    int uniquePathsIII(vector<vector<int>>& grid) {\n        int ans = 0; \n        int m = grid.size(); int n = grid[0].size();\n        int unvisited = 0; \n        int si;\n        int sj; \n        \n        for (int i = 0; i < grid.size(); ++i) {\n            for (int j = 0; j < grid[i].size(); ++j) {\n                if (grid[i][j] == 1) {\n                    ++unvisited;\n                    si = i;\n                    sj = j;\n                }\n                if (grid[i][j] == 0) {\n                    ++unvisited;\n                }\n            }\n        }\n        array<int, 5> dirs{0, 1, 0, -1, 0}; \n        \n        function<void(int,int)> dfs = [&](int i, int j) -> void {\n            if (i < 0 || i >= m || j < 0 || j >= n || grid[i][j] == -1) {\n                return;\n            }\n            if (grid[i][j] == 2) {\n                if (unvisited == 0) {\n                    ++ans;\n                }\n                return;\n            }\n            grid[i][j] = -1; \n            --unvisited;\n            for (int x = 0; x < 4; ++x) {\n                dfs(i + dirs[x], j + dirs[x + 1]); \n            }\n            grid[i][j] = 0; \n            ++unvisited;\n        };\n        \n        dfs(si, sj); \n        return ans; \n    }\n};","compare_result":"111111111111111111111111111111111111111","title_slug":"unique-paths-iii"}