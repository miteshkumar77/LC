{"id":398336490,"lang":"cpp","time":"1 year, 7 months","timestamp":1600613819,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/398336490/","is_pending":"Not Pending","title":"Unique Paths III","memory":"N/A","code":"class Solution {\npublic:\n    int uniquePathsIII(vector<vector<int>>& grid) {\n        int ans = 0; \n        int m = grid.size(); int n = grid[0].size();\n        array<int, 5> dirs{0, 1, 0, -1, 0}; \n        \n        function<void(int,int)> dfs = [&](int i, int j) -> void {\n            if (i < 0 || i >= m || j < 0 || j >= n || grid[i][j] == -1) {\n                return;\n            }\n            cout << i << ' ' << j << endl; \n            if (grid[i][j] == 2) {\n                ++ans;\n                return;\n            }\n            grid[i][j] = -1; \n            for (int x = 0; x < 4; ++x) {\n                dfs(i + dirs[x], j + dirs[x + 1]); \n            }\n            grid[i][j] = 0; \n        };\n        \n        for (int i = 0; i < m; ++i) {\n            for (int j = 0; j < n; ++j) {\n                if (grid[i][j] == 1) {\n                    dfs(i,j); \n                    return ans; \n                }\n            }\n        }\n        return ans; \n    }\n};","compare_result":"000111100000100000000001000000000000000","title_slug":"unique-paths-iii"}