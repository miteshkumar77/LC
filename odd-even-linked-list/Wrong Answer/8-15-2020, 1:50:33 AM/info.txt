{"id":381089261,"lang":"cpp","time":"1Â year, 8Â months","timestamp":1597470633,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/381089261/","is_pending":"Not Pending","title":"Odd Even Linked List","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* oddEvenList(ListNode* head) {\n        // odds\n        ListNode* headptr = nullptr; \n        ListNode* curhead = nullptr;\n        // evens\n        ListNode* tailptr = nullptr;\n        ListNode* curtail = nullptr; \n        \n        while(head) {\n            if ((head -> val) % 2 == 0) {\n                if (curtail) {\n                    curtail -> next = head; \n                } else {\n                    tailptr = head; \n                }\n                curtail = head; \n            } else {\n                if (curhead) {\n                    curhead -> next = head; \n                } else {\n                    headptr = head; \n                }\n                curhead = head; \n            }\n            head = head -> next; \n        }\n        \n        if (!headptr) {\n            return tailptr; \n        }\n        if (!tailptr) {\n            return headptr; \n        }\n        \n        curtail -> next = nullptr; \n        curhead -> next = tailptr; \n        return headptr; \n        \n    }\n};","compare_result":"10110111100000000111111111111111111111111111010101011111111111111000000","title_slug":"odd-even-linked-list"}