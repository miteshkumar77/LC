{"id":383717981,"lang":"cpp","time":"1 year, 8 months","timestamp":1597932164,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/383717981/","is_pending":"Not Pending","title":"Regular Expression Matching","memory":"N/A","code":"class Solution {\npublic:\n    bool isMatch(string s, string p) {\n        vector<vector<bool>> dp(p.length() + 1, vector<bool>(s.length() + 1, false)); \n        \n        dp[0][0] = true; \n        \n        for (int i = 1; i <= p.length(); ++i) {\n            if (p[i - 1] == '*') {\n                dp[i][0] = dp[i - 2][0]; \n            }\n        }\n        \n        for (int i = 1; i <= p.length(); ++i) {\n            for (int j = 1; j <= s.length(); ++j) {\n                if (p[i - 1] == '.' || p[i - 1] == s[j - 1]) {\n                    dp[i][j] = dp[i - 1][j - 1]; \n                } else if (p[i - 1] == '*') {\n                    if (p[i - 2] == s[j - 1] && dp[i][j - 1]) {\n                        dp[i][j] = true; \n                    } else if (dp[i - 2][j]) {\n                        dp[i][j] = true; \n                    }\n                }\n            }\n        }\n        \n        \n        return dp.back().back(); \n        \n        \n    }\n};","compare_result":"110111110111111111111101111000111111111111010111111111111110111111111111111111111111111111111111111111111111111111110111111111111111111111111101111111111111111101111111111111111111111111111111101111111111111111111111111110111101110111111111111111111101011011100101110110111011111011111111101111010111011111011111111111111011011101101110011100111111010011111101101101011011100110011111111111111110011100000101101111111111111101111101111100111110010","title_slug":"regular-expression-matching"}