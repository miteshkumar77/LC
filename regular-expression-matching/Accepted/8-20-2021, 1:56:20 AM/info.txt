{"id":541298662,"lang":"cpp","time":"8Â months","timestamp":1629438980,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/541298662/","is_pending":"Not Pending","title":"Regular Expression Matching","memory":"6.8 MB","code":"class Solution {\npublic:\n    bool isMatch(string s, string p) {\n        int n = s.length(); int m = p.length();\n        vector<vector<bool>> dp(n+1, vector<bool>(m+1, false));\n        dp[0][0] = true;\n        for (int i = 1; i <= m; ++i) {\n            dp[0][i] = p[i-1] == '*' && dp[0][i-2];\n        }\n        \n        for (int i = 1; i <= n; ++i) {\n            for (int j = 1; j <= m; ++j) {\n                if (s[i-1] == p[j-1] || p[j-1] == '.') {\n                    dp[i][j] = dp[i-1][j-1];\n                } else if (p[j-1] == '*') {\n                    bool can_empty = dp[i][j-2];\n                    bool can_prev_match = s[i-1] == p[j-2] || p[j-2] == '.';\n                    bool can_be_first = can_prev_match && dp[i-1][j-1];\n                    bool can_be_repeat = can_prev_match && dp[i-1][j];\n                    dp[i][j] = can_empty || can_be_first || can_be_repeat;\n                }\n            }\n        }\n        return dp[n][m];\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"regular-expression-matching"}