{"id":347314510,"lang":"cpp","time":"1 year, 10 months","timestamp":1590964894,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/347314510/","is_pending":"Not Pending","title":"Can I Win","memory":"N/A","code":"class Solution {\npublic:\n    bool canIWin(int maxChoosableInteger, int desiredTotal) {\n        // vector<vector<int> > dp(maxChoosableInteger + 1, vector<int>(desiredTotal + 1, -1)); \n        \n        vector<int> dp(desiredTotal + 1, -1); \n        unordered_set<int> unused_coins; \n        for (int i = 1; i <= maxChoosableInteger; ++i) {\n            unused_coins.insert(i); \n        }\n        return minmax(unused_coins, dp, 0); \n    }\n    \n    \n    bool minmax(unordered_set<int>& unused_coins, vector<int>& dp, int total_sum) {\n        \n        \n        \n        \n        if (dp[total_sum] != -1) {\n            return dp[total_sum] == 1; \n        }\n        \n        \n        for (int i : unused_coins) {\n            if (total_sum + i >= dp.size() - 1) {\n                return true; \n            }\n            unordered_set<int> cpy1 (unused_coins.begin(), unused_coins.end()); \n            cpy1.erase(i); \n            bool canwin = true; \n            for (int j : cpy1) {\n                if (total_sum + i + j >= dp.size() - 1) {\n                    canwin = false; \n                    break; \n                } else {\n                    unordered_set<int> cpy2 (cpy1.begin(), cpy1.end()); \n                    cpy2.erase(j); \n                    if (!minmax(cpy2, dp, total_sum + i + j)) {\n                        canwin = false; \n                        break;\n                    }\n                }\n            }\n            if (canwin) {\n                dp[total_sum] = 1; \n                return true; \n            }\n        }\n        dp[total_sum] = 0; \n        return false; \n    }\n};","compare_result":"111110101101101110011101111111011011111111110000011111","title_slug":"can-i-win"}