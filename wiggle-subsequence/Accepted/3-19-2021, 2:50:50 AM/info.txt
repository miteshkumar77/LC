{"id":469704409,"lang":"cpp","time":"1 year, 1 month","timestamp":1616136650,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/469704409/","is_pending":"Not Pending","title":"Wiggle Subsequence","memory":"7.4 MB","code":"class Solution {\npublic:\n    int wiggleMaxLength(vector<int>& nums) {\n        int n = nums.size();\n        stack<int> stk;\n        vector<int> p_greater_idx(n, -1);\n        vector<int> p_lower_idx(n, -1);\n        for (int i = n - 1; i >= 0; --i) {\n            while(!stk.empty() && nums[stk.top()] > nums[i]) {\n                p_lower_idx[stk.top()] = i;\n                stk.pop();\n            }\n            stk.push(i);\n        }\n        stk = stack<int>(); \n        for (int i = n - 1; i >= 0; --i) {\n            while(!stk.empty() && nums[stk.top()] < nums[i]) {\n                p_greater_idx[stk.top()] = i;\n                stk.pop();\n            }\n            stk.push(i);\n        }\n        \n        vector<int> is_higher(n, 1);\n        vector<int> is_lower(n, 1);\n        int ans = INT_MIN;\n        for (int i = 0; i < n; ++i) {\n            if (p_greater_idx[i] != -1) {\n                is_lower[i] = max(is_higher[p_greater_idx[i]] + 1, is_lower[p_greater_idx[i]]);\n            }\n            if (p_lower_idx[i] != -1) {\n                is_higher[i] = max(is_lower[p_lower_idx[i]] + 1, is_higher[p_lower_idx[i]]); \n            }\n            ans = max(ans, max(is_lower[i], is_higher[i]));\n        }\n        return ans;\n        \n    }\n};","compare_result":"11111111111111111111111111","title_slug":"wiggle-subsequence"}