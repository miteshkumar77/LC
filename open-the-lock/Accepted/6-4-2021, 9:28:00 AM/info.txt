{"id":502924586,"lang":"cpp","time":"10 months, 2 weeks","timestamp":1622813280,"status_display":"Accepted","runtime":"256 ms","url":"/submissions/detail/502924586/","is_pending":"Not Pending","title":"Open the Lock","memory":"32.5 MB","code":"class Solution {\npublic:\n    array<int, 2> dirs{1, -1};\n    int openLock(vector<string>& deadends, string target) {\n        unordered_set<string> seen(deadends.begin(), deadends.end());\n        if (seen.count(\"0000\")) return -1;\n        if (target == \"0000\") return 0;\n        queue<pair<string,int>> q;\n        q.push({\"0000\", 0}); \n        while(!q.empty()) {\n            auto [ t,  dist] = q.front(); q.pop();\n            \n            for (int i = 0; i < 4; ++i) {\n                for (int x = 0; x < 2; ++x) {\n                    string tcpy = t;\n                    tcpy[i] = (tcpy[i] - '0' + 10 + dirs[x]) % 10 + '0';\n                    if (tcpy == target) return dist + 1;\n                    if (seen.count(tcpy)) continue;\n                    seen.insert(tcpy);\n                    q.push({tcpy, dist + 1});\n                }\n            }\n        }\n        return -1;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111","title_slug":"open-the-lock"}