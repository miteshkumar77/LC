{"id":325729553,"lang":"cpp","time":"2Â years","timestamp":1587057586,"status_display":"Accepted","runtime":"40 ms","url":"/submissions/detail/325729553/","is_pending":"Not Pending","title":"Product of Array Except Self","memory":"10.3 MB","code":"class Solution {\npublic:\n    vector<int> productExceptSelf(vector<int>& nums) {\n        // int num_zeros = 0; \n        \n        vector<int> res = vector<int>(nums.size()); \n        int running_prod = 1;  \n        \n        for (int i = 0; i < res.size(); ++i) {\n            res[i] = running_prod; \n            running_prod *= nums[i];\n        }\n        \n        running_prod = 1; \n        \n        for (int j = res.size() - 1; j >= 0; --j) {\n            res[j] *= running_prod; \n            running_prod *= nums[j]; \n        }\n        \n        return res; \n//         int total_product = 1; \n//         for (int n : nums) {\n//             if (n == 0) {\n//                 ++num_zeros;\n                \n//             } else {\n//                 total_product *= n; \n//             }\n//         }\n        \n//         vector<int> res = vector<int>(nums.size(), 0); \n//         for (int i = 0; i < nums.size(); ++i) {\n//             if (nums[i] != 0) {\n//                 if (num_zeros == 0) {\n//                     res[i] = total_product/nums[i];\n//                 } \n//             } else {\n//                 if (num_zeros == 1) {\n//                     res[i] = total_product;\n//                 }\n//             }\n//         }\n        \n//         return res; \n    }\n};","compare_result":"111111111111111111","title_slug":"product-of-array-except-self"}