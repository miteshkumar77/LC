{"id":441802718,"lang":"python","time":"1 year, 3 months","timestamp":1610411456,"status_display":"Accepted","runtime":"112 ms","url":"/submissions/detail/441802718/","is_pending":"Not Pending","title":"Serialize and Deserialize Binary Tree","memory":"23.5 MB","code":"# Definition for a binary tree node.\n# class TreeNode(object):\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Codec:\n    \n    def serialize(self, root):\n        ans = []\n        def helper(root):\n            if root == None:\n                ans.append('_')\n                return\n            ans.append(str(root.val))\n            helper(root.left)\n            helper(root.right)\n        \n        helper(root)\n        return ','.join(ans)\n        \n        \n    def deserialize(self, data):\n        arr = data.split(',')\n        \n        if arr[0] == '_' :\n            return None\n        \n        d = [[TreeNode(int(arr[0])), 0]]\n        ret = d[0][0]\n        i = 1\n        while i < len(arr) or len(d) != 0:\n            if i < len(arr):\n                if arr[i] == '_':\n                    if len(d) == 0:\n                        break\n                    if d[-1][1] == 1:\n                        d.pop()\n                    else:\n                        d[-1][1] += 1\n                else:\n                    tmp = TreeNode(int(arr[i]))\n                    if (d[-1][1] == 0):\n                        d[-1][0].left = tmp\n                        d[-1][1] += 1\n                    else:\n                        d[-1][0].right = tmp\n                        d.pop()\n                    d.append([tmp, 0])\n            else:\n                d.pop()\n            i += 1\n        return ret\n        \n\n# Your Codec object will be instantiated and called as such:\n# ser = Codec()\n# deser = Codec()\n# ans = deser.deserialize(ser.serialize(root))","compare_result":"11111111111111111111111111111111111111111111111111","title_slug":"serialize-and-deserialize-binary-tree"}