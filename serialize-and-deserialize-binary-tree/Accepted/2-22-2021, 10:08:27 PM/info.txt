{"id":459500622,"lang":"python","time":"1 year, 1 month","timestamp":1614049707,"status_display":"Accepted","runtime":"284 ms","url":"/submissions/detail/459500622/","is_pending":"Not Pending","title":"Serialize and Deserialize Binary Tree","memory":"23.3 MB","code":"# Definition for a binary tree node.\n# class TreeNode(object):\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Codec:\n\n    def serialize(self, root):\n        \"\"\"Encodes a tree to a single string.\n        \n        :type root: TreeNode\n        :rtype: str\n        \"\"\"\n        ans = []\n        def helper(node):\n            if node == None:\n                ans.append('_')\n                return\n            ans.append(str(node.val))\n            helper(node.left)\n            helper(node.right)\n        helper(root)\n        # print(','.join(ans))\n        return ','.join(ans)\n        \n\n    def deserialize(self, data):\n        \"\"\"Decodes your encoded data to tree.\n        \n        :type data: str\n        :rtype: TreeNode\n        \"\"\"\n        data = data.split(',')\n        if len(data) == 1:\n            return None\n        \n        # print(data)\n        \n        root = None\n        stk = []\n        \n        for i in data:\n            if i == '_':\n                stk[-1][1] += 1\n                if stk[-1][1] == 2:\n                    stk.pop()\n            else:\n                v = TreeNode(int(i))\n                if len(stk) > 0:\n                    if stk[-1][1] == 0:\n                        stk[-1][0].left = v\n                        stk[-1][1] += 1\n                    else:\n                        stk[-1][0].right = v\n                        stk.pop()\n                else:\n                    root = v\n                stk.append([v, 0])\n        return root\n                \n# Your Codec object will be instantiated and called as such:\n# ser = Codec()\n# deser = Codec()\n# ans = deser.deserialize(ser.serialize(root))","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"serialize-and-deserialize-binary-tree"}