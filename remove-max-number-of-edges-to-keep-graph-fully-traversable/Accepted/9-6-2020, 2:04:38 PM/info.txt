{"id":391922441,"lang":"cpp","time":"1 year, 7 months","timestamp":1599415478,"status_display":"Accepted","runtime":"1432 ms","url":"/submissions/detail/391922441/","is_pending":"Not Pending","title":"Remove Max Number of Edges to Keep Graph Fully Traversable","memory":"154.5 MB","code":"class Solution {\npublic:\n    int maxNumEdgesToRemove(int n, vector<vector<int>>& edges) {\n        sort(edges.begin(), edges.end(), [](vector<int>& a, vector<int>& b) -> bool {\n            return a[0] > b[0]; \n        });\n        vector<int> alicen(n + 1, -1); \n        vector<int> bobn(n + 1, -1); \n        function<int(int,vector<int>&)> find = [&] (int node, vector<int>& parent) -> int {\n            if (parent[node] == -1) {\n                return node; \n            }\n            \n            parent[node] = find(parent[node], parent); \n            return parent[node]; \n        };\n        \n        function<bool(int,int,vector<int>&)> onion = [&](int node1, int node2, vector<int>& parent) -> int {\n            if (find(node1, parent) == find(node2, parent)) {\n                return false; \n            }\n            \n            parent[find(node1, parent)] = find(node2, parent); \n            return true; \n        };\n        \n        int num_alex = 0; \n        int num_bob = 0; \n        int ans = 0; \n        for (auto edge : edges) {\n            bool over_alex = false; \n            bool over_bob = false; \n            if (edge[0] == 3 || edge[0] == 1) {\n                \n                if (!onion(edge[1], edge[2], alicen)) {\n                    over_alex = true; \n                    if (edge[0] != 3) {\n                        ++ans; \n                    }\n                } else {\n                    ++num_alex; \n                }\n            } \n            \n            if (edge[0] == 3 || edge[0] == 2) {\n\n                if (!onion(edge[1], edge[2], bobn)) {\n                    over_bob = true; \n                    if (edge[0] != 3) {\n                        ++ans; \n                    }\n                } else {\n                    ++num_bob;\n                }\n            }\n            if (over_alex && over_bob && edge[0] == 3) {\n                ++ans; \n            }\n        }\n        \n        if (num_alex < n - 1 || num_bob < n - 1) {\n            return -1; \n        }\n        \n        return ans; \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"remove-max-number-of-edges-to-keep-graph-fully-traversable"}