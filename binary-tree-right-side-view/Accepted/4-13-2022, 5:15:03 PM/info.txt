{"id":679833463,"lang":"cpp","time":"5 days, 2 hours","timestamp":1649884503,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/679833463/","is_pending":"Not Pending","title":"Binary Tree Right Side View","memory":"12.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void helper(TreeNode* root, int depth, vector<int>& ans) {\n        if (!root) return;\n        helper(root->left, depth+1, ans);\n        helper(root->right, depth+1, ans);\n        if (depth >= ans.size()) ans.resize(depth+1);\n        ans[depth] = root->val;\n    }\n    vector<int> rightSideView(TreeNode* root) {\n        vector<int> ans;\n        helper(root, 0, ans);\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-right-side-view"}