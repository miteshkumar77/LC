{"id":452799426,"lang":"cpp","time":"1 year, 2 months","timestamp":1612629708,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/452799426/","is_pending":"Not Pending","title":"Binary Tree Right Side View","memory":"11.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> rightSideView(TreeNode* root) {\n        queue<pair<TreeNode*,int>> q;\n        q.push({root, 0}); \n        int prev = -1;\n        vector<int> ans;\n        pair<TreeNode*, int> top;\n        while(!q.empty()) {\n            top = q.front(); \n            q.pop();\n            if (!top.first) continue;\n            q.push({top.first->right, top.second + 1});\n            q.push({top.first->left, top.second + 1}); \n            if (top.second != prev) {\n                prev = top.second; \n                ans.push_back(top.first->val); \n            }\n        }\n        \n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-right-side-view"}