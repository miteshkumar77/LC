{"id":348639153,"lang":"cpp","time":"1 year, 10 months","timestamp":1591218902,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/348639153/","is_pending":"Not Pending","title":"Binary Tree Right Side View","memory":"11.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> rightSideView(TreeNode* root) {\n        vector<int> ans; \n        list<TreeNode*> top; \n        list<TreeNode*> next;\n        if (root) {\n            top.push_back(root); \n            ans.push_back(root -> val); \n        }\n        \n        while(top.size() != 0) {\n            for (TreeNode* elem : top) {\n                if (elem -> left) {\n                    next.push_back(elem -> left); \n                }\n                if (elem -> right) {\n                    next.push_back(elem -> right); \n                }\n            }\n            if (next.size() != 0) {\n                ans.push_back(next.back() -> val); \n            }\n            top.clear(); \n            top.swap(next); \n        }\n        return ans; \n        \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-right-side-view"}