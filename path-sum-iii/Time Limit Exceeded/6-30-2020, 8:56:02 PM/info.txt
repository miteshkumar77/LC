{"id":360455752,"lang":"cpp","time":"1 year, 9 months","timestamp":1593564962,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/360455752/","is_pending":"Not Pending","title":"Path Sum III","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int pathSum(TreeNode* root, int sum) {\n        \n        list<int> sums; \n        int ans = 0; \n        helper(root, ans, sums, sum); \n        return ans; \n    }\n    \n    \n    void helper(TreeNode* root, int& ans, list<int> sums, int& sum) {\n        if (!root) {\n            return; \n        }\n        list<int> next; \n        if (root -> val == sum) {\n            ++ans; \n        }\n        for (int i : sums) {\n            next.push_back(i + root -> val); \n            if (next.back() == sum) {\n                ++ans; \n            }\n        }\n        \n        next.push_back(root -> val); \n        \n        helper(root -> left, ans, next, sum); \n        helper(root -> right, ans, next, sum); \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"path-sum-iii"}