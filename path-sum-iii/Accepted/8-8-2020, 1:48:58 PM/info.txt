{"id":377984059,"lang":"cpp","time":"1 year, 8 months","timestamp":1596908938,"status_display":"Accepted","runtime":"24 ms","url":"/submissions/detail/377984059/","is_pending":"Not Pending","title":"Path Sum III","memory":"19.6 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int pathSum(TreeNode* root, int sum) {\n        \n        unordered_map<int, int> prev_sums; \n        ++prev_sums[0]; \n        int ans = 0; \n        int rsum = 0; \n        function<void(TreeNode*)> helper = [&](TreeNode* r) -> void {\n            if (!r) {\n                return; \n            }\n            \n            rsum += r -> val; \n            if (prev_sums.find(rsum - sum) != prev_sums.end()) {\n                ans += prev_sums[rsum - sum]; \n            }\n            ++prev_sums[rsum]; \n            helper(r -> left); \n            helper(r -> right); \n            --prev_sums[rsum]; \n            rsum -= r -> val; \n            \n            \n        };\n        \n        \n        helper(root); \n        return ans; \n        \n    }\n    \n    \n    \n    \n    \n    \n    \n    \n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"path-sum-iii"}