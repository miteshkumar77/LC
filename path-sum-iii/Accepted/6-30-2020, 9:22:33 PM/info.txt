{"id":360462817,"lang":"cpp","time":"1 year, 9 months","timestamp":1593566553,"status_display":"Accepted","runtime":"24 ms","url":"/submissions/detail/360462817/","is_pending":"Not Pending","title":"Path Sum III","memory":"20.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int pathSum(TreeNode* root, int sum) {\n        \n        int ans = 0; \n        unordered_map<int, int> pref; \n        pref[0] = 1; \n        helper(root, sum, ans, 0, pref); \n        return ans; \n    }\n    \n    \n    void helper(TreeNode* root, int& target, int& ans, int curr_sum, unordered_map<int, int>& pref) {\n        if (!root) {\n            return; \n        }\n        \n        int acc = curr_sum + root -> val; \n        \n        if (pref.find(acc - target) != pref.end()) {\n            ans += pref[acc - target]; \n        }\n        \n        ++pref[acc]; \n        \n        helper(root -> left, target, ans, acc, pref); \n        helper(root -> right, target, ans, acc, pref); \n        if (--pref[acc] == 0) {\n            pref.erase(acc); \n        }\n    }\n    \n    \n    \n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"path-sum-iii"}