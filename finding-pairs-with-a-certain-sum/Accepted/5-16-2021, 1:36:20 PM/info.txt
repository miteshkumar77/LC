{"id":494062216,"lang":"cpp","time":"11 months, 1 week","timestamp":1621186580,"status_display":"Accepted","runtime":"436 ms","url":"/submissions/detail/494062216/","is_pending":"Not Pending","title":"Finding Pairs With a Certain Sum","memory":"123.2 MB","code":"class FindSumPairs {\npublic:\n    map<int,int> n1;\n    unordered_map<int, int> n2;\n    vector<int>* nums1;\n    vector<int>* nums2;\n    FindSumPairs(vector<int>& nums1, vector<int>& nums2) {\n        for (int i : nums1) ++n1[i];\n        for (int i : nums2) ++n2[i];\n        this->nums1 = &nums1;\n        this->nums2 = &nums2;\n    }\n    \n    void add(int index, int val) {\n        int tmp = (*nums2)[index];\n        (*nums2)[index] += val;\n        --n2[tmp];\n        if (n2[tmp] == 0) {\n            n2.erase(tmp);\n        }\n        ++n2[tmp + val];\n    }\n    \n    int count(int tot) {\n        int ans = 0;\n        for (const auto& p : n1) {\n            if (p.first >= tot) break;\n            ans += (p.second) * n2[tot - (p.first)];\n        }\n        return ans;\n    }\n};\n\n/**\n * Your FindSumPairs object will be instantiated and called as such:\n * FindSumPairs* obj = new FindSumPairs(nums1, nums2);\n * obj->add(index,val);\n * int param_2 = obj->count(tot);\n */","compare_result":"1111111111111111111111111","title_slug":"finding-pairs-with-a-certain-sum"}