{"id":420542799,"lang":"cpp","time":"1 year, 5 months","timestamp":1605456971,"status_display":"Accepted","runtime":"172 ms","url":"/submissions/detail/420542799/","is_pending":"Not Pending","title":"Range Sum of BST","memory":"65.2 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int rangeSumBST(TreeNode* root, int low, int high) {\n        if (!root) return 0;\n        int rval = root -> val;\n        int ans = 0; \n        if (rval > low) ans += rangeSumBST(root -> left, low, high);\n        if (rval < high) ans += rangeSumBST(root -> right, low, high);\n        if (rval <= high && rval >= low) ans += rval;\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111111111","title_slug":"range-sum-of-bst"}