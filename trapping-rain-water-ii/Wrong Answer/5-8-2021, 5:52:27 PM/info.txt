{"id":490575575,"lang":"cpp","time":"11 months, 2 weeks","timestamp":1620510747,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/490575575/","is_pending":"Not Pending","title":"Trapping Rain Water II","memory":"N/A","code":"class Solution {\npublic:\n    int trapRainWater(vector<vector<int>>& heightMap) {\n        int n = heightMap.size();\n        int m = heightMap[0].size();\n        int imin = -1e9;\n        vector<vector<array<int, 2>>> dpv(n + 2, vector<array<int, 2>>(m + 2, {imin, imin}));\n        vector<vector<array<int, 2>>> dph(n + 2, vector<array<int, 2>>(m + 2, {imin, imin}));\n        for (int i = 0; i < n; ++i) {\n            for (int j = 0; j < m; ++j) {\n                dpv[i + 1][j + 1][0] = max(dpv[i][j + 1][0], heightMap[i][j]);\n                dph[i + 1][j + 1][0] = max(dph[i + 1][j][0], heightMap[i][j]);\n            }\n        }\n        for (int i = n - 1; i >= 0; --i) {\n            for (int j = m - 1; j >= 0; --j) {\n                dpv[i + 1][j + 1][1] = max(dpv[i + 2][j + 1][1], heightMap[i][j]);\n                dph[i + 1][j + 1][1] = max(dph[i + 1][j + 2][1], heightMap[i][j]);\n            }\n        }\n        \n        int ans = 0;\n        for (int i = 1; i <= n; ++i) {\n            for (int j = 1; j <= m; ++j) {\n                int v = min(dpv[i - 1][j][0], dpv[i + 1][j][1]);\n                int h = min(dph[i][j - 1][0], dph[i][j + 1][1]);\n                ans += max(0, min(v, h) - heightMap[i - 1][j - 1]);\n            }\n        }\n        return ans;\n    }\n};","compare_result":"111011111101110111101000000000000000000011","title_slug":"trapping-rain-water-ii"}