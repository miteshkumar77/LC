{"id":427534133,"lang":"cpp","time":"1 year, 4 months","timestamp":1607199720,"status_display":"Accepted","runtime":"348 ms","url":"/submissions/detail/427534133/","is_pending":"Not Pending","title":"Minimum Number of Removals to Make Mountain Array","memory":"12.5 MB","code":"class Solution {\npublic:\n    int minimumMountainRemovals(vector<int>& nums) {\n        int n = nums.size(); \n        vector<int> lis(n, 1);\n        vector<int> lds(n, 1);\n        \n        for (int i = 0; i < n; ++i) {\n            for (int j = 0; j < i; ++j) {\n                if (nums[j] < nums[i]) {\n                    lis[i] = max(lis[i], lis[j] + 1);\n                }\n            }\n        }\n        \n        for (int i = n - 1; i >= 0; --i) {\n            for (int j = n - 1; j > i; --j) {\n                if (nums[j] < nums[i]) {\n                    lds[i] = max(lds[i], lds[j] + 1);\n                }\n            }\n        }\n        \n//         for (int i : lis) cout << i << ' ';\n//         cout << endl;\n        \n//         for (int i : lds) cout << i << ' ';\n//         cout << endl;\n        \n        int rev = INT_MIN;\n        for (int i = 1; i < n - 1; ++i) {\n            if (lis[i] != 1 && lds[i] != 1) {\n                rev = max(rev, lis[i] + lds[i] - 1);\n            }\n        }\n        \n        return n - rev;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-number-of-removals-to-make-mountain-array"}