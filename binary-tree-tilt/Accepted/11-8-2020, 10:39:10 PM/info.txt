{"id":418317100,"lang":"cpp","time":"1 year, 5 months","timestamp":1604893150,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/418317100/","is_pending":"Not Pending","title":"Binary Tree Tilt","memory":"24.6 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int findTilt(TreeNode* root) {\n        int ans = 0;\n        function<int(TreeNode*)> dfs = [&](TreeNode* node) -> int {\n            if (!node) return 0;\n            \n            int l = dfs(node -> left);\n            int r = dfs(node -> right);\n            ans += abs(r - l);\n            return r + l + (node -> val);\n            \n        };\n        \n        dfs(root);\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-tilt"}