{"id":606082418,"lang":"cpp","time":"3 months, 3 weeks","timestamp":1640280769,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/606082418/","is_pending":"Not Pending","title":"Course Schedule II","memory":"13.9 MB","code":"class Solution {\npublic:\n    bool dfs(int node, vector<bool>& pre, vector<bool>& post, vector<int>& ord, vector<vector<int>>& graph) {\n        if (post[node]) {\n            return true;\n        }\n        if (pre[node]) {\n            return false;\n        }\n        pre[node] = true;\n        for (int prereq : graph[node]) {\n            if (!dfs(prereq, pre, post, ord, graph)) return false;\n        }\n        ord.push_back(node);\n        post[node] = true;\n        return true;\n    }\n    vector<int> findOrder(int numCourses, vector<vector<int>>& prerequisites) {\n        vector<bool> pre(numCourses, false);\n        vector<bool> post(numCourses, false);\n        vector<int> ord; ord.reserve(numCourses);\n        vector<vector<int>> graph(numCourses, vector<int>());\n        for (auto const& p : prerequisites) {\n            graph[p[0]].push_back(p[1]);\n        }\n        for (int i = 0; i < numCourses; ++i) {\n            if (!dfs(i, pre, post, ord, graph)) {\n                return {};\n            }\n        }\n        // reverse(ord.begin(), ord.end());\n        return ord;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111","title_slug":"course-schedule-ii"}