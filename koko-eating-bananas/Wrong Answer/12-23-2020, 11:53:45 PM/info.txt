{"id":433954327,"lang":"cpp","time":"1 year, 3 months","timestamp":1608785625,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/433954327/","is_pending":"Not Pending","title":"Koko Eating Bananas","memory":"N/A","code":"class Solution {\npublic:\n    int minEatingSpeed(vector<int>& piles, int H) {\n        int l = 1;\n        int r = *max_element(piles.begin(), piles.end());\n        int ans = r;\n        int mid;\n        while(l < r) {\n            mid = l + (r - l)/2;\n            if (check(piles, mid, H)) {\n                ans = mid;\n                r = mid - 1;\n            } else {\n                l = mid + 1;\n            }\n        }\n        \n        \n        return ans;\n        \n    }\n    \n    bool check(const vector<int>& piles, int K, int H) {\n        int total_time = 0;\n        for (int i : piles) {\n            total_time += ceil(((float)i)/K);\n            if (total_time > H) {\n                return false;\n            }\n        }\n        return true;\n    }\n};","compare_result":"1111110111100001110011111011110101111011010000010101110110010011010111001110110100110011111111000011111101010010111","title_slug":"koko-eating-bananas"}