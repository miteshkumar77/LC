{"id":399923494,"lang":"cpp","time":"1 year, 6 months","timestamp":1600915409,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/399923494/","is_pending":"Not Pending","title":"Prison Cells After N Days","memory":"12.3 MB","code":"class Solution {\npublic:\n    vector<int> prisonAfterNDays(vector<int>& cells, int N) {\n        string cur;\n        for (int i : cells) {\n            cur += (char)(i + '0'); \n        }\n        \n        \n        bool truncated = true;\n        unordered_map<string,int> seen;\n        seen[cur] = 0;\n        for (int i = 1; i <= N; ++i) {\n            go(cur);\n            if (seen.find(cur) != seen.end()) {\n                N = N - i;\n                N = N % (i - seen[cur]) - 1;\n                truncated = false;\n                break;\n            }\n            seen[cur] = i; \n        }\n        // cout << cur << endl; \n        if (!truncated) {\n            for (int i = 0; i <= N; ++i) {\n                go(cur);\n            }\n        }\n        for (int i = 0; i < cur.length(); ++i) {\n            cells[i] = cur[i] == '1'; \n        }\n        return cells;\n        \n    }\n    \n    \n    void go(string& s) {\n        int n = s.length();\n        string next;\n        next += '0'; \n        for (int i = 1; i < n - 1; ++i) {\n            if (s[i - 1] == s[i + 1]) {\n                next += '1';\n            } else {\n                next += '0'; \n            }\n        }\n        next += '0';\n        s = next;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"prison-cells-after-n-days"}