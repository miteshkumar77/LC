{"id":395170722,"lang":"cpp","time":"1 year, 7 months","timestamp":1600018699,"status_display":"Accepted","runtime":"152 ms","url":"/submissions/detail/395170722/","is_pending":"Not Pending","title":"Maximal Rectangle","memory":"14.9 MB","code":"class Solution {\npublic:\n    typedef array<int, 2> pii; \n    int maximalRectangle(vector<vector<char>>& matrix) {\n        if (matrix.size() == 0 || matrix[0].size() == 0) {\n            return 0; \n        }\n        int ans = 0; \n        vector<vector<int>> dp(matrix.size() + 1, vector<int>(matrix[0].size(), 0)); \n        for (int i = 1; i <= matrix.size(); ++i) {\n            for (int j = 0; j < matrix[0].size(); ++j) {\n                if (matrix[i - 1][j] == '1') {\n                    dp[i][j] = dp[i - 1][j] + 1; \n                }\n                \n            }\n            // cout << helper(dp[i]) << endl; \n            ans = max(ans, helper(dp[i])); \n        }\n        \n        \n//         for (auto v : dp) {\n//             for (auto i : v) cout << i << ' ';\n//             cout << endl; \n//         }\n        \n//         for (auto v : dp) {\n//             cout << helper(v) << endl; \n//         }\n        return ans; \n \n    }\n    \n    \n    int helper(vector<int> A) {\n        vector<int> a1 = oneWay(A); \n        reverse(A.begin(), A.end()); \n        vector<int> a2 = oneWay(A); \n        reverse(a1.begin(), a1.end());\n        // for (int i : a1) cout << i << ' ';\n        // cout << endl; \n        // for (int i : a2) cout << i << ' ';\n        // cout << endl; \n        int gans = 0; \n        for (int i = 0; i < A.size(); ++i) {\n            gans = max(gans, a1[i] + a2[i] - A[i]); \n        }\n        return gans; \n    }\n    \n    \n    vector<int> oneWay(vector<int>& A) {\n        vector<int> ret(A.size()); \n        stack<pii> stk; \n        for (int i = 0; i < A.size(); ++i) {\n            pii cur{A[i], 1}; \n            while(!stk.empty() && cur[0] <= stk.top()[0]) {\n                cur[1] += stk.top()[1]; \n                stk.pop(); \n            }\n            stk.push(cur); \n            ret[i] = cur[0] * cur[1]; \n        }\n        return ret; \n    }\n    \n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximal-rectangle"}