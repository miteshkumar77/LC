{"id":380146271,"lang":"cpp","time":"1 year, 8 months","timestamp":1597287714,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/380146271/","is_pending":"Not Pending","title":"Median of Two Sorted Arrays","memory":"N/A","code":"class Solution {\npublic:\n    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {\n        \n        \n        \n        function<int(int,int,int,int,int)> findKth = [&](int l1, int r1, int l2, int r2, int k) -> int {\n            // cout << l1 << ' ' << r1 << ' ' << l2 << ' ' << r2 << ' ' << k << endl; \n            if (l1 > r1) {\n                return nums2[k]; \n            }\n            if (l2 > r2) {\n                return nums1[k]; \n            }\n            \n            if (k == 0) {\n                return min(nums1[l1], nums2[l2]); \n            }\n            \n            \n            int m1 = l1 + (r1 - l1)/2; \n            int m2 = l2 + (r2 - l2)/2; \n            \n            if (m1 + m2 >= k) {\n                if (nums1[m1] > nums2[m2]) {\n                    return findKth(l1, m1 - 1, l2, r2, k); \n                } else {\n                    return findKth(l1, r1, l2, m2 - 1, k); \n                }\n            } else {\n                if (nums1[m1] > nums1[m2]) {\n                    return findKth(l1, r1, m2 + 1, r2, k - m2 - 1); \n                } else {\n                    return findKth(m1 + 1, r1, l2, r2, k - m1 - 1); \n                }\n            }\n        };\n        \n        if ((nums1.size() + nums2.size()) % 2 == 1) {\n            return findKth(0, nums1.size(), 0, nums2.size(), (nums1.size() + nums2.size())/2);\n        } else {\n            return (findKth(0, nums1.size(), 0, nums2.size(), (nums1.size() + nums2.size())/2) + findKth(0, nums1.size(), 0, nums2.size(), (nums1.size() + nums2.size())/2 + 1))/2; \n        }\n    }\n};","compare_result":"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"median-of-two-sorted-arrays"}