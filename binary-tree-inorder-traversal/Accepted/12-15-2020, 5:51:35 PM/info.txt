{"id":431053991,"lang":"cpp","time":"1 year, 4 months","timestamp":1608072695,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/431053991/","is_pending":"Not Pending","title":"Binary Tree Inorder Traversal","memory":"8.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> inorderTraversal(TreeNode* root) {\n        vector<int> ans;\n        \n        TreeNode* curr = root;\n        TreeNode* prev = nullptr;\n        \n        while(curr) {\n            if (!(curr -> left)) {\n                // visit curr\n                ans.push_back(curr -> val);\n                curr = curr -> right;\n            } else {\n                prev = curr -> left;\n                while(prev -> right && prev -> right != curr) {\n                    prev = prev -> right;\n                }\n                if (prev -> right == curr) {\n                    prev -> right = nullptr;\n                    // visit curr\n                    ans.push_back(curr -> val);\n                    curr = curr -> right;\n                } else {\n                    prev -> right = curr;\n                    curr = curr -> left;\n                }\n            }\n        }\n        \n        // function<void(TreeNode*)> dfs = [&](TreeNode* t) -> void {\n        //     if (!t) return;\n        //     dfs(t -> left);\n        //     ans.push_back(t -> val);\n        //     dfs(t -> right);\n        // };\n        // dfs(root);\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-inorder-traversal"}