{"id":343282049,"lang":"cpp","time":"1 year, 11 months","timestamp":1590193768,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/343282049/","is_pending":"Not Pending","title":"Binary Tree Inorder Traversal","memory":"12.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> inorderTraversal(TreeNode* root) {\n        vector<int> res; res.reserve(100000); \n        stack<TreeNode*> stak; \n        \n        while(root || !stak.empty()) {\n            if (root) {\n                stak.push(root); \n                root = root -> left; \n            } else {\n                res.push_back(stak.top() -> val); \n                root = stak.top() -> right; \n                stak.pop(); \n            }\n        }\n        \n        return res; \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-inorder-traversal"}