{"id":431041512,"lang":"cpp","time":"1 year, 4 months","timestamp":1608069583,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/431041512/","is_pending":"Not Pending","title":"Binary Tree Inorder Traversal","memory":"8.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> inorderTraversal(TreeNode* root) {\n        vector<int> ans;\n        TreeNode* cur = root;\n        TreeNode* pre;\n        while(cur) {\n            if (!cur -> left) {\n                ans.push_back(cur -> val);\n                cur = cur -> right;\n            } else {\n                pre = cur -> left;\n                while(pre -> right) {\n                    pre = pre -> right;\n                }\n                pre -> right = cur;\n                TreeNode* temp = cur;\n                cur = cur -> left;\n                temp -> left = nullptr;\n            }\n        }\n        \n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-inorder-traversal"}