{"id":377204164,"lang":"cpp","time":"1 year, 8 months","timestamp":1596760247,"status_display":"Accepted","runtime":"156 ms","url":"/submissions/detail/377204164/","is_pending":"Not Pending","title":"Maximum Sum Circular Subarray","memory":"41.4 MB","code":"class Solution {\npublic:\n    int maxSubarraySumCircular(vector<int>& A) {\n        if (A.size() == 0) {\n            return 0; \n        }\n        int g_ans = A[0]; \n        int cur_ans = A[0]; \n        for (int i = 1; i < A.size(); ++i) {\n            cur_ans = max(A[i], cur_ans + A[i]);\n            g_ans = max(g_ans, cur_ans); \n        }\n        vector<int> suff_max(A.size()); \n        int n = A.size() - 1;\n        int suff_sum = A[n]; \n        suff_max[n] = suff_sum; \n        for (int i = n - 1; i >= 0; --i) {\n            suff_sum += A[i]; \n            suff_max[i] = max(suff_max[i + 1], suff_sum); \n        }\n     \n        int pref_sum = 0; \n        for (int i = 0; i < n; ++i) {\n            pref_sum += A[i]; \n            g_ans = max(pref_sum + suff_max[i + 1], g_ans); \n        }\n        return g_ans; \n        \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-sum-circular-subarray"}