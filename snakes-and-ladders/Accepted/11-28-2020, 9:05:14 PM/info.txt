{"id":425178706,"lang":"cpp","time":"1 year, 4 months","timestamp":1606615514,"status_display":"Accepted","runtime":"64 ms","url":"/submissions/detail/425178706/","is_pending":"Not Pending","title":"Snakes and Ladders","memory":"15.4 MB","code":"class Solution {\npublic:\n    int snakesAndLadders(vector<vector<int>>& board) {\n        int N = board.size();\n        int last = N * N; \n        \n        function<pair<int,int>(int)> getCoords = [&](int num) -> pair<int,int> {\n            int row = N - (num - 1)/N - 1;\n            int col;\n            if ((N - row - 1) % 2 == 0) {\n                col = (num - 1) % N;\n            } else {\n                col = N - (num - 1) % N - 1;\n            }\n            // cout << num << \": row: \" << row << \" col: \" << col << endl;\n\n            return make_pair(row, col); \n        };\n        \n        \n        \n        queue<pair<int,int>> bfsq; \n        bfsq.push(make_pair(1, 0)); \n        unordered_set<int> visited;\n        while(!bfsq.empty()) {\n            auto top = bfsq.front(); \n            bfsq.pop(); \n            \n            int currentIndex = top.first;\n            int currentDist = top.second;\n            \n            if (visited.find(currentIndex) != visited.end()) {\n                continue;\n            }\n            \n            if (currentIndex == last) {\n                return currentDist;\n            }\n            visited.insert(currentIndex);\n            \n            \n            \n            for (int i = 1; i + currentIndex <= last && i <= 6; ++i) {\n                int nextIndex = currentIndex + i;\n                auto coords = getCoords(nextIndex);\n                int gridVal = board[coords.first][coords.second];\n                if (gridVal != -1) {\n                    nextIndex = gridVal;\n                }\n                bfsq.push(make_pair(nextIndex, currentDist + 1)); \n            }\n        }\n        \n        return -1; \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"snakes-and-ladders"}