{"id":621201407,"lang":"cpp","time":"3Â months","timestamp":1642363418,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/621201407/","is_pending":"Not Pending","title":"Smallest String Starting From Leaf","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void mod(unordered_set<TreeNode*>& v, TreeNode* root, TreeNode* par) {\n        if (!root) return;\n        \n        if (!(root->left || root->right)) {\n            v.insert(root);\n        }\n        mod(v, root->left, root);\n        mod(v, root->right, root);\n        root->left = nullptr;\n        root->right = par;\n    }\n    string smallestFromLeaf(TreeNode* root) {\n        string ans;\n        unordered_set<TreeNode*> v;\n        mod(v, root, nullptr);\n        while(!v.empty()) {\n            int cmin = 255;\n            for (TreeNode* t : v) {\n                cmin = min(cmin, t->val);\n            }\n            unordered_set<TreeNode*> l;\n            for (TreeNode* t : v) {\n                if (t->right && t->val == cmin) {\n                    l.insert(t->right);\n                }\n            }\n            l.swap(v);\n            cmin+='a';\n            ans.push_back((char)cmin);\n        }\n        return ans;\n    }\n};","compare_result":"1101111111111111111111111111111111111111111111111111111111111111111","title_slug":"smallest-string-starting-from-leaf"}