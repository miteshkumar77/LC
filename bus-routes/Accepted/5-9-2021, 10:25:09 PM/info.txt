{"id":491104263,"lang":"cpp","time":"11 months, 1 week","timestamp":1620613509,"status_display":"Accepted","runtime":"352 ms","url":"/submissions/detail/491104263/","is_pending":"Not Pending","title":"Bus Routes","memory":"110.8 MB","code":"class Solution {\npublic:\n    int numBusesToDestination(vector<vector<int>>& routes, int source, int target) {\n        unordered_map<int, unordered_set<int>> stations;\n        {\n            int ridx = 0;\n            for (const auto& r : routes) {\n                for (int i : r) {\n                    stations[i].insert(ridx);\n                }\n                ++ridx;\n            }\n        }\n        \n        unordered_set<int> visited;\n        queue<array<int, 2>> q;\n        q.push({source, 0});\n        array<int, 2> t;\n        while(!q.empty()) {\n            t = q.front(); q.pop();\n            if (t[0] == target) {\n                return t[1];\n            }\n            if (visited.count(t[0])) continue;\n            visited.insert(t[0]);\n            while(!stations[t[0]].empty()) {\n                int ri = *stations[t[0]].begin();\n                stations[t[0]].erase(stations[t[0]].begin());\n                while(!routes[ri].empty()) {\n                    q.push({routes[ri].back(), t[1] + 1});\n                    if (stations[routes[ri].back()].count(ri)) {\n                        stations[routes[ri].back()].erase(ri);\n                    }                        \n                    routes[ri].pop_back();\n                }\n            }\n        }\n        return -1;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111","title_slug":"bus-routes"}