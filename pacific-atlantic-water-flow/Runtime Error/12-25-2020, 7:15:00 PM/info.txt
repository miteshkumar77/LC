{"id":434550671,"lang":"cpp","time":"1 year, 3 months","timestamp":1608941700,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/434550671/","is_pending":"Not Pending","title":"Pacific Atlantic Water Flow","memory":"N/A","code":"class Solution {\npublic:\n    vector<vector<int>> pacificAtlantic(vector<vector<int>>& matrix) {\n        \n        if (matrix.size() == 0 || matrix[0].size() == 0) {\n            return vector<vector<int>>();\n        }\n        int m = matrix.size();\n        int n = matrix[0].size();\n        \n        vector<vector<int>> visited(m, vector<int>(n, 0));\n        /*\n        -1 -> neither\n         0 -> not yet calculated\n         1 -> atlantic only\n         2 -> pacific only\n         3 -> both atlantic and pacific\n        */\n        array<int, 5> dirs{0, 1, 0, -1, 0}; \n        \n        function<int(int,int,int)> dfs = [&](int i, int j, int parentHeight) -> int {\n            \n            if (i < 0 || j < 0) {\n                return 2;\n            } else if (i >= m || j >= n) {\n                return 1;\n            } else if (matrix[i][j] > parentHeight) {\n                return -1;\n            }\n            \n            if (visited[i][j] != 0) {\n                return visited[i][j];\n            }\n            \n            visited[i][j] = -1;\n            bool atlantic = false;\n            bool pacific = false;\n            for (int dir = 0; dir < 4; ++dir) {\n                int a = dfs(i + dirs[dir], j + dirs[dir + 1], matrix[i][j]);\n                if (a == 1) {\n                    atlantic = true;\n                } else if (a == 2) {\n                    pacific = true;\n                } else if (a == 3) {\n                    atlantic = true;\n                    pacific = true;\n                }\n            }\n            \n            if (atlantic && pacific) {\n                visited[i][j] = 3;\n            } else if (!(atlantic || pacific)) {\n                visited[i][j] = -1;\n            } else if (atlantic) {\n                visited[i][j] = 1;\n            } else {\n                visited[i][j] = 2;\n            }\n            \n            return visited[i][j];\n        };\n        vector<vector<int>> ans;\n        for (int r = 0; r < n; ++r) {\n            for (int c = 0; c < m; ++c) {\n                visited[r][c] = 0;\n                if (dfs(r, c, INT_MAX) == 3) {\n                    ans.push_back({r, c});\n                }\n            }\n        }\n        \n        return ans;\n    }\n};","compare_result":"11111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"pacific-atlantic-water-flow"}