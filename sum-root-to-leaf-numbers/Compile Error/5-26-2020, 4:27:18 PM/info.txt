{"id":345093122,"lang":"cpp","time":"1 year, 10 months","timestamp":1590524838,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/345093122/","is_pending":"Not Pending","title":"Sum Root to Leaf Numbers","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int sumNumbers(TreeNode* root) {\n        if (!root) {\n            return 0; \n        }\n        if (root -> val == 0) {\n            return sumNumbers(root -> left) + sumNumbers(root -> right); \n        }\n        \n        vector<int> mults; \n        return helper(root, mults); \n    }\n    \n    \n    int helper(TreeNode* root, vector<unsigned long long int>& mults) {\n        if (!root) {\n            return 0; \n        }\n        \n        if (!root -> left && !root -> right) {\n            mults.push_back(10); \n            return root -> val; \n        }\n        \n        int ans = helper(root -> left, mults) + helper(root -> right, mults); \n        \n        for (int i = 0; i < mults.size(); ++i) {\n            ans += (root -> val) * mults[i]; \n            mults[i] *= 10; \n        }\n        return ans; \n         \n    }\n};","compare_result":null,"title_slug":"sum-root-to-leaf-numbers"}