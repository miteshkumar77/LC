{"id":485648219,"lang":"cpp","time":"11 months, 3 weeks","timestamp":1619487647,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/485648219/","is_pending":"Not Pending","title":"Furthest Building You Can Reach","memory":"N/A","code":"class Solution {\npublic:\n    int furthestBuilding(vector<int>& heights, int bricks, int ladders) {\n        // [4,2,7,6,9,14,12] bricks = 5, ladders = 1\n        //    j b j l \n        //      5\n        \n        int n = heights.size();\n        if (bricks == 0 && ladders == 0) {\n            return 0;\n        }\n        if (n == 0) {\n            return 0;\n        }\n        deque<pair<int,int>> minq;\n        for (int i = 0; i + 1 < n; ++i) {\n            if (heights[i] < heights[i + 1]) {\n                pair<int,int> ins = {heights[i + 1] - heights[i], 1};\n                while(!minq.empty() && ins.first <= minq.back().first) {\n                    ins.second += minq.back().second;\n                    minq.pop_back();\n                }\n                \n                minq.push_back(ins);\n                if (ladders) {\n                    --ladders;\n                } else {\n              \n                    bricks -= minq.front().first;\n                    if (bricks < 0) {\n                        return i;\n                    }\n                    if (ins.first != minq.front().first) {\n                        ++ladders;\n                    }\n                    --minq.front().second;\n                    if (minq.front().second == 0) {\n                        minq.pop_front();\n                    }\n                }\n            }\n        }\n        return n - 1;\n    }\n};","compare_result":"1011111101000010111111101111111111111111111111111111111111111111111111111","title_slug":"furthest-building-you-can-reach"}