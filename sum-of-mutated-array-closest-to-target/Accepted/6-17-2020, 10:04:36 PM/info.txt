{"id":355129664,"lang":"cpp","time":"1 year, 10 months","timestamp":1592445876,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/355129664/","is_pending":"Not Pending","title":"Sum of Mutated Array Closest to Target","memory":"12.6 MB","code":"class Solution {\npublic:\n    int findBestValue(vector<int>& arr, int target) {\n        int L = 0; \n        int R = *max_element(arr.begin(), arr.end()); \n        int ans = L; \n        int chk_ans = chksum(arr, L); \n        \n        while(L <= R) {\n            int mid = L + (R - L)/2; \n            int chk_mid = chksum(arr, mid);\n            if (abs(chk_mid - target) < abs(chk_ans - target)) {\n                chk_ans = chk_mid; \n                ans = mid; \n            } else if (abs(chk_mid - target) == abs(chk_ans - target) && ans > mid) {\n                ans = mid; \n                chk_ans = chk_mid; \n            }\n            \n            if (chk_mid >= target) {\n                R = mid - 1; \n            } else {\n                L = mid + 1; \n            }\n        }\n        \n        return ans; \n        \n    }\n    \n    \n    int chksum(vector<int>& arr, int val) {\n        int ans = 0; \n        for (int i : arr) {\n            ans += min(val, i); \n        }\n        return ans; \n    }\n};","compare_result":"111111111111111111","title_slug":"sum-of-mutated-array-closest-to-target"}