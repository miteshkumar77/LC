{"id":309321336,"lang":"python","time":"2 years, 1 month","timestamp":1583342926,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/309321336/","is_pending":"Not Pending","title":"Find First and Last Position of Element in Sorted Array","memory":"N/A","code":"class Solution(object):\n    def searchRange(self, nums, target):\n        \"\"\"\n        :type nums: List[int]\n        :type target: int\n        :rtype: List[int]\n        \"\"\"\n        res = [0,0]\n        res[0] = self.firstOccurence(nums, target)\n        res[1] = self.lastOccurence(nums, target)\n        return res\n    \n        \n    \n    def lastOccurence(self, nums, target):\n        if (len(nums) == 0):\n            return -1\n        \n        f = 0\n        l = len(nums) - 1\n        \n        while (f < l - 1): \n            if (target < nums[(f + l)//2]) :\n                l = (f + l) // 2 - 1\n            elif (target > nums[(f + l)//2]) :\n                f = (f + l)//2 + 1\n            else :\n                f = (f + l)//2\n        \n        if (nums[f] == target):\n            return f\n        return -1\n    \n    \n    def firstOccurence(self, nums, target):\n        if (len(nums) == 0):\n            return -1\n\n        f = 0\n        l = len(nums) - 1\n\n        while (f < l - 1): \n            if (target < nums[(f + l)//2]) :\n                l = (f + l) // 2 - 1\n            elif (target > nums[(f + l)//2]) :\n                f = (f + l)//2 + 1\n            else :\n                l = (f + l)//2\n\n        if (nums[f] == target):\n            return f\n        return -1\n","compare_result":"1111111010110110110111110010101110001101010100110000011010110010011000100000100100001001","title_slug":"find-first-and-last-position-of-element-in-sorted-array"}