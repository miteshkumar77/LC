{"id":394393547,"lang":"cpp","time":"1 year, 7 months","timestamp":1599869113,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/394393547/","is_pending":"Not Pending","title":"Maximum Product Subarray","memory":"11.8 MB","code":"class Solution {\npublic:\n    int maxProduct(vector<int>& nums) {\n        int g_largest = nums[0]; \n        int c_largest = nums[0]; \n        int c_smallest = nums[0]; \n        for (int i = 1; i < nums.size(); ++i) {\n            if (nums[i] < 0) {\n                swap(c_largest, c_smallest); \n            }\n            c_largest = max(nums[i], c_largest * nums[i]); \n            c_smallest = min(nums[i], c_smallest * nums[i]); \n            g_largest = max(g_largest, c_largest); \n        }\n        return g_largest; \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-product-subarray"}