{"id":373660359,"lang":"cpp","time":"1 year, 8 months","timestamp":1596124220,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/373660359/","is_pending":"Not Pending","title":"Maximum Product Subarray","memory":"11.7 MB","code":"class Solution {\npublic:\n    int maxProduct(vector<int>& nums) {\n        int smallest = nums[0];\n        int largest = nums[0]; \n        \n        int ans = nums[0]; \n        \n        for (int i = 1; i < nums.size(); ++i) {\n            if (nums[i] < 0) {\n                swap(smallest, largest); \n            }\n            \n            largest = max(largest * nums[i], nums[i]); \n            smallest = min(smallest * nums[i], nums[i]); \n            ans = max(ans, largest); \n        }\n        return ans; \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-product-subarray"}