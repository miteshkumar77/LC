{"id":580735134,"lang":"cpp","time":"5 months, 2 weeks","timestamp":1635818594,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/580735134/","is_pending":"Not Pending","title":"Maximum Product Subarray","memory":"N/A","code":"class Solution {\npublic:\n    int maxProduct(vector<int>& nums) {\n        signed long long ans = INT_MIN;\n        signed long long pref_prod = 1;\n        signed long long first_neg_prod = 0;\n        int n = nums.size();\n        for (int i = 0; i < n; ++i) {\n            pref_prod *= nums[i];\n            if (pref_prod == 0) {\n                ans = max(ans, (signed long long) 0);\n                first_neg_prod = 0;\n                pref_prod = 1;\n            } else {\n                if (pref_prod < 0 && first_neg_prod == 0) {\n                    first_neg_prod = pref_prod;\n                } else if (pref_prod < 0) {\n                    ans = max(ans, pref_prod/first_neg_prod);\n                } else {\n                    ans = max(ans, pref_prod);\n                }\n            }\n        }\n        return ans;\n    }\n};","compare_result":"1101111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-product-subarray"}