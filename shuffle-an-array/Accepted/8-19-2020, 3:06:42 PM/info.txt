{"id":383344386,"lang":"cpp","time":"1 year, 8 months","timestamp":1597864002,"status_display":"Accepted","runtime":"256 ms","url":"/submissions/detail/383344386/","is_pending":"Not Pending","title":"Shuffle an Array","memory":"90.5 MB","code":"class Solution {\npublic:\n    Solution(vector<int>& nums) {\n        original = nums; \n        m_arr.swap(nums); \n    }\n    \n    /** Resets the array to its original configuration and return it. */\n    vector<int> reset() {\n        return original; \n    }\n    \n    /** Returns a random shuffling of the array. */\n    vector<int> shuffle() {\n        int size = m_arr.size(); \n        for (int i = 0; i < m_arr.size(); ++i) {\n            swap(m_arr[rand() % (size--)], m_arr[size]);\n        }\n        return m_arr; \n    }\n    \n    vector<int> m_arr; \n    vector<int> original; \n};\n\n/**\n * Your Solution object will be instantiated and called as such:\n * Solution* obj = new Solution(nums);\n * vector<int> param_1 = obj->reset();\n * vector<int> param_2 = obj->shuffle();\n */","compare_result":"1111111111","title_slug":"shuffle-an-array"}