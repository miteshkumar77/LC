{"id":525694794,"lang":"cpp","time":"9Â months","timestamp":1626816810,"status_display":"Accepted","runtime":"80 ms","url":"/submissions/detail/525694794/","is_pending":"Not Pending","title":"Shuffle an Array","memory":"87.5 MB","code":"class Solution {\npublic:\n    Solution(vector<int>& nums) : orig(nums), cpy(vector<int>(nums.begin(), nums.end())) {\n        \n    }\n    \n    /** Resets the array to its original configuration and return it. */\n    vector<int> const& reset() {\n        return orig;\n    }\n    \n    /** Returns a random shuffling of the array. */\n    vector<int> const&  shuffle() {\n        int n = cpy.size();\n        for (int i = 0; i < n; ++i) {\n            swap(cpy[i], cpy[rand() % (n - i) + i]);\n        }\n        return cpy;\n    }\n    vector<int> const& orig;\n    vector<int> cpy;\n};\n\n/**\n * Your Solution object will be instantiated and called as such:\n * Solution* obj = new Solution(nums);\n * vector<int> param_1 = obj->reset();\n * vector<int> param_2 = obj->shuffle();\n */","compare_result":"1111111111","title_slug":"shuffle-an-array"}