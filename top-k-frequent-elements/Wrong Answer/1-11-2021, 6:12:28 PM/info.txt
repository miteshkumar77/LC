{"id":441779035,"lang":"cpp","time":"1 year, 3 months","timestamp":1610406748,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/441779035/","is_pending":"Not Pending","title":"Top K Frequent Elements","memory":"N/A","code":"class Solution {\npublic:\n    vector<int> topKFrequent(vector<int>& nums, int k) {\n        int n = nums.size();\n        unordered_map<int,int> ct;\n        for (int i : nums) ++ct[i];\n        vector<array<int, 2>> sorter; sorter.reserve(ct.size()); \n        for (auto p : ct) {\n            sorter.push_back({p.second, p.first});\n        }\n        quickSelect(0, ct.size() - 1, sorter, k);\n        // cout << \"done selectnig\" << endl;\n        vector<int> ans; ans.reserve(k);\n        \n        for (int i = ct.size() - k; i < ct.size(); ++i) {\n            ans.push_back(sorter[i][1]);\n        }\n        return ans;\n        \n    }\n    \n    void quickSelect(int l, int r, vector<array<int, 2>>& sorter, int k) {\n        // cout << l << ' ' << r << ' ' << k << endl;\n        if (l > r) return;\n        int pivoti = rand() % (r - l + 1) + l;\n        swap(sorter[pivoti], sorter[r]);\n        auto pivot = sorter[r];\n        int i = l - 1;\n        for (int j = l; j < r; ++j) {\n            if (sorter[j][0] < pivot[0]) {\n                swap(sorter[++i], sorter[j]);\n            }\n        }\n        swap(sorter[++i], sorter[r]);\n//         for (auto p : sorter) {\n//             cout << p[0] << ' ';\n//         }\n        \n        // cout << endl << i << endl;\n        if (i == k + l - 1) {\n            return;\n        }\n        if (i > k + l - 1) {\n            quickSelect(l, i - 1, sorter, k);\n        } else {\n            quickSelect(i + 1, r, sorter, k - i - 1 + l); \n        }\n\n    };\n};","compare_result":"111111110111100010001","title_slug":"top-k-frequent-elements"}