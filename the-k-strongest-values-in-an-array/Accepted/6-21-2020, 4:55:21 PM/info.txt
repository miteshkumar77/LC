{"id":356703105,"lang":"cpp","time":"1 year, 10 months","timestamp":1592772921,"status_display":"Accepted","runtime":"1208 ms","url":"/submissions/detail/356703105/","is_pending":"Not Pending","title":"The k Strongest Values in an Array","memory":"84.5 MB","code":"class Solution {\npublic:\n    \n    vector<int> getStrongest(vector<int>& arr, int k) {\n        sort(arr.begin(), arr.end()); \n        vector<int> ans; ans.reserve(k); \n        int m = arr[(arr.size() - 1)/2]; \n        auto compare = [m] (int& a, int& b) -> bool {\n            if (abs(a - m) > abs(b - m)) {\n                return true; \n            } else if (abs(a - m) == abs(b - m)) {\n                return a > b; \n            } else {\n                return false; \n            }\n        }; \n        priority_queue<int, vector<int>, decltype(compare)> pq(compare); \n        for (int i = 0; i < arr.size(); ++i) {\n            pq.push(arr[i]); \n            if (pq.size() > k) {\n                pq.pop(); \n            }\n        }\n        \n        for (int i = 0; i < k; ++i) {\n            ans.push_back(pq.top()); pq.pop(); \n        }\n        return ans; \n        \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"the-k-strongest-values-in-an-array"}