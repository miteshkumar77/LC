{"id":411871789,"lang":"cpp","time":"1 year, 5 months","timestamp":1603372924,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/411871789/","is_pending":"Not Pending","title":"Minimum Depth of Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    void helper(TreeNode* root, int depth, int& ans) {\n        if (!root) {\n            return;\n        }\n        \n        if (!root -> left && !root -> right) {\n            ans = max(ans, depth);\n        }\n        \n        helper(root -> left, depth + 1, ans); \n        helper(root -> right, depth + 1, ans);\n    }\n    int minDepth(TreeNode* root) {\n        int ans = 0;\n        helper(root, 0, ans);\n        return ans;\n    }\n};","compare_result":"1010000100100000010000010000100000000000000000000000","title_slug":"minimum-depth-of-binary-tree"}