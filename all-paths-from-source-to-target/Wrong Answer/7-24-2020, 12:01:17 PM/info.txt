{"id":371027426,"lang":"cpp","time":"1 year, 8 months","timestamp":1595606477,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/371027426/","is_pending":"Not Pending","title":"All Paths From Source to Target","memory":"N/A","code":"class Solution {\npublic:\n    vector<vector<int>> allPathsSourceTarget(vector<vector<int>>& graph) {\n        int n = graph.size(); \n        vector<bool> visited(n, false); \n        \n        \n        vector<vector<vector<int>>> paths(n, vector<vector<int>>()); \n        paths[0].push_back(vector<int>{0}); \n        function<void(int)> dfs = [&] (int node) -> void {\n            // visited[node] = true; \n            for (int neighbor : graph[node]) {\n                if (visited[neighbor]) continue; \n                for (vector<int> path : paths[node]) {\n                    paths[neighbor].push_back(path); \n                    paths[neighbor].back().push_back(neighbor); \n                    dfs(neighbor);\n                }\n            }\n        };\n        dfs(0); \n        return paths.back(); \n    }\n};","compare_result":"10101000000000000000000000","title_slug":"all-paths-from-source-to-target"}