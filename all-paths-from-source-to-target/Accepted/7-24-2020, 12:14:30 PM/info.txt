{"id":371031404,"lang":"cpp","time":"1 year, 8 months","timestamp":1595607270,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/371031404/","is_pending":"Not Pending","title":"All Paths From Source to Target","memory":"10.6 MB","code":"class Solution {\npublic:\n    vector<vector<int>> allPathsSourceTarget(vector<vector<int>>& graph) {\n        int N = graph.size(); \n        vector<bool> visited(N, false); \n        \n        \n        vector<vector<int>> ans; \n        vector<int> path; \n        function<void(int)> dfs = [&] (int node) -> void {\n            // visited[node] = true; \n            path.push_back(node); \n            if (node == N - 1) {\n                ans.push_back(path); \n            } else {\n                for (int neighbor : graph[node]) {\n                    dfs(neighbor); \n                }\n            }\n            path.pop_back(); \n        };\n        dfs(0); \n        return ans;  \n    }\n};","compare_result":"11111111111111111111111111","title_slug":"all-paths-from-source-to-target"}