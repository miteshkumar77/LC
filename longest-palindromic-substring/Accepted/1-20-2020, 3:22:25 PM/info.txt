{"id":295946430,"lang":"python","time":"2 years, 2 months","timestamp":1579551745,"status_display":"Accepted","runtime":"804 ms","url":"/submissions/detail/295946430/","is_pending":"Not Pending","title":"Longest Palindromic Substring","memory":"11.9 MB","code":"class Solution(object):\n    def longestPalindrome(self, s):\n        \n        if len(s) < 2:\n            return s\n        \n        max_pal = (0, 0)\n        for i in range(2*len(s) - 1):\n            f, l = self.expandAroundCenter(s, i)\n            if max_pal[1] - max_pal[0] < l - f:\n                max_pal = (f, l)\n        \n        return s[max_pal[0] + 1: max_pal[1]]\n               \n    def expandAroundCenter(self, s, c):\n        i = None\n        j = None\n        if c%2 == 0:\n            i = c//2\n            j = c//2\n        else:\n            i = c//2\n            j = c//2 + 1\n        \n        while(1): \n            if j == len(s) or i < 0 or s[i] != s[j]:\n                # print(c, i, j, str(s[i + 1: j]), j - i)\n                return (i, j)\n            i -= 1\n            j += 1\n            \n            \n            \n            \n                \n        \n        ","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-palindromic-substring"}