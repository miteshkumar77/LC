{"id":503663327,"lang":"cpp","time":"10 months, 2 weeks","timestamp":1622950388,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/503663327/","is_pending":"Not Pending","title":"Minimum Number of Flips to Make the Binary String Alternating","memory":"N/A","code":"class Solution {\npublic:\n    /*\n    111000\n    \n    1111000111   \n\n    */\n    int solve(string s) {\n        int n = s.length();\n        vector<array<int, 2>> dp(n + 1);\n        for (int i = 1; i <= n; ++i) {\n            dp[i][0] = dp[i-1][1] + (s[i-1] != '0');\n            dp[i][1] = dp[i-1][0] + (s[i-1] != '1');\n        }\n        return min(dp.back()[0], dp.back()[1]);\n    }\n    \n    void bf(string s) {\n        cout << s << ' ' << solve(s) << endl;\n        for (int i = 0; i < s.length(); ++i) {\n            s = s.substr(1, s.length() - 1) + s.substr(0,1);\n            cout << s << ' ' << solve(s) << endl;\n        }\n    }\n    \n    int minFlips0(string s) {\n        int n = s.length();\n        vector<array<int, 2>> fw(n + 1, {0, 0});\n        vector<array<int, 2>> bw(n + 1, {0, (int)1e9});\n        for (int i = 1; i <= n; ++i) {\n            fw[i][0] = fw[i-1][1] + (s[i-1] != '0');\n            fw[i][1] = fw[i-1][0] + (s[i-1] != '1');\n        }\n        for (int i = n-1; i >= 0; --i) {\n            bw[i][0] = bw[i+1][1] + (s[i] != '0');\n            bw[i][1] = bw[i+1][0] + (s[i] != '1');\n        }\n        int ans = INT_MAX;\n        for (int i = 0; i <= n; ++i) {\n            ans = min(ans, fw[i][1] + min(bw[i][0], bw[i][1]));\n        }\n        return ans;\n    }\n    int minFlips1(string s) {\n        int n = s.length();\n        vector<array<int, 2>> fw(n + 1, {0, 0});\n        vector<array<int, 2>> bw(n + 1, {(int)1e9, 0});\n        for (int i = 1; i <= n; ++i) {\n            fw[i][0] = fw[i-1][1] + (s[i-1] != '0');\n            fw[i][1] = fw[i-1][0] + (s[i-1] != '1');\n        }\n        for (int i = n-1; i >= 0; --i) {\n            bw[i][0] = bw[i+1][1] + (s[i] != '0');\n            bw[i][1] = bw[i+1][0] + (s[i] != '1');\n        }\n        int ans = INT_MAX;\n        for (int i = 0; i <= n; ++i) {\n            ans = min(ans, fw[i][0] + min(bw[i][0], bw[i][1]));\n        }\n        return ans;\n    }\n    \n    int minFlips(string s) {\n        return min(minFlips0(s), minFlips1(s));\n    }\n};","compare_result":"11100110100111101010100101000001000110011000000000001101001110001","title_slug":"minimum-number-of-flips-to-make-the-binary-string-alternating"}