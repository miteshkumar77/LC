{"id":503646529,"lang":"cpp","time":"10 months, 2 weeks","timestamp":1622948758,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/503646529/","is_pending":"Not Pending","title":"Minimum Number of Flips to Make the Binary String Alternating","memory":"N/A","code":"class Solution {\npublic:\n    /*\n    111000\n    \n    1111000111   \n\n    */\n    int solve(string s) {\n        int n = s.length();\n        vector<array<int, 2>> dp(n + 1);\n        for (int i = 1; i <= n; ++i) {\n            dp[i][0] = dp[i-1][1] + (s[i-1] != '0');\n            dp[i][1] = dp[i-1][0] + (s[i-1] != '1');\n        }\n        return min(dp.back()[0], dp.back()[1]);\n    }\n    \n    void bf(string s) {\n        cout << s << ' ' << solve(s) << endl;\n        for (int i = 0; i < s.length(); ++i) {\n            s = s.substr(1, s.length() - 1) + s.substr(0,1);\n            cout << s << ' ' << solve(s) << endl;\n        }\n    }\n    \n    int minFlips(string s) {\n        // bf(s);\n        int a = solve(s);\n        for (int i = 1; i < s.length(); ++i) {\n            if (s[i] == s[i-1]) {\n                reverse(s.begin(), s.begin() + i);\n                s = s.substr(i, s.length() - i) + s.substr(0, i);\n                a = min(a, solve(s));\n                break;\n            }\n        }\n        return a;\n    }\n};","compare_result":"11111010011000110001011000100110011001100101000001010010101101111","title_slug":"minimum-number-of-flips-to-make-the-binary-string-alternating"}