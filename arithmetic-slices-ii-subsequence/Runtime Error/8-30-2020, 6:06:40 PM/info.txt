{"id":388656719,"lang":"cpp","time":"1 year, 7 months","timestamp":1598825200,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/388656719/","is_pending":"Not Pending","title":"Arithmetic Slices II - Subsequence","memory":"N/A","code":"class Solution {\npublic:\n    int numberOfArithmeticSlices(vector<int>& A) {\n        vector<unordered_map<int, array<int, 2>>> prevdif(A.size()); \n        int ans = 0; \n        for (int i = 1; i < A.size(); ++i) {\n            for (int j = 0; j < i; ++j) {\n                prevdif[i].insert(make_pair(A[i] - A[j], array<int, 2>{0, 0})); \n                ++prevdif[i][A[i] - A[j]][0]; \n                if (prevdif[j].find(A[i] - A[j]) != prevdif[j].end()) {\n                    prevdif[i][A[i] - A[j]][1] += prevdif[j][A[i] - A[j]][0] + prevdif[j][A[i] - A[j]][1]; \n                }\n            }\n            \n            for (auto p : prevdif[i]) {\n                ans += p.second[1]; \n            }\n        }\n        \n        // for (int i = 0; i < A.size(); ++i) {\n        //     cout << A[i] << \": \"; \n        //     for (auto p : prevdif[i]) {\n        //         cout << p.first << \": (\" << p.second[0] << \", \" << p.second[1] << \"), \"; \n        //     }\n        //     cout << endl; \n        // }\n        return ans; \n    }\n};","compare_result":"11111111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"arithmetic-slices-ii-subsequence"}