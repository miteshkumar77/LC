{"id":444785259,"lang":"cpp","time":"1 year, 2 months","timestamp":1611013242,"status_display":"Accepted","runtime":"156 ms","url":"/submissions/detail/444785259/","is_pending":"Not Pending","title":"Reconstruct a 2-Row Binary Matrix","memory":"87.9 MB","code":"class Solution {\npublic:\n    vector<vector<int>> reconstructMatrix(int upper, int lower, vector<int>& colsum) {\n        int n = colsum.size();\n        vector<vector<int>> ans(n, vector<int>(2, 0)); \n        int curr_upper = 0;\n        int curr_lower = 0;\n        for (int i = 0; i < n; ++i) {\n            if (colsum[i] == 1) {\n                ++curr_upper;\n                ans[i][0] = 1;\n            } else if (colsum[i] == 2) {\n                ++curr_upper;\n                ++curr_lower;\n                ans[i][0] = 1;\n                ans[i][1] = 1;\n            }\n        }\n        \n        for (int i = 0; i < n; ++i) {\n            if (ans[i][0] == 1 && ans[i][1] == 0 && curr_upper > upper && curr_lower < lower) {\n                swap(ans[i][0], ans[i][1]);\n                ++curr_lower;\n                --curr_upper;\n            }\n        }\n        \n        if (curr_upper != upper || curr_lower != lower) {\n            return vector<vector<int>>();\n        }\n        \n        vector<vector<int>> ret(2, vector<int>(n, 0)); \n        for (int i = 0; i < 2; ++i) {\n            for (int j = 0; j < n; ++j) {\n                ret[i][j] = ans[j][i];\n            }\n        }\n        return ret;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"reconstruct-a-2-row-binary-matrix"}