{"id":373366908,"lang":"cpp","time":"1 year, 8 months","timestamp":1596063104,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/373366908/","is_pending":"Not Pending","title":"Shortest Subarray with Sum at Least K","memory":"N/A","code":"class Solution {\npublic:\n    int shortestSubarray(vector<int>& A, int K) {\n        vector<int> P(A.size() + 1);\n        P[0] = 0; \n        for (int i = 1; i <= A.size(); ++i) {\n            P[i] += P[i - 1] + A[i - 1]; \n        }\n        \n        int ans = A.size() + 1; \n        deque<int> mq; \n        mq.push_back(0); \n        for (int i = 1; i < P.size(); ++i) {\n            if (P[i] >= K) {\n                ans = min(ans, i);\n            }\n            \n            while(mq.size() > 0 && P[i] - P[mq.front()] >= K) {\n                ans = min(ans, i - mq.front()); mq.pop_front(); \n            }\n            \n            while(mq.size() > 0 && P[i] <- P[mq.back()]) {\n                mq.pop_back(); \n            }\n            mq.push_back(i);\n        }\n        if (ans <= A.size()) {\n            return ans; \n        } else {\n            return -1; \n        }\n    }\n    \n    \n    \n};","compare_result":"111111110111111111111110110110110111011110000001101110101111101000110111011010001110100000101","title_slug":"shortest-subarray-with-sum-at-least-k"}