{"id":389134224,"lang":"cpp","time":"1 year, 7 months","timestamp":1598913451,"status_display":"Accepted","runtime":"248 ms","url":"/submissions/detail/389134224/","is_pending":"Not Pending","title":"Shortest Subarray with Sum at Least K","memory":"62.9 MB","code":"class Solution {\npublic:\n    int shortestSubarray(vector<int>& A, int K) {\n        \n        vector<int> P(A.size() + 1); \n        P[0] = 0; \n        for (int i = 1; i <= A.size(); ++i) {\n            P[i] = A[i - 1] + P[i - 1]; \n        }\n        deque<int> dq; \n        dq.push_back(0); \n        int ans = INT_MAX; \n        for (int i = 1; i < P.size(); ++i) {\n            while(!dq.empty() && P[i] - P[dq.back()] >= K) {\n                ans = min(i - dq.back(), ans); \n                dq.pop_back(); \n            }\n            \n            while(!dq.empty() && P[i] <= P[dq.front()]) {\n                dq.pop_front(); \n            }\n            dq.push_front(i); \n        }\n        \n        if (ans == INT_MAX) {\n            return -1; \n        }\n        return ans; \n        \n    }\n    \n    \n    \n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"shortest-subarray-with-sum-at-least-k"}