{"id":388583901,"lang":"cpp","time":"1 year, 7 months","timestamp":1598813872,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/388583901/","is_pending":"Not Pending","title":"Largest Component Size by Common Factor","memory":"N/A","code":"class Solution {\npublic:\n    int largestComponentSize(vector<int>& A) {\n        \n        int maxelem = *max_element(A.begin(), A.end()); \n        unordered_map<int, int> parent; \n        unordered_map<int, int> setsize;\n        for (int i : A) {\n            parent[i] = -1; \n            ++setsize[i]; \n        }\n        \n        function<int(int)> find = [&](int node) -> int {\n            if (parent[node] == -1) {\n                return node; \n            } else {\n                parent[node] = find(parent[node]); \n                return parent[node]; \n            }\n        };\n        \n        function<bool(int,int)> onion = [&](int a, int b) -> int {\n            int pa = find(a); \n            int pb = find(b); \n            if (pa != pb) {\n                parent[pa] = pb; \n                setsize[pb] += setsize[pa];\n                return true; \n            }\n            return false; \n        }; \n        \n        \n        vector<bool> sv(maxelem, true); \n        int lim = sqrt(maxelem); \n        int ans = 0; \n        for (int i = 2; i <= lim; ++i) {\n            if (sv[i]) {\n                int num = -1; \n                for (int j = i; j <= maxelem; j += i) {\n                    if (parent.find(j) != parent.end()) {\n                        num = j; \n                        break; \n                    }\n                }\n                \n                if (num != -1) {\n                    for (int j = 2 * i; j <= maxelem; j += i) {\n                        if (parent.find(j) != parent.end()) {\n                            onion(j, num); \n                            ans = max(ans, setsize[find(j)]); \n                        }\n                        sv[i] = false; \n                    }\n                }\n            }\n        }\n        \n        return ans; \n    }\n};","compare_result":"1101001101111111001111100011110010011100111111111100000000100000000000000000000000100110110110000000","title_slug":"largest-component-size-by-common-factor"}