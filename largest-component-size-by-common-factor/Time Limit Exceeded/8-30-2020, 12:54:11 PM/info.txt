{"id":388535496,"lang":"cpp","time":"1 year, 7 months","timestamp":1598806451,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/388535496/","is_pending":"Not Pending","title":"Largest Component Size by Common Factor","memory":"N/A","code":"class Solution {\npublic:\n    int largestComponentSize(vector<int>& A) {\n        vector<vector<int>> graph(A.size(), vector<int>()); \n        for (int i = 0; i < A.size(); ++i) {\n            for (int j = i + 1; j < A.size(); ++j) {\n                if (__gcd(A[i], A[j]) != 1) {\n                    graph[i].push_back(j); \n                    graph[j].push_back(i); \n                }\n            }\n        }\n        \n        vector<bool> visited(A.size(), false); \n        \n        function<int(int)> dfs = [&](int node) -> int {\n            if (visited[node]) {\n                return 0; \n            }\n            int ans = 1; \n            visited[node] = true; \n            for (int neighbor : graph[node]) {\n                ans += dfs(neighbor); \n            }\n            return ans; \n        };\n        \n        int ans = 0; \n        for (int i = 0; i < visited.size(); ++i) {\n            if (!visited[i]) {\n                ans = max(ans, dfs(i)); \n                 \n            }\n        }\n        return ans; \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111100000000000000000000000000","title_slug":"largest-component-size-by-common-factor"}