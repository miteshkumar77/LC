{"id":415657984,"lang":"golang","time":"1 year, 5 months","timestamp":1604255795,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/415657984/","is_pending":"Not Pending","title":"Print Immutable Linked List in Reverse","memory":"2.2 MB","code":"/*   Below is the interface for ImmutableListNode, which is already defined for you.\n *\n *   type ImmutableListNode struct {\n *       \n *   }\n *\n *   func (this *ImmutableListNode) getNext() ImmutableListNode {\n *\t\t// return the next node.\n *   }\n *\n *   func (this *ImmutableListNode) printValue() {\n *\t\t// print the value of this node.\n *   }\n */\n\nfunc printUtil(head ImmutableListNode, end ImmutableListNode) {\n    \n    if head == end {\n        head.printValue()\n        return\n    }\n    \n    var slow ImmutableListNode = head\n    var fast ImmutableListNode = head\n    var prev ImmutableListNode = nil\n    \n    for fast != end {\n        prev = slow \n        slow = slow.getNext()\n        fast = fast.getNext()\n        if fast != end {\n            fast = fast.getNext()\n        }\n    }\n    printUtil(slow, end)\n    printUtil(head, prev)\n}\n\nfunc printLinkedListInReverse(head ImmutableListNode) {\n    var tail ImmutableListNode = head\n    for tail.getNext() != nil {\n        tail = tail.getNext()\n    }\n    printUtil(head, tail)\n}","compare_result":"1111111111111111111111111111111","title_slug":"print-immutable-linked-list-in-reverse"}