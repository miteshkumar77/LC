{"id":415653812,"lang":"golang","time":"1 year, 5 months","timestamp":1604254995,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/415653812/","is_pending":"Not Pending","title":"Print Immutable Linked List in Reverse","memory":"2.2 MB","code":"/*   Below is the interface for ImmutableListNode, which is already defined for you.\n *\n *   type ImmutableListNode struct {\n *       \n *   }\n *\n *   func (this *ImmutableListNode) getNext() ImmutableListNode {\n *\t\t// return the next node.\n *   }\n *\n *   func (this *ImmutableListNode) printValue() {\n *\t\t// print the value of this node.\n *   }\n */\n\nfunc get(head ImmutableListNode, end ImmutableListNode) ImmutableListNode {\n    var prev ImmutableListNode = nil\n    for head != end {\n        prev = head\n        head = head.getNext()\n    }\n    return prev\n}\n\nfunc printLinkedListInReverse(head ImmutableListNode) {\n    var end ImmutableListNode = nil\n    for {\n        end = get(head, end)\n        if end == nil {\n            break;\n        }\n        end.printValue();\n    }\n}","compare_result":"1111111111111111111111111111111","title_slug":"print-immutable-linked-list-in-reverse"}