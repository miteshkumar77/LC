{"id":345599192,"lang":"cpp","time":"1 year, 10 months","timestamp":1590622565,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/345599192/","is_pending":"Not Pending","title":"Permutations II","memory":"11.4 MB","code":"class Solution {\npublic:\n    vector<vector<int>> permuteUnique(vector<int>& nums) {\n        if (nums.size() == 0) {\n            return vector<vector<int> >(1, vector<int>()); \n        }\n        vector<vector<int> > ans; \n        list<int> box; \n        unordered_map<int, int> num_map; \n        for (int num : nums) {\n            auto iter = num_map.find(num); \n            if (iter == num_map.end()) {\n                num_map.insert(pair<int, int>(num, 1)); \n            } else {\n                ++(iter -> second); \n            }\n        }\n        \n        enterNTimes(ans, box, nums, num_map, num_map.begin(), box.begin(), num_map.begin() -> second); \n        return ans; \n        \n    }\n    \n    void enterNTimes(\n        vector<vector<int> >& ans, \n        list<int>& box, \n        vector<int>& nums, \n        unordered_map<int, int>& num_map,\n        unordered_map<int, int>::iterator map_iter, \n        list<int>::iterator from,\n        int times\n    ) {\n        \n        if (box.size() == nums.size()) {\n            ans.push_back(vector<int>(box.begin(), box.end())); \n            return; \n        }\n        \n        if (times == 0) {\n            int nexttimes = 0; \n            if (next(map_iter) != num_map.end()) {\n                nexttimes = next(map_iter) -> second; \n            }\n            enterNTimes(ans, box, nums, num_map, next(map_iter), box.begin(), nexttimes); \n            return; \n        }\n        \n        for (auto iter = from; iter != box.end(); ++iter) {\n            auto tmp = box.insert(iter, map_iter -> first); \n            enterNTimes(ans, box, nums, num_map, map_iter, next(tmp), times - 1); \n            box.erase(tmp); \n        }\n        \n        box.push_back(map_iter -> first); \n        enterNTimes(ans, box, nums, num_map, map_iter, box.end(), times - 1); \n        box.pop_back(); \n    }\n};","compare_result":"111111111111111111111111111111","title_slug":"permutations-ii"}