{"id":492196042,"lang":"cpp","time":"11 months, 1 week","timestamp":1620826540,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/492196042/","is_pending":"Not Pending","title":"Pizza With 3n Slices","memory":"14.4 MB","code":"class Solution {\npublic:\n    int solve(vector<int>& s) {\n        int n = s.size();\n        vector<vector<int>> dp(n + 1, vector<int>((n+1)/3 + 1, 0));\n        /*\n            dp[i][j]: max score if we will have picked j pizzas \n                from pizzas 0 ... i.\n        */\n        int ans = 0;\n        for (int i = 1; i <= n; ++i) {\n            for (int j = 1; j <= min(i, (n+1)/3); ++j) {\n                if (i == 1) {\n                    dp[i][j] = max(dp[i-1][j], s[i-1]);\n                } else {\n                    dp[i][j] = max(dp[i-1][j], dp[i-2][j-1] + s[i-1]);\n                }\n            }\n            ans = max(ans, dp[i][(n+1)/3]);\n        }\n        return ans;\n    }\n    int maxSizeSlices(vector<int>& slices) {\n        int n = slices.size();\n        vector<int> a(slices.begin(), prev(slices.end()));\n        vector<int> b(slices.begin() + 1, slices.end());\n        return max(solve(a), solve(b));\n    }\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"pizza-with-3n-slices"}