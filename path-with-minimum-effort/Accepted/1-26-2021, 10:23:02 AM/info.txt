{"id":448099050,"lang":"cpp","time":"1 year, 2 months","timestamp":1611674582,"status_display":"Accepted","runtime":"204 ms","url":"/submissions/detail/448099050/","is_pending":"Not Pending","title":"Path With Minimum Effort","memory":"16.3 MB","code":"class Solution {\npublic:\n    array<int, 5> dirs{0, 1, 0, -1, 0};\n    bool exists(const vector<vector<int>>& heights, vector<vector<bool>>& visited, int limit, int i, int j, int prev_val, int max_seen) {\n        if (i >= heights.size() || i < 0 || j >= heights[0].size() || j < 0 || visited[i][j]) {\n            return false;\n        }\n        \n        max_seen = max(max_seen, abs(heights[i][j] - prev_val)); \n        if (limit < max_seen) {\n            return false;\n        }\n        \n        if (i == heights.size() - 1 && j == heights[0].size() - 1) {\n            return true;\n        }\n        visited[i][j] = true;\n        for (int x = 0; x < 4; ++x) {\n            if (exists(heights, visited, limit, i + dirs[x], j + dirs[x + 1], heights[i][j], max_seen)) {\n                return true;\n            }\n        }\n        \n        return false;\n\n    }\n    \n    int minimumEffortPath(vector<vector<int>>& heights) {\n        int l = 0;\n        int r = 0;\n        \n        for (auto& v : heights) {\n            for (auto i : v) r = max(r, i); \n        }\n        \n        \n        int mid;\n        int ans = r;\n        vector<vector<bool>> visited(heights.size(), vector<bool>(heights[0].size(), false)); \n        while(l <= r) {\n            for (int i = 0; i < heights.size(); ++i) {\n                for (int j = 0; j < heights[0].size(); ++j) {\n                    visited[i][j] = false;\n                }\n            }\n            mid = l + (r - l)/2;\n            if (exists(heights, visited, mid, 0, 0, heights[0][0], INT_MIN)) {\n                ans = mid;\n                r = mid - 1;\n            } else {\n                l = mid + 1;\n            }\n        }\n        return ans;\n        \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"path-with-minimum-effort"}