{"id":541532406,"lang":"cpp","time":"8Â months","timestamp":1629480890,"status_display":"Accepted","runtime":"76 ms","url":"/submissions/detail/541532406/","is_pending":"Not Pending","title":"Wildcard Matching","memory":"11.2 MB","code":"class Solution {\npublic:\n    bool isMatch(string s, string p) {\n        int n = s.length(); int m = p.length();\n        vector<vector<bool>> dp(n+1, vector<bool>(m+1, false));\n        dp[0][0] = true;\n        for (int i = 1; i <= m; ++i) {\n            if (p[i-1] == '*') {\n                dp[0][i] = dp[0][i-1];\n            }\n        }\n        \n        for (int i = 1; i <= n; ++i) {\n            for (int j = 1; j <= m; ++j) {\n                if (p[j-1] == s[i-1] || p[j-1] == '?') {\n                    dp[i][j] = dp[i-1][j-1];\n                } else if (p[j-1] == '*') {\n                    dp[i][j] = dp[i-1][j] || dp[i][j-1] || dp[i-1][j-1];\n                }\n            }\n        }\n        return dp[n][m];\n    }\n};","compare_resulttitle_slug":"wildcard-matching"}