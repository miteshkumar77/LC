{"id":429740071,"lang":"cpp","time":"1 year, 4 months","timestamp":1607745237,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/429740071/","is_pending":"Not Pending","title":"Prefix and Suffix Search","memory":"N/A","code":"class WordFilter {\npublic:\n    WordFilter(vector<string>& words) {\n        fwHead = new TN();\n        bwHead = new TN();\n        this -> words = words;\n        for (int i = 0; i < words.size(); ++i) {\n            insert(i, fwHead);\n            reverse(words[i].begin(), words[i].end());\n            insert(i, bwHead);\n        }\n    }\n    \n    int f(string prefix, string suffix) {\n        \n        TN* fw = fwHead;\n        TN* bw = bwHead;\n        for (char c : prefix) {\n            fw = (fw -> letters)[c - 'a']; \n            if (!fw) return -1;\n        }\n        \n        for (char c : prefix) {\n            bw = (bw -> letters)[c - 'a']; \n            if (!bw) return -1;\n        }\n        \n        int j = (fw->ends).size() - 1; \n        int i = (bw->ends).size() - 1;\n        \n        while(j >= 0 && i >= 0) {\n            if ((fw->ends)[j] > (bw->ends)[i]) {\n                --i;\n            } else if ((fw->ends)[j] > (bw->ends)[i]) {\n                --j;\n            } else {\n                return i;\n            }\n        }\n        return -1;\n    }\nprivate:\n    \n    struct TN {\n        \n        TN() {\n            fill(letters.begin(), letters.end(), nullptr);\n        }\n        array<TN*, 26> letters;\n        vector<int> ends;\n    };\n    \n    \n    void insert(int i, TN* head) {\n        string word = words[i];\n        (head -> ends).push_back(i);\n        for (char c : word) {\n            if (!(head -> letters)[c - 'a']) {\n                (head -> letters)[c - 'a'] = new TN();\n            }\n            head = (head -> letters)[c - 'a']; \n            (head -> ends).push_back(i);\n        }\n    }\n    \n    \n    \n    \n    TN* fwHead;\n    TN* bwHead;\n    vector<string> words; \n    \n};\n\n/**\n * Your WordFilter object will be instantiated and called as such:\n * WordFilter* obj = new WordFilter(words);\n * int param_1 = obj->f(prefix,suffix);\n */","compare_result":"101111000","title_slug":"prefix-and-suffix-search"}