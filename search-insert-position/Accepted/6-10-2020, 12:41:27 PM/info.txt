{"id":351807753,"lang":"cpp","time":"1 year, 10 months","timestamp":1591807287,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/351807753/","is_pending":"Not Pending","title":"Search Insert Position","memory":"9.9 MB","code":"class Solution {\npublic:\n    int searchInsert(vector<int>& nums, int target) {\n        int L = 0; int R = nums.size() - 1; \n        int ans = nums.size(); \n        int mid; \n        while(L <= R) {\n            mid = L + (R - L)/2; \n            if (nums[mid] < target) {\n                L = mid + 1; \n            } else if (nums[mid] > target) {\n                R = mid - 1; \n                ans = mid; \n            } else {\n                return mid; \n            }\n        }\n        return ans; \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111","title_slug":"search-insert-position"}