{"id":387793575,"lang":"cpp","time":"1 year, 7 months","timestamp":1598663218,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/387793575/","is_pending":"Not Pending","title":"Map Sum Pairs","memory":"8.4 MB","code":"class MapSum {\n    \nstruct TN {\n    \n    TN() {\n        isEnd = false; \n        sum = 0; \n        fill(letters.begin(), letters.end(), nullptr); \n    }\n    \n    array<TN*, 26> letters; \n    bool isEnd; \n    int sum; \n    \n};\n    \npublic:\n    /** Initialize your data structure here. */\n    MapSum() {\n        head = new TN(); \n    }\n    \n    void insert(string key, int val) {\n        insertW(head, key, val, 0); \n    }\n    \n    int sum(string prefix) {\n        return query(head, prefix); \n    }\n    \n    ~MapSum() {\n        deleteNode(head); \n    }\n    \nprivate:\n    \n    void deleteNode(TN* r) {\n        if (!r) {\n            return; \n        }\n        for (int i = 0; i < 26; ++i) {\n            deleteNode(r -> letters[i]);\n        }\n        delete r; \n    }\n    TN* head; \n    \n    int insertW(TN* root, string& key, int val, int i) {\n        if (i == key.length()) {\n            if (!root -> isEnd) {    \n                root -> sum += val; \n                root -> isEnd = true; \n                return val; \n            } else {\n                int dif = val - root -> sum; \n                root -> sum = val; \n                return dif; \n            }\n        }\n        if (!(root -> letters)[key[i] - 'a']) {\n            (root -> letters)[key[i] - 'a'] = new TN(); \n        }\n        int ret = insertW((root -> letters)[key[i] - 'a'], key, val, i + 1); \n        root -> sum += ret; \n        return ret; \n    }\n    \n    int query(TN* root, string& key) {\n        for (char c : key) {\n            if (!(root -> letters)[c - 'a']) {\n                return 0; \n            }\n            root = (root -> letters)[c - 'a']; \n        }\n        return root -> sum; \n    }\n};\n\n/**\n * Your MapSum object will be instantiated and called as such:\n * MapSum* obj = new MapSum();\n * obj->insert(key,val);\n * int param_2 = obj->sum(prefix);\n */","compare_result":"111111111111111111111111111111","title_slug":"map-sum-pairs"}