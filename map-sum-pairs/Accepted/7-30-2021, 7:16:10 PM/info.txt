{"id":530829628,"lang":"cpp","time":"8 months, 3 weeks","timestamp":1627686970,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/530829628/","is_pending":"Not Pending","title":"Map Sum Pairs","memory":"8.4 MB","code":"class MapSum {\nprivate:\n    struct TN {\n        TN() {\n            fill(letters.begin(), letters.end(), nullptr);\n        }\n        array<TN*, 26> letters;    \n        int sum{0};\n        int contrib{0};\n    };\n    \n    TN* root;\n    \n    int insert(TN* head, int idx, string const& key, int val) {\n        if (idx == key.length()) {\n            int orig = head->contrib;\n            head->contrib = val;\n            head->sum = head->sum - orig + val;\n            return orig;\n        } else {\n            if (!(head->letters)[key[idx]-'a']) {\n                (head->letters)[key[idx]-'a'] = new TN();\n            }\n            int orig = insert((head->letters)[key[idx]-'a'], idx+1, key, val);\n            head->sum = head->sum - orig + val;\n            return orig;\n        }\n    }\npublic:\n    /** Initialize your data structure here. */\n    MapSum() {\n        root = new TN();\n    }\n    \n    void insert(string key, int val) {\n        insert(root, 0, key, val);   \n    }\n    \n    int sum(string prefix) {\n        TN* head = root;\n        for (char c : prefix) {\n            if (!(head->letters)[c-'a']) return 0;\n            head = (head->letters)[c-'a'];\n        }\n        return head->sum;\n    }\n};\n\n/**\n * Your MapSum object will be instantiated and called as such:\n * MapSum* obj = new MapSum();\n * obj->insert(key,val);\n * int param_2 = obj->sum(prefix);\n */","compare_result":"1111111111111111111111111111111111","title_slug":"map-sum-pairs"}