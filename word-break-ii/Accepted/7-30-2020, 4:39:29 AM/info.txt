{"id":373552257,"lang":"cpp","time":"1 year, 8 months","timestamp":1596098369,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/373552257/","is_pending":"Not Pending","title":"Word Break II","memory":"9.2 MB","code":"class Solution {\npublic:\n    vector<string> wordBreak(string s, vector<string>& wordDict) {\n        vector<vector<int> > breaks(s.length() + 1, vector<int>());\n        unordered_set<string> dict(wordDict.begin(), wordDict.end()); \n        breaks[0].push_back(0); \n        for (int i = 0; i <= s.length(); ++i) {\n            if (breaks[i].size() > 0) {\n                string next = \"\"; \n                for (int j = i; j < s.length(); ++j) {\n                    next += s[j]; \n                    if (dict.find(next) != dict.end()) {\n                        breaks[j + 1].push_back(i);\n                    }\n                }\n            }\n        }\n        \n        vector<string> ans; \n        list<string> box; \n        backtrack(s, breaks, ans, box, s.length()); \n        return ans; \n        \n        \n    }\n    \n    void backtrack(string& input, vector<vector<int> >& breaks, vector<string>& ans, list<string>& box, int i) {\n        if (i == 0) {\n            string s = \"\";\n            for (string v : box) {\n                s += v; \n                s += ' ';\n            }\n            if (s.length() > 0) {\n                s.pop_back();\n            }\n            ans.push_back(s);\n            return;\n        }\n        \n        \n        for (int x : breaks[i]) {\n            box.push_front(input.substr(x, i - x));\n            backtrack(input, breaks, ans, box, x);\n            box.pop_front(); \n        }\n    }\n    \n    \n};","compare_result":"111111111111111111111111111111111111","title_slug":"word-break-ii"}