{"id":364345201,"lang":"cpp","time":"1 year, 9 months","timestamp":1594313649,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/364345201/","is_pending":"Not Pending","title":"Maximum Width of Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int widthOfBinaryTree(TreeNode* root) {\n        int L = 0; \n        int R = 0; \n        dfs(root, L, R, 0); \n        return R - L; \n    }\n    \n    void dfs(TreeNode* root, int& L, int& R, int C) {\n        if (!root) {\n            return; \n        }\n        \n        \n        if (C < L) {\n            L = C; \n        }\n        \n        if (C > R) {\n            R = C; \n        }\n        \n        dfs(root -> left, L, R, C - 1); \n        dfs(root -> right, L, R, C + 1); \n    }\n};","compare_result":"110000011011100010101100110000000111000010101000111110100010101100000000011101000000000100000001100000000000","title_slug":"maximum-width-of-binary-tree"}