{"id":376764632,"lang":"cpp","time":"1 year, 8 months","timestamp":1596683557,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/376764632/","is_pending":"Not Pending","title":"Invert Binary Tree","memory":"8.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* invertTree(TreeNode* root) {\n        if (!root) {\n            return nullptr; \n        }\n        invertTree(root -> left); \n        invertTree(root -> right); \n        swap(root -> left, root -> right); \n        return root; \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"invert-binary-tree"}