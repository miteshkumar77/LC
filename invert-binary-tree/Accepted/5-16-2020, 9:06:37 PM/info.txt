{"id":340440090,"lang":"cpp","time":"1 year, 11 months","timestamp":1589677597,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/340440090/","is_pending":"Not Pending","title":"Invert Binary Tree","memory":"8.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* invertTree(TreeNode* root) {\n        if (!root) {\n            return nullptr; \n        }\n        \n        TreeNode* tmp = root -> right; \n        root -> right = root -> left; \n        root -> left = tmp; \n        invertTree(root -> left); \n        invertTree(root -> right); \n        return root; \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"invert-binary-tree"}