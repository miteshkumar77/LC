{"id":360756218,"lang":"cpp","time":"1 year, 9 months","timestamp":1593624785,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/360756218/","is_pending":"Not Pending","title":"Largest Number","memory":"N/A","code":"class Solution {\npublic:\n    string largestNumber(vector<int>& nums) {\n        vector<string> equal; equal.reserve(nums.size()); \n        \n        for (int n : nums) {\n            equal.push_back(to_string(n)); \n        }\n        \n        sort(equal.begin(), equal.end(), [] (const string& a, const string& b) -> bool {\n            \n            string sa = a + b; \n            string sb = b + a; \n            \n            for (int i = 0; i < sa.length(); ++i) {\n                if ((sa[i] - '0') > (sb[i] - '0')) {\n                    return true; \n                } else if ((sa[i] - '0') < (sb[i] - '0')) {\n                    return false; \n                }\n            }\n            return true; \n        }); \n        \n        if (equal[0] == \"0\") {\n            return \"0\"; \n        }\n        string ans = \"\"; \n        for (string s : equal) {\n            ans += s; \n        }\n        return ans; \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"largest-number"}