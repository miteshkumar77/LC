{"id":415990588,"lang":"golang","time":"1 year, 5 months","timestamp":1604329753,"status_display":"Accepted","runtime":"64 ms","url":"/submissions/detail/415990588/","is_pending":"Not Pending","title":"Insertion Sort List","memory":"3.3 MB","code":"/**\n * Definition for singly-linked list.\n * type ListNode struct {\n *     Val int\n *     Next *ListNode\n * }\n */\nfunc doASwap(head *ListNode) {\n    var m *ListNode = head\n    var h *ListNode = head\n    for head != nil {\n        if head.Val < m.Val {\n            m = head\n        }\n        head = head.Next\n    }\n    m.Val, h.Val = h.Val, m.Val\n    \n}\nfunc insertionSortList(head *ListNode) *ListNode {\n    var h *ListNode = head\n    for h != nil {\n        doASwap(h)\n        h = h.Next\n    }\n    return head\n}","compare_result":"1111111111111111111111","title_slug":"insertion-sort-list"}