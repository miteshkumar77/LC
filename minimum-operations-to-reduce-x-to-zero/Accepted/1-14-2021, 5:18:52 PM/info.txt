{"id":443039850,"lang":"cpp","time":"1 year, 3 months","timestamp":1610662732,"status_display":"Accepted","runtime":"364 ms","url":"/submissions/detail/443039850/","is_pending":"Not Pending","title":"Minimum Operations to Reduce X to Zero","memory":"148.5 MB","code":"class Solution {\npublic:\n    int minOperations(vector<int>& nums, int x) {\n        // prefix + suffix = x\n        // prefix? = x - suffix\n        int suffix = accumulate(nums.begin(), nums.end(), 0);\n        \n        if (suffix == x) {\n            return nums.size();\n        }\n        \n        if (suffix < x) {\n            return -1;\n        }\n        \n        int prefix = 0;\n        int ans = INT_MAX;\n        unordered_map<int, int> seen_prefixes{{0, 0}};\n        for (int i = 0; i < nums.size(); ++i) {\n            if (seen_prefixes.find(x - suffix) != seen_prefixes.end()) {\n                ans = min(ans, (int)(seen_prefixes[x - suffix] + nums.size() - i)); \n            }\n            suffix -= nums[i];\n            prefix += nums[i];\n            seen_prefixes.insert(make_pair(prefix, i + 1));\n        }\n        if (seen_prefixes.find(x) != seen_prefixes.end()) {\n            ans = min(ans, seen_prefixes[x]); \n        }\n        return ans == INT_MAX?-1:ans;\n        \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-operations-to-reduce-x-to-zero"}