{"id":291788604,"lang":"python","time":"2 years, 3 months","timestamp":1578335499,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/291788604/","is_pending":"Not Pending","title":"Jump Game","memory":"N/A","code":"class Solution(object):\n    def canJump(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: bool\n        \"\"\"\n        \n        if len(nums) <= 1:\n            return True\n        \n        steps_skipped = 0\n        \n        max_distance = 0\n        \n        for i in nums:\n            if i >= steps_skipped:\n                max_distance += i - steps_skipped\n                steps_skipped = i\n            else:\n                steps_skipped -= 1\n            \n            if max_distance < len(nums) - 1 and nums[max_distance] == 0 and i == 0:\n                return False\n        \n        return True\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n#         if len(nums) <= 1:\n#             return True\n        \n#         max_n = nums[0]\n#         max_i = 0\n#         max_curr = 0\n#         max_curr_i = 0\n        \n#         while(True):\n            \n#             if max_n == 0:\n#                 return False\n#             for i in range(max_i + 1, max_n + max_i + 1):\n#                 if i >= len(nums) - 1:\n#                     return True\n                \n#                 if nums[i] >= max_curr:\n#                     max_curr = nums[i]\n#                     max_curr_i = i \n                    \n                    \n#             max_n = max_curr\n#             max_i = max_curr_i\n#             max_curr = 0\n            \n                ","compare_result":"111111111111111111110110111111110010101111111110100111110101111111111100110","title_slug":"jump-game"}