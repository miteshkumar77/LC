{"id":383360296,"lang":"cpp","time":"1Â year, 8Â months","timestamp":1597866527,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/383360296/","is_pending":"Not Pending","title":"Linked List in Binary Tree","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\n/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool isSubPath(ListNode* head, TreeNode* root) {\n        return helper(head, head, root); \n    }\n    \n    bool helper(ListNode* head, ListNode* cur, TreeNode* root) {\n        if (!cur) {\n            return true; \n        }\n        \n        if (!root) {\n            return false; \n        }\n        ListNode* nxt; \n        if (root -> val == cur -> val) {\n            nxt = cur -> next; \n        } else {\n            nxt = head; \n            if (head -> val == root -> val) {\n                nxt = nxt -> next; \n            }\n        }\n        \n        return helper(head, nxt, root -> left) || helper(head, nxt, root -> right); \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111110","title_slug":"linked-list-in-binary-tree"}