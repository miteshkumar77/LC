{"id":390172401,"lang":"cpp","time":"1 year, 7 months","timestamp":1599087945,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/390172401/","is_pending":"Not Pending","title":"Delete and Earn","memory":"9.9 MB","code":"class Solution {\npublic:\n    int deleteAndEarn(vector<int>& nums) {\n        if (nums.size() == 0) {\n            return 0; \n        }\n        unordered_map<int, int> ct; \n        for (int i : nums) {\n            ++ct[i]; \n        }\n        \n        vector<int> collection; collection.reserve(ct.size());  \n        for (auto p : ct) {\n            collection.push_back(p.first); \n        }\n        sort(collection.begin(), collection.end()); \n        \n        vector<int> dp(collection.size() + 1); \n        dp[0] = 0; \n        dp[1] = collection[0] * ct[collection[0]]; \n        for (int i = 2; i <= collection.size(); ++i) {\n            if (collection[i - 1] == collection[i - 2] + 1) {\n                dp[i] = max(dp[i - 1], dp[i - 2] + collection[i - 1] * ct[collection[i - 1]]); \n            } else {\n                dp[i] = dp[i - 1] + collection[i - 1] * ct[collection[i - 1]]; \n            }\n        }\n        return dp.back(); \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111","title_slug":"delete-and-earn"}