{"id":395652576,"lang":"cpp","time":"1 year, 7 months","timestamp":1600099756,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/395652576/","is_pending":"Not Pending","title":"Check If String Is Transformable With Substring Sort Operations","memory":"N/A","code":"class Solution {\npublic:\n    bool isTransformable(string s, string t) {\n        array<int, 10> cts; fill(cts.begin(), cts.end(), 0); \n        array<int, 10> ctt; fill(ctt.begin(), ctt.end(), 0); \n        for (char c : s) ++cts[c - '0']; \n        for (char c : t) ++ctt[c - '0']; \n        for (int i = 0; i < 10; ++i) {\n            if (cts[i] != ctt[i]) {\n                return false; \n            }\n        }\n        \n        // cout << \"anagrams\" << endl; \n        \n        array<deque<int>,10> lastpost; \n        for (int i = 0; i < t.length(); ++i) {\n            lastpost[t[i] - '0'].push_back(i); \n        }\n        \n        array<int, 10> lastposs; fill(lastposs.begin(), lastposs.end(), INT_MIN); \n        vector<bool> done(s.length(), false); \n        for (int i = 0; i < s.length(); ++i) {\n            char c = s[i]; \n            lastposs[c - '0'] = i; \n            if (lastpost[c - '0'].front() <= i) {\n                bool cheque = true; \n                for (int x = 0; x < (c - '0'); ++x) {\n                    if (lastposs[x] >= lastpost[c - '0'].front()) {\n                        cheque = false; \n                        break;\n                    }\n                }\n                if (cheque) {\n                    done[i] = true; \n                    lastposs[c - '0'] = lastpost[c - '0'].front(); \n                    lastpost[c - '0'].pop_front(); \n                    // cout << c << ' ';\n                }\n            }\n        }\n        \n        fill(lastposs.begin(), lastposs.end(), INT_MAX); \n        for (int i = (signed int)s.length() - 1; i >= 0; --i) {\n            char c = s[i]; \n            lastposs[c - '0'] = i; \n            if (!done[i]) {\n                bool cheque = true; \n                // cout << s[i] << endl; \n                for (int x = 9; x > (c - '0'); --x) {\n                    // cout << x << ' ' << lastposs[x] << ' ' << c << ' ' << lastpost[c - '0'].back() << endl; \n                    if (lastposs[x] <= lastpost[c - '0'].back()) {\n                        cheque = false; \n                        break;\n                    }\n                }\n                if (cheque) {\n                    done[i] = true; \n                    lastposs[c - '0'] = lastpost[c - '0'].back(); \n                    lastpost[c - '0'].pop_back(); \n                } else {\n                    return false; \n                }\n            }\n            \n        }\n        return true; \n    }\n};","compare_result":"11111110111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"check-if-string-is-transformable-with-substring-sort-operations"}