{"id":367047737,"lang":"cpp","time":"1 year, 9 months","timestamp":1594835727,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/367047737/","is_pending":"Not Pending","title":"Reverse Nodes in k-Group","memory":"10.3 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* reverseKGroup(ListNode* head, int k) {\n        if (k == 1) {\n            return head; \n        }\n        \n        int i = 1; \n        ListNode* pre = nullptr; \n        ListNode* curr = head; \n        ListNode* next = head?head->next:head; \n        while(curr) {\n            if (i == k) {\n                i = 1; \n                if (!pre) {\n                    curr -> next = nullptr; \n                    reverseSubList(head);\n                    pre = head; \n                    pre -> next = next; \n                    head = curr; \n                    curr = next; \n                    next = curr?curr->next:nullptr; \n                    \n                } else {\n                    curr -> next = nullptr; \n                    reverseSubList(pre -> next); \n                    pre -> next -> next = next; \n                    ListNode* tmp = pre -> next; \n                    pre -> next = curr; \n                    pre = tmp; \n                    curr = next; \n                    next = curr?curr->next:nullptr; \n                }\n            } else {\n                ++i; \n                curr = next;\n                next = next?next->next:nullptr; \n            }\n        }\n        return head; \n        \n    }\n    \n    \n    \n    \n    \n    void reverseSubList(ListNode* start) {\n        ListNode* pre = nullptr; \n        ListNode* mid = start; \n        ListNode* nex = mid?mid -> next:nullptr;\n        while(mid) {\n            mid -> next = pre; \n            pre = mid; \n            mid = nex; \n            nex = nex?nex->next:nullptr; \n        }\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111","title_slug":"reverse-nodes-in-k-group"}