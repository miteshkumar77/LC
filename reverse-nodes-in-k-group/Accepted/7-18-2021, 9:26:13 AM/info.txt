{"id":524443994,"lang":"cpp","time":"9Â months","timestamp":1626614773,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/524443994/","is_pending":"Not Pending","title":"Reverse Nodes in k-Group","memory":"11.6 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    pair<ListNode*, bool> kth(ListNode* head, int k) {\n        if (!head || !k) return {head, k==0};\n        return kth(head->next, k-1);\n    }\n    \n    ListNode* reverse(ListNode* prev, ListNode* cur, ListNode* end) {\n        ListNode* stop = end;\n        ListNode* tmp;\n        while(cur != end) {\n            tmp = cur->next;\n            cur->next = stop;\n            stop = cur;\n            cur = tmp;\n        }    \n        if (prev) prev->next = stop;\n        return stop;\n    }\n    \n    ListNode* reverseKGroup(ListNode* head, int k) {\n        ListNode* ret = nullptr;\n        ListNode* cur = head;\n        ListNode* pre = nullptr;\n        ListNode* tmp;\n        ListNode* hrt = head;\n        while(cur) {\n            auto p = kth(cur, k);\n            tmp = p.first;\n            bool ok = p.second;    \n            if (ok) {\n                hrt = reverse(pre, cur, tmp);\n            }\n            if (!ret) ret = hrt;\n            pre = cur;\n            cur = tmp;\n            \n        }\n        return ret;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111","title_slug":"reverse-nodes-in-k-group"}