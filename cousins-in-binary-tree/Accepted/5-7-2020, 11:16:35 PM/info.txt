{"id":336030034,"lang":"cpp","time":"1 year, 11 months","timestamp":1588907795,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/336030034/","is_pending":"Not Pending","title":"Cousins in Binary Tree","memory":"11.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool isCousins(TreeNode* root, int x, int y) {\n        list<TreeNode*> parent {root}; \n        return bfs(parent, x, y); \n    }\n    \n    bool bfs(list<TreeNode*>& parents, int x, int y) {\n        \n        if (parents.size() == 0) {\n            return false; \n        }\n        int finds = 0; \n        \n        list<TreeNode*> next; \n        \n        for (TreeNode* p : parents) {\n            TreeNode* l = p -> left; \n            TreeNode* r = p -> right; \n            if (l && r) {\n                if (((l -> val) == x || (l -> val) == y) && ((r -> val) == x || (r -> val) == y)) {\n                    return false; \n                }\n            }\n            \n            if (l && (l -> val == x || l -> val == y)) {\n                ++finds; \n            } else if (r && (r -> val == x || r -> val == y)) {\n                ++finds; \n            }\n            \n            if (finds == 2) {\n                return true; \n            }\n            \n            if (l) {\n                next.push_back(l); \n            }\n            \n            if (r) {\n                next.push_back(r); \n            }\n        }\n        \n        return bfs(next, x, y); \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"cousins-in-binary-tree"}