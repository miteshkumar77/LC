{"id":508031268,"lang":"cpp","time":"10 months, 1 week","timestamp":1623718688,"status_display":"Accepted","runtime":"132 ms","url":"/submissions/detail/508031268/","is_pending":"Not Pending","title":"Sum of Distances in Tree","memory":"51.2 MB","code":"class Solution {\npublic:\n    array<int,2> dfs(int node, int parent, vector<vector<int>>& graph, vector<unordered_map<int,array<int,2>>>& dp) {\n        if (parent != -1 && dp[parent].count(node)) return dp[parent][node];\n        int dist = 0;\n        int total = 1;\n        for (int neighbor : graph[node]) {\n            if (neighbor == parent) continue;\n            auto a = dfs(neighbor, node, graph, dp);\n            dist += a[0] + a[1];\n            total += a[1];\n        }\n        if (parent != -1) dp[parent][node] = {dist, total};\n        return {dist, total};\n    }\n    vector<int> sumOfDistancesInTree(int n, vector<vector<int>>& edges) {\n        vector<unordered_map<int, array<int,2>>> dp(n);\n        vector<vector<int>> graph(n);\n        for (const auto& v : edges) {\n            graph[v[0]].push_back(v[1]);\n            graph[v[1]].push_back(v[0]);\n        }\n        vector<int> ans(n);\n        for (int i = 0; i < n; ++i) {\n            ans[i] = dfs(i, -1, graph, dp)[0];\n        }\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"sum-of-distances-in-tree"}