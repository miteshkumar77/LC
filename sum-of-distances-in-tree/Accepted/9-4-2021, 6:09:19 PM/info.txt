{"id":549547952,"lang":"cpp","time":"7 months, 2 weeks","timestamp":1630793359,"status_display":"Accepted","runtime":"504 ms","url":"/submissions/detail/549547952/","is_pending":"Not Pending","title":"Sum of Distances in Tree","memory":"150.8 MB","code":"class Solution {\npublic:\n    \n    array<int, 2> calc(int parent, int node, vector<unordered_map<int, array<int, 2>>>& dp, vector<vector<int>>& graph) {\n        if (parent == -1 || dp[parent][node] == array<int, 2>{-1, -1}) {\n            array<int, 2> ans = {1, 0};\n            for (auto neighbor : graph[node]) {\n                if (neighbor != parent) {\n                    auto r = calc(node, neighbor, dp, graph);\n                    ans[0] += r[0];\n                    ans[1] += r[1] + r[0];\n                }\n            }\n            if (parent != -1) {\n                dp[parent][node] = ans;\n            }\n            return ans;\n        }\n        return dp[parent][node];\n    }\n\n    vector<int> sumOfDistancesInTree(int n, vector<vector<int>>& edges) {\n        vector<vector<int>> tree(n);\n        vector<unordered_map<int,array<int, 2>>> dp(n);\n        for (auto const& e : edges) {\n            tree[e[0]].push_back(e[1]);\n            tree[e[1]].push_back(e[0]);\n            dp[e[0]][e[1]] = {-1, -1};\n            dp[e[1]][e[0]] = {-1, -1};\n        }\n        vector<int> ans(n);\n        for (int i = 0; i < n; ++i) {\n            ans[i] = calc(-1, i, dp, tree)[1];\n        }\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"sum-of-distances-in-tree"}