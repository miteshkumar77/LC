{"id":355369054,"lang":"cpp","time":"1 year, 10 months","timestamp":1592493799,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/355369054/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal","memory":"12.6 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\n\n\ntypedef pair<TreeNode*, int> pli; \nclass Solution {\npublic:\n    vector<vector<int>> levelOrder(TreeNode* root) {\n        vector<vector<int> > ans; \n        if (!root) {\n            return ans; \n        }\n        queue<pli> q; q.push(pli(root, 0));  \n        while(!q.empty()) {\n            pli top = q.front(); q.pop(); \n            if (top.second + 1 > ans.size()) {\n                ans.push_back(vector<int>()); \n            }\n            ans[top.second].push_back(top.first -> val); \n            if (top.first -> left) {\n                q.push(pli(top.first -> left, top.second + 1)); \n            }\n            if (top.first -> right) {\n                q.push(pli(top.first -> right, top.second + 1)); \n            }\n        }\n        return ans; \n    }\n};","compare_result":"1111111111111111111111111111111111","title_slug":"binary-tree-level-order-traversal"}