{"id":495820108,"lang":"cpp","time":"11Â months","timestamp":1621521970,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/495820108/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal","memory":"12.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>> levelOrder(TreeNode* root) {\n        vector<vector<int>> ans;\n        int cur = 0;\n        queue<pair<TreeNode*, int>> q;\n        q.push({root, 1});\n        while(!q.empty()) {\n            auto p = q.front(); q.pop();\n            if (!p.first) continue;\n            if (p.second != cur) {\n                cur = p.second;\n                ans.push_back(vector<int>());\n            }\n            ans.back().push_back(p.first->val);\n            q.push({p.first->left, p.second+1});\n            q.push({p.first->right, p.second+1});\n        }\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111","title_slug":"binary-tree-level-order-traversal"}