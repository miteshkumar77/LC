{"id":387752204,"lang":"cpp","time":"1 year, 7 months","timestamp":1598653438,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/387752204/","is_pending":"Not Pending","title":"Partition Labels","memory":"7.5 MB","code":"class Solution {\npublic:\n    vector<int> partitionLabels(string s) {\n        array<int, 26> st; fill(st.begin(), st.end(), INT_MAX); \n        array<int, 26> en; fill(en.begin(), en.end(), INT_MIN); \n        int i = 0; \n        for (char c : s) {\n            st[c - 'a'] = min(st[c - 'a'], i); \n            en[c - 'a'] = max(en[c - 'a'], i); \n            ++i; \n        }\n        \n        vector<vector<int>> ints; \n        for (int i = 0; i < 26; ++i) {\n            if (st[i] <= en[i]) {\n                ints.push_back(vector<int>{st[i], en[i]}); \n                int nextmin = st[i]; int nextmax = en[i]; \n                while(true) {\n                    for (int x = ints.back()[0]; x <= ints.back()[1]; ++x) {\n                        nextmin = min(nextmin, st[s[x] - 'a']); \n                        nextmax = max(nextmax, st[s[x] - 'a']); \n                    }\n                    if (nextmin < ints.back()[0] || nextmax > ints.back()[1]) {\n                        ints.back()[0] = nextmin; \n                        ints.back()[1] = nextmax; \n                    } else {\n                        break; \n                    }\n                }\n            }\n            \n           \n        }\n        \n        sort(ints.begin(), ints.end(), [](vector<int>& a, vector<int>& b) -> bool {\n            return a[0] < b[0]; \n        }); \n        \n        // for (auto i : ints) {\n        //     cout << \"[\" << i[0] << \", \" << i[1] << \"], \";  \n        // }cout << endl; \n        vector<vector<int>> merged; \n        merged.push_back(ints[0]); \n        \n        for (int i = 1; i < ints.size(); ++i) {\n            if (ints[i][0] <= merged.back()[1]) {\n                merged.back()[1] = max(merged.back()[1], ints[i][1]); \n            } else {\n                merged.push_back(ints[i]); \n            }\n        }\n        \n        // for (auto i : merged) {\n        //     cout << \"[\" << i[0] << \", \" << i[1] << \"], \";  \n        // }cout << endl; \n        vector<int> ans; ans.reserve(merged.size()); \n        \n        for (auto v : merged) {\n            ans.push_back(v[1] - v[0] + 1); \n        }\n        return ans; \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"partition-labels"}