{"id":416904633,"lang":"cpp","time":"1 year, 5 months","timestamp":1604543233,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/416904633/","is_pending":"Not Pending","title":"Number of Connected Components in an Undirected Graph","memory":"N/A","code":"class Solution {\npublic:\n    int countComponents(int n, vector<vector<int>>& edges) {\n        unordered_map<int, unordered_set<int>> graph;\n        for (auto e : edges) {\n            graph[e[0]].insert(e[1]);\n        }\n        vector<int> ts; \n        ts.reserve(n);\n        vector<bool> visited(n, false);\n        function<void(int)> dfs = [&](int node) -> void {\n            if (visited[node]) {\n                return;\n            }\n            visited[node] = true;\n            \n            for (int neighbor : graph[node]) {\n                dfs(neighbor);\n            }\n            ts.push_back(node);\n        };\n        \n        for (int i = 0; i < n; ++i) {\n            dfs(i);\n        }\n        \n        for (int i = 0; i < n; ++i) visited[i] = false;\n        \n        int ans = 0;\n        \n        for (int i = n - 1; i >= 0; --i) {\n            if (!visited[ts[i]]) {\n                ++ans;\n            }\n            \n            visited[ts[i]] = true;\n            for (int n : graph[ts[i]]) {\n                visited[n] = true;\n            }\n        }\n        return ans;\n        \n    }\n};","compare_result":"111111111111111111110111111111011100000000011","title_slug":"number-of-connected-components-in-an-undirected-graph"}