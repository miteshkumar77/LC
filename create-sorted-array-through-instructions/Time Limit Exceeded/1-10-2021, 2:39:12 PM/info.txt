{"id":441253096,"lang":"cpp","time":"1 year, 3 months","timestamp":1610307552,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/441253096/","is_pending":"Not Pending","title":"Create Sorted Array through Instructions","memory":"N/A","code":"class Solution {\npublic:\n    int createSortedArray(vector<int>& instructions) {\n        function<bool(int,int)> increasing = [](int a, int b) -> bool {\n            return a < b; \n        };\n        \n        function<bool(int,int)> decreasing = [](int a, int b) -> bool {\n            return a > b;\n        };\n        \n        auto vlt = getWay(instructions, increasing);\n        cout << \"sorted first\" << endl;\n        auto vgt = getWay(instructions, decreasing);\n        cout << \"sorted second\" << endl;\n        int ans = 0;\n        vector<int> sorted(vlt.size(), 0);\n        for (int i = 0; i < vlt.size(); ++i) {\n            sorted[vlt[i][2]] = vlt[i][1];\n        }\n        for (int i = 0; i < vgt.size(); ++i) {\n            ans += min(sorted[vgt[i][2]], vgt[i][1]);\n        }\n        return ans;\n    }\n    \n    vector<array<int, 3>> getWay(const vector<int>& instructions, function<bool(int,int)> cmp) {\n        int n = instructions.size();\n        vector<array<int, 3>> vctr(n);\n        for (int i = 0; i < n; ++i) {\n            vctr[i] = {instructions[i], 0, i};\n        }\n        \n        return mergeSort(vctr, cmp);\n        \n    }\n    \n    vector<array<int, 3>> mergeSort(vector<array<int, 3>> data, \n                                    const function<bool(int,int)>& cmp) {\n        if (data.size() == 1) {\n            return data;\n        }\n        int mid = data.size()/2;\n        auto l = mergeSort(vector<array<int, 3>>(data.begin(), data.begin() + mid), cmp);\n        auto r = mergeSort(vector<array<int, 3>>(data.begin() + mid, data.end()), cmp);\n        int i = 0;\n        int j = 0;\n        vector<array<int, 3>> ret; ret.reserve(l.size() + r.size());\n        \n        while(i < l.size() || j < r.size()) {\n            if (j >= r.size() || (i < l.size() && cmp(l[i][0], r[j][0]))) {\n                ret.push_back(l[i++]);\n            } else {\n                ret.push_back(r[j++]);\n                ret.back()[1] += i;\n            }\n        }\n        return ret;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111110000000000","title_slug":"create-sorted-array-through-instructions"}