{"id":443878392,"lang":"cpp","time":"1 year, 3 months","timestamp":1610845461,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/443878392/","is_pending":"Not Pending","title":"Count Number of Teams","memory":"9.7 MB","code":"class Solution {\npublic:\n    int numTeams(vector<int>& rating) {\n        int n = rating.size();\n        \n        auto vec = getLT(rating);\n        \n        int ans = 0;\n        \n        for (int i = 0; i < n; ++i) {\n            int num_left = i;\n            int num_right = n - i - 1;\n            int num_lt_left = vec[i][0];\n            int num_lt_right = vec[i][1];\n            int num_gt_left = num_left - num_lt_left;\n            int num_gt_right = num_right - num_lt_right;\n            ans += num_gt_left * num_lt_right + num_gt_right * num_lt_left;\n        }\n        return ans;\n    }\n    \n    vector<array<int, 2>> getLT(const vector<int>& rating) {\n        int n = rating.size();\n        vector<array<int, 2>> vec; vec.reserve(n);    \n        for (int i = 0; i < n; ++i) {\n            vec.push_back({rating[i], i}); \n        }\n        vector<array<int, 2>> copySpace(n);\n        vector<array<int, 2>> numLT(n, {0, 0}); \n        mergeSort(vec, copySpace, 0, n - 1, numLT);\n        \n        return numLT;\n        \n    }\n    \n    void mergeSort(vector<array<int, 2>>& vec, vector<array<int, 2>>& copySpace, int l, int r, vector<array<int, 2>>& numLT) {\n        if (l >= r) return;\n        \n        int mid = l + (r - l)/2;\n        mergeSort(vec, copySpace, l, mid, numLT);\n        mergeSort(vec, copySpace, mid + 1, r, numLT);\n        \n        for (int i = l; i <= r; ++i) {\n            copySpace[i] = vec[i];\n        }\n        \n        \n        int lp = l;\n        int le = mid + 1;\n        int rp = mid + 1;\n        int re = r + 1;\n        int p = l;\n        int l0 = lp;\n        int r0 = rp;\n        while(lp < le || rp < re) {\n            if (rp >= re || (lp < le && copySpace[lp][0] < copySpace[rp][0])) {\n                numLT[copySpace[lp][1]][1] += rp - r0;\n                vec[p++] = copySpace[lp++];\n            } else {\n                numLT[copySpace[rp][1]][0] += lp - l0;\n                vec[p++] = copySpace[rp++];\n            }\n        }\n        \n    }\n    \n    \n\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"count-number-of-teams"}