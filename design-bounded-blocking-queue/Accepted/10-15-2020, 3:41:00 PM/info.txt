{"id":409166825,"lang":"cpp","time":"1 year, 6 months","timestamp":1602790860,"status_display":"Accepted","runtime":"124 ms","url":"/submissions/detail/409166825/","is_pending":"Not Pending","title":"Design Bounded Blocking Queue","memory":"9.5 MB","code":"class BoundedBlockingQueue {\npublic:\n    BoundedBlockingQueue(int capacity) {\n        this -> capacity = capacity;\n    }\n    \n    void enqueue(int element) {\n        unique_lock<mutex> ul(lk);\n        cv.wait(ul, [&] { return q.size() < capacity; });\n        q.push(element);\n        cv.notify_one();\n    }\n    \n    int dequeue() {\n        unique_lock<mutex> ul(lk);\n        cv.wait(ul, [&] { return q.size() > 0; });\n        int ret = q.front(); q.pop();\n        cv.notify_one();\n        return ret;\n    }\n    \n    int size() {\n        return q.size();\n    }\nprivate:\n    \n    mutex lk;\n    int capacity;\n    condition_variable cv;\n    queue<int> q;\n};","compare_result":"111111111111111","title_slug":"design-bounded-blocking-queue"}