{"id":499213332,"lang":"cpp","time":"10 months, 3 weeks","timestamp":1622162531,"status_display":"Accepted","runtime":"1908 ms","url":"/submissions/detail/499213332/","is_pending":"Not Pending","title":"Stickers to Spell Word","memory":"499.6 MB","code":"class Solution {\npublic:\n    \n    \n    struct VH {\n        size_t operator()(const vector<int>& v) const {\n            hash<int> hasher;\n            size_t seed = 0;\n            for (int i : v) seed ^= hasher(i) + 0x9e3779b9 + (seed<<6) + (seed>>2);\n            return seed;\n        }\n    };\n    int minStickers(vector<string>& stickers, string target) {\n        unordered_set<vector<int>, VH> seen;\n        queue<pair<vector<int>, int>> q;\n        vector<int> st(26, 0);\n        for (char c : target) ++st[c-'a'];\n        q.push({st, 0});\n        vector<vector<int>> cts;\n        for (const string& s : stickers) {\n            cts.push_back(vector<int>(26, 0));\n            for (char c : s) ++cts.back()[c-'a'];\n        }\n        vector<int> stp(26, 0);\n        while(!q.empty()) {\n            auto p = q.front();\n            vector<int> t = p.first;\n            int dist = p.second;\n            q.pop();\n            if (t == stp) return dist;\n            if (seen.count(t)) continue;\n            seen.insert(t);\n            for (const auto& v : cts) {\n                vector<int> next(t.begin(), t.end());\n                for (int i = 0; i < 26; ++i) next[i] = max(0, t[i] - v[i]);\n                q.push({next, dist + 1});\n            }\n        }\n        return -1;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"stickers-to-spell-word"}