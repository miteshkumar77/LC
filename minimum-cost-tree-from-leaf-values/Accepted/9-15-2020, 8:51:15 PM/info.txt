{"id":396332628,"lang":"cpp","time":"1 year, 7 months","timestamp":1600217475,"status_display":"Accepted","runtime":"44 ms","url":"/submissions/detail/396332628/","is_pending":"Not Pending","title":"Minimum Cost Tree From Leaf Values","memory":"9.6 MB","code":"class Solution {\npublic:\n    typedef array<int,2> pii; \n    int mctFromLeafValues(vector<int>& arr) {\n        \n        // p.first = max leaf value\n        // p.second = total sum\n        int n = arr.size(); \n        int ans = INT_MAX; \n        vector<vector<pii>> dp(n, vector<pii>(n));\n        vector<vector<bool>> set(n, vector<bool>(n, false)); \n        \n        \n        function<pii(int,int)> bt = [&](int L, int R) -> pii {\n            if (L == R) {\n                return pii{arr[L], 0}; \n            }    \n            \n            if (set[L][R]) {\n                return dp[L][R]; \n            }\n            int nodeval = -1; \n            int retsum = INT_MAX; \n            for (int i = L; i < R; ++i) {\n                pii l = bt(L, i); \n                pii r = bt(i + 1, R); \n                \n                int thissum = l[0] * r[0] + l[1] + r[1]; \n                int thisnodeval = max(l[0], r[0]); \n                if (retsum > thissum || retsum == thissum && thisnodeval < nodeval) {\n                    retsum = thissum; \n                    nodeval = thisnodeval; \n                }\n            }\n            set[L][R] = true; \n            dp[L][R] = pii{nodeval, retsum}; \n            return pii{nodeval, retsum}; \n        };\n        \n        \n        return bt(0, n - 1)[1]; \n        \n    }\n    \n    \n\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-cost-tree-from-leaf-values"}