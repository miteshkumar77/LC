{"id":460606482,"lang":"cpp","time":"1 year, 1 month","timestamp":1614275115,"status_display":"Accepted","runtime":"24 ms","url":"/submissions/detail/460606482/","is_pending":"Not Pending","title":"Shortest Unsorted Continuous Subarray","memory":"26.4 MB","code":"class Solution {\npublic:\n    int findUnsortedSubarray(vector<int>& nums) {\n        int n = nums.size();\n        int l = n;\n        int r = -1;\n        int maxseen = INT_MIN;\n        int minseen = INT_MAX;\n        for (int i = 0; i < n; ++i) {\n            if (nums[i] < maxseen) {\n                r = i;\n            } else {\n                maxseen = nums[i];\n            }\n        }\n        \n        for (int j = n - 1; j >= 0; --j) {\n            if (nums[j] > minseen) {\n                l = j;\n            } else {\n                minseen = nums[j]; \n            }\n        }\n        if (r <= l) return 0;\n        return r - l + 1;\n        \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"shortest-unsorted-continuous-subarray"}