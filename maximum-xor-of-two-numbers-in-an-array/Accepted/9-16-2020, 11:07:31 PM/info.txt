{"id":396843676,"lang":"cpp","time":"1 year, 7 months","timestamp":1600312051,"status_display":"Accepted","runtime":"236 ms","url":"/submissions/detail/396843676/","is_pending":"Not Pending","title":"Maximum XOR of Two Numbers in an Array","memory":"36 MB","code":"class Solution {\n    \nprivate:\n    \n    struct TN {\n        \n        TN () {\n            fill(next.begin(), next.end(), nullptr); \n            isEnd = false; \n        }\n        array<TN*, 2> next; \n        bool isEnd; \n    };\n    \n    \n    void insert(int num, TN* head) {\n        \n        for (int bit = 1 << 30; bit != 0; bit >>= 1) {\n            if (!head -> next[!!(num & bit)]) {\n                head -> next[!!(num & bit)] = new TN(); \n            }\n            head = head -> next[!!(num & bit)]; \n        }\n        head -> isEnd = true; \n    }\n    \n    int maxdif(int num, TN* head) {\n        int ans = 0;  \n        for (int bit = 1 << 30; bit != 0; bit >>= 1) {\n            if (head -> next[!(num & bit)]) {\n                head = head -> next[!(num & bit)];\n                ans += bit; \n            } else {\n                head = head -> next[!!(num & bit)]; \n            }\n        }\n        return ans; \n    }\n    \npublic:\n    \n    \n    int findMaximumXOR(vector<int>& nums) { \n        TN* head = new TN(); \n        insert(nums[0], head);\n        int ans = 0; \n        for (int i = 1; i < nums.size(); ++i) {\n            ans = max(ans, maxdif(nums[i], head));\n            insert(nums[i], head); \n        }\n        return ans; \n    }\n};","compare_result":"111111111111111111111111111111111111111","title_slug":"maximum-xor-of-two-numbers-in-an-array"}