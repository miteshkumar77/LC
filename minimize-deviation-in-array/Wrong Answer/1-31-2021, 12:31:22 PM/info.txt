{"id":450204820,"lang":"cpp","time":"1 year, 2 months","timestamp":1612114282,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/450204820/","is_pending":"Not Pending","title":"Minimize Deviation in Array","memory":"N/A","code":"class Solution {\npublic:\n    int minimumDeviation(vector<int>& nums) {\n        int n = nums.size();\n        map<int,int> ct;\n        for (int i : nums) ct.insert({i, 1});\n        \n        int current_diff;\n        int minval;\n        int maxval;\n        \n        for (int i = 0; i < n; ++i) {\n            minval = ct.begin() -> first;\n            maxval = prev(ct.end()) -> first;\n            current_diff = maxval - minval;\n            // for (auto p : ct) cout << p.first << ' ' << p.second << \" | \";\n            // cout << endl;\n            if (minval % 2 == 1 && abs(maxval - minval * 2) < current_diff) {\n                --(ct.begin() -> second);\n                if (ct.begin() -> second == 0) {\n                    ct.erase(minval); \n                }\n                ++ct[minval * 2];\n            } else if (maxval % 2 == 0 && abs(maxval/2 - minval) < current_diff) {\n                --(prev(ct.end())->second); \n                if ((prev(ct.end())->second) == 0) {\n                    ct.erase(maxval); \n                    ++ct[maxval/2];\n                }\n            } else {\n                break;\n            }\n        }\n        return current_diff;\n        \n    }\n};","compare_result":"1111111111111111111111111111100111111111111100000111100000111111111111111111","title_slug":"minimize-deviation-in-array"}