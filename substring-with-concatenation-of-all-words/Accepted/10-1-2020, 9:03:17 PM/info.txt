{"id":403309093,"lang":"cpp","time":"1 year, 6 months","timestamp":1601600597,"status_display":"Accepted","runtime":"1896 ms","url":"/submissions/detail/403309093/","is_pending":"Not Pending","title":"Substring with Concatenation of All Words","memory":"385.6 MB","code":"class Solution {\npublic:\n    vector<int> findSubstring(string s, vector<string>& words) {\n        function<bool(int)> check = [&](int i) -> bool {\n            unordered_map<string, int> ct;\n            for (auto word : words) ++ct[word];\n            string buf;\n            for (int x = i; x < s.length(); ++x) {\n                buf += s[x];\n                if (buf.length() == words[0].length()) {\n                    if (ct.find(buf) != ct.end()) {\n                        --ct[buf];\n                        if (ct[buf] == 0) {\n                            ct.erase(buf);\n                        }\n                        \n                    } else {\n                        return false;\n                    }\n                    \n                    if (ct.size() == 0) {\n                        return true;\n                        \n                    }\n                    buf = \"\";\n                }\n            }\n            return false;\n        };\n        vector<int> ans;\n        int l = words.size() * words[0].length();\n        for (int i = 0; i + l <= s.length(); ++i) {\n            if (check(i)) {\n                ans.push_back(i);\n            }\n        }\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"substring-with-concatenation-of-all-words"}