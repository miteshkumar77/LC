{"id":541189418,"lang":"cpp","time":"8Â months","timestamp":1629420549,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/541189418/","is_pending":"Not Pending","title":"Text Justification","memory":"7.5 MB","code":"class Solution {\npublic:\n    \n    string pack(vector<string>& words, int len, int maxWidth, bool last) {\n        int n = words.size();\n        if (n == 1) {\n            return words[0] + string(maxWidth - len, ' ');\n        }\n        string ans;\n        int total_space = maxWidth - len;\n        int base = (total_space)/(n-1);\n        int rem = total_space - base * (n-1);\n        // cout << rem << endl;\n        for (int i = 0; i < n; ++i) {\n            ans += words[i];\n            if (i+1 < n) {\n                ans += string(last ? 1 : (base + (rem-- > 0)), ' ');\n            }\n        }\n        if (last) {\n            ans += string(maxWidth - ans.length(), ' ');\n        }\n        return ans;\n    }\n    \n    vector<string> fullJustify(vector<string>& words, int maxWidth) {\n        vector<string> ans;\n        int prev = 0;\n        int len = 0;\n        int n = words.size();\n        for (int i = 0; i < n; ++i) {\n            if (words[i].length() + len + (i - prev) > maxWidth) {\n                auto sub = vector<string>(words.begin() + prev, words.begin() + i);\n                ans.push_back(pack(sub, len, maxWidth, false));\n                len = 0;\n                prev = i;\n            }\n            len += words[i].length();\n            \n            if (i + 1 == n) {\n                auto sub = vector<string>(words.begin() + prev, words.begin() + i + 1);\n                ans.push_back(pack(sub, len, maxWidth, true));\n            }\n        }\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111","title_slug":"text-justification"}