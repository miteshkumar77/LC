{"id":491382671,"lang":"cpp","time":"11 months, 1 week","timestamp":1620667345,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/491382671/","is_pending":"Not Pending","title":"Form Largest Integer With Digits That Add up to Target","memory":"9.5 MB","code":"class Solution {\npublic:\n    string largestNumber(vector<int>& cost, int target) {\n        vector<int> len(target + 1, 0);\n        vector<int> d(target + 1, -1);\n        int ip;\n        d[0] = 0;\n        for (int i = 1; i <= target; ++i) {\n            for (int j = 9; j >= 1; --j) {\n                ip = i - cost[j-1];\n                if (ip >= 0 && d[ip] != -1 && len[ip]+1 > len[i]) {\n                    len[i] = len[ip]+1;\n                    d[i] = j;\n                }\n            }\n        }\n        if (d.back() == -1) return \"0\";\n        string ans;\n        int i = target;\n        while(i > 0) {\n            ans.push_back(d[i] + '0');\n            i -= cost[d[i]-1];\n        }\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"form-largest-integer-with-digits-that-add-up-to-target"}