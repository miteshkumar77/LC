{"id":434546363,"lang":"cpp","time":"1 year, 3 months","timestamp":1608940639,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/434546363/","is_pending":"Not Pending","title":"Number of Atoms","memory":"7.7 MB","code":"class Solution {\npublic:\n    string countOfAtoms(string formula) {\n        \n        function<pair<unordered_map<string,int>, int>(int)> bt = [&](int i) -> pair<unordered_map<string,int>, int> {\n            string element;\n            string count;\n            unordered_map<string,int> curr;\n            \n            for (int c = i; c < formula.length(); ++c) {\n                if (formula[c] == '(') {\n                    if (element != \"\") {\n                        count = count==\"\"?\"1\":count;\n                        curr[element] += stoi(count);\n                        count = \"\";\n                        element = \"\";\n                    }\n                    \n                    auto [nmap, nidx] = bt(c + 1);\n                    for (auto p : nmap) {\n                        curr[p.first] += p.second;\n                    }\n                    c = nidx;\n                } else if (formula[c] == ')') {\n                    if (element != \"\") {\n                        count = count==\"\"?\"1\":count;\n                        curr[element] += stoi(count);\n                        count = \"\";\n                        element = \"\";\n                    }\n                    \n                    ++c;\n                    while(c < formula.length() && formula[c] <= '9' && formula[c] >= '0') {\n                        count.push_back((char)(formula[c++]));\n                    }\n                    // cout << count << endl;\n                    count = count==\"\"?\"1\":count;\n                    int intcount = stoi(count);\n                    for (auto p : curr) {\n                        curr[p.first] *= intcount;\n                    }\n                    return make_pair(curr, c - 1);\n                    \n                } else if (formula[c] >= 'A' && formula[c] <= 'Z') {\n                    if (element != \"\") {\n                        count = count==\"\"?\"1\":count;\n                        curr[element] += stoi(count);\n                        count = \"\";\n                        element = \"\";\n                    }\n                    element += formula[c];\n                } else if (formula[c] >= 'a' && formula[c] <= 'z') {\n                    element += formula[c];\n                } else {\n                    count += formula[c];\n                }\n            }\n            \n            if (element != \"\") {\n                count = count==\"\"?\"1\":count;\n                curr[element] += stoi(count);\n                count = \"\";\n                element = \"\";\n            }\n            \n            return make_pair(curr, formula.length());\n            \n        };\n        \n        auto res = bt(0).first;\n        auto mp = map<string, int>(res.begin(), res.end());\n        string ans;\n        for (auto p : mp) {\n            ans += p.first;\n            if (p.second > 1) {\n                ans += to_string(p.second);\n            }\n        }\n        \n        return ans;\n        \n        \n    }\n};","compare_result":"1111111111111111111111111111111","title_slug":"number-of-atoms"}