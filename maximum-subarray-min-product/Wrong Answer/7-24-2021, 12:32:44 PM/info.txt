{"id":527617584,"lang":"cpp","time":"8 months, 4 weeks","timestamp":1627144364,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/527617584/","is_pending":"Not Pending","title":"Maximum Subarray Min-Product","memory":"N/A","code":"class Solution {\npublic:\n    int maxSumMinProduct(vector<int>& nums) {\n        typedef unsigned long long ll;\n        int n = nums.size();\n        ll ans = 0;\n        stack<array<ll, 2>> stk;\n        for (int i = 0; i <= n; ++i) {\n            array<ll, 2> val{i == n ? (ll)0 : (ll)nums[i], (ll)0};\n            while(!stk.empty() && stk.top()[0] >= val[0]) {\n                ans = max(ans, (stk.top()[1] + val[1]) * stk.top()[0]);\n                val[1] += stk.top()[1];\n                stk.pop();\n            }\n            if (i < n)\n                val[1] += nums[i];\n            stk.push(val);\n        }\n        return ans;\n    }\n};","compare_result":"111111111111111111111100011000001111000000","title_slug":"maximum-subarray-min-product"}