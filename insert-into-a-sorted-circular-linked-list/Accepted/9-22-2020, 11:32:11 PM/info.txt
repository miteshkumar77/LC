{"id":399486191,"lang":"cpp","time":"1 year, 6 months","timestamp":1600831931,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/399486191/","is_pending":"Not Pending","title":"Insert into a Sorted Circular Linked List","memory":"7.8 MB","code":"/*\n// Definition for a Node.\nclass Node {\npublic:\n    int val;\n    Node* next;\n\n    Node() {}\n\n    Node(int _val) {\n        val = _val;\n        next = NULL;\n    }\n\n    Node(int _val, Node* _next) {\n        val = _val;\n        next = _next;\n    }\n};\n*/\n\nclass Solution {\npublic:\n    \n    void ins(Node* head, int iv) {\n        Node* pr = head;\n        Node* h = head -> next;\n        while(h && !(h -> val >= iv && pr -> val <= iv)) {\n            pr = h;\n            h = h -> next;\n        }\n        pr -> next = new Node(iv, h); \n    }\n    \n    Node* insert(Node* head, int insertVal) {\n        if (!head) {\n            Node* ret = new Node(insertVal); \n            ret -> next = ret; \n            return ret; \n        }\n        \n        \n        Node* node = head -> next;\n        Node* prev = head; \n        while(node != head && node -> val >= prev -> val) {\n            prev = node;\n            node = node -> next; \n        }\n        prev -> next = nullptr; \n        ins(node, insertVal); \n        while(prev -> next) {\n            prev = prev -> next;\n        }\n        prev -> next = node;\n        return head; \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"insert-into-a-sorted-circular-linked-list"}