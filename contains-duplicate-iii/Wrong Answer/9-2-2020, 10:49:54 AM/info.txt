{"id":389980118,"lang":"cpp","time":"1 year, 7 months","timestamp":1599058194,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/389980118/","is_pending":"Not Pending","title":"Contains Duplicate III","memory":"N/A","code":"class Solution {\npublic:\n    bool containsNearbyAlmostDuplicate(vector<int>& nums, int k, int t) {\n        if (nums.size() == 0) {\n            return 0; \n        }\n        \n        if (k == 0) {\n            return false; \n        }\n        map<int, int> mp;\n        // mp[nums[0]] = 1; \n        for (int i = 0; i < nums.size(); ++i) {\n            auto ub = mp.lower_bound(nums[i]); \n            if (ub != mp.end()) {\n                if (abs(ub -> first - nums[i]) <= t) {\n                    return true; \n                }\n            }\n            if (ub != mp.begin()) {\n                ub = prev(ub); \n                if (abs(ub -> first - nums[i]) <= t) {\n                    return true; \n                }\n            }\n            \n            ++mp[nums[i]]; \n            if (i >= k) {\n                // cout << i << endl; \n                --mp[nums[i - k]]; \n                if (mp[nums[i - k]] == 0) {\n                    mp.erase(nums[i - k]); \n                }\n            }\n        }\n        return false; \n    }\n};","compare_result":"11111111111111111111111111111100000000000","title_slug":"contains-duplicate-iii"}