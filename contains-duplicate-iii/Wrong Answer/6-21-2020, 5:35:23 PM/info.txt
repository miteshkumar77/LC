{"id":356716427,"lang":"cpp","time":"1 year, 10 months","timestamp":1592775323,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/356716427/","is_pending":"Not Pending","title":"Contains Duplicate III","memory":"N/A","code":"class Solution {\npublic:\n    bool containsNearbyAlmostDuplicate(vector<int>& nums, int k, int t) {\n        unordered_map<int, set<int>::iterator> imap; \n        set<int> vset; \n        for (int i = 0; i < nums.size(); ++i) {\n            if (imap.find(i - k - 1) != imap.end()) {\n                vset.erase(imap[i - k - 1]); \n                imap.erase(i - k - 1); \n            }\n            auto lb = vset.lower_bound(nums[i]); \n            auto ub = vset.upper_bound(nums[i]); \n            auto cb = vset.find(nums[i]); \n            vector<set<int>::iterator> vec{lb, ub, cb}; \n            for (auto it : vec) {\n                if (it != vset.end() && abs(nums[i] - (*it)) <= t) {\n                    return true; \n                }\n            }\n            imap[i] = vset.insert(nums[i]).first; \n        }\n        return false; \n    }\n};","compare_result":"11111111111111111100101010110010000000000","title_slug":"contains-duplicate-iii"}