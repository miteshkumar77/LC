{"id":676596230,"lang":"cpp","time":"1 week, 3 days","timestamp":1649452991,"status_display":"Accepted","runtime":"80 ms","url":"/submissions/detail/676596230/","is_pending":"Not Pending","title":"Contains Duplicate III","memory":"18.6 MB","code":"class Solution {\npublic:\n    bool containsNearbyAlmostDuplicate(vector<int>& nums, int k, int t) {\n        map<int, int> ct;\n        int n = nums.size();\n        for (int i = 0; i < n; ++i) {\n            if (i > k) {\n                if (--ct[nums[i-k-1]] == 0) {\n                    ct.erase(nums[i-k-1]);\n                }\n            }\n            ++ct[nums[i]];\n            auto it = ct.find(nums[i]);\n            if (it->second > 1) {\n                return true;\n            }\n            if (it != prev(ct.end()) && ((long long)next(it)->first - (long long)nums[i]) <= (long long)t)\n                return true;\n            if (it != ct.begin() && ((long long)nums[i] - (long long)prev(it)->first) <= (long long)t) {\n                return true;\n            }\n        }\n        return false;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111","title_slug":"contains-duplicate-iii"}