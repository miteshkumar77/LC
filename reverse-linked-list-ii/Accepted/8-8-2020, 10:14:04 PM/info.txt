{"id":378153386,"lang":"cpp","time":"1 year, 8 months","timestamp":1596939244,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/378153386/","is_pending":"Not Pending","title":"Reverse Linked List II","memory":"7.5 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* reverseBetween(ListNode* head, int m, int n) {\n        ListNode* cur = head; \n        ListNode* pre = nullptr; \n        \n        for (int i = 1; i < m; ++i) {\n            pre = cur; \n            cur = cur -> next; \n        }\n        \n        ListNode* last = nullptr; \n        ListNode* new_head = nullptr; \n        for (int i = m; i <= n; ++i) {\n            ListNode* tmp = cur -> next; \n            if (!new_head) {\n                last = cur; \n            }\n            cur -> next = new_head; \n            new_head = cur; \n            cur = tmp; \n        }\n        \n        if (pre) {\n            pre -> next = new_head; \n        } else {\n            head = new_head; \n        }\n        last -> next = cur;\n        \n        return head; \n        \n    }\n};","compare_result":"11111111111111111111111111111111111111111111","title_slug":"reverse-linked-list-ii"}