{"id":444679219,"lang":"cpp","time":"1 year, 3 months","timestamp":1610996894,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/444679219/","is_pending":"Not Pending","title":"K-Concatenation Maximum Sum","memory":"N/A","code":"class Solution {\npublic:\n    int kConcatenationMaxSum(vector<int>& arr, int k) {\n        int total = accumulate(arr.begin(), arr.end(), 0);\n        \n        int gmin = 0;\n        int gmax = 0;\n        int lenmin = 1;\n        int lenmax = 1;\n        int lmin = arr[0];\n        int lmax = arr[0];\n        int llenmin = 1;\n        int llenmax = 1;\n        \n        for (int i = 1; i < arr.size(); ++i) {\n            if (lmin + arr[i] <= arr[i]) {\n                lmin += arr[i];\n                ++lenmin;\n            } else {\n                lmin = arr[i];\n                lenmin = 1;\n            }\n            \n            if (lmax + arr[i] >= arr[i]) {\n                lmax += arr[i];\n                ++lenmax;\n            } else {\n                lenmax = arr[i];\n                lenmax = 1;\n            }\n            \n            llenmax = max(lenmax, llenmax);\n            llenmin = min(llenmin, lenmin);\n            gmin = min(gmin, lmin);\n            gmax = max(gmax, lmax);\n        }\n        \n        if (lenmax == arr.size()) {\n            return max(total - gmin, k * gmax); \n        } else {\n            return max(total - gmin, gmax); \n        }\n    }\n};","compare_result":"11111101000000101000100010001000000100","title_slug":"k-concatenation-maximum-sum"}