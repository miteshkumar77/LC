{"id":382889274,"lang":"cpp","time":"1 year, 8 months","timestamp":1597786352,"status_display":"Accepted","runtime":"292 ms","url":"/submissions/detail/382889274/","is_pending":"Not Pending","title":"Random Pick with Blacklist","memory":"66.9 MB","code":"class Solution {\npublic:\n    Solution(int N, vector<int>& blacklist) {\n        n = N; \n        b.swap(blacklist); \n        sort(b.begin(), b.end()); \n    }\n    \n    int pick() {\n\n        int k = rand() % (n - b.size()); \n        \n        int L = 0; \n        int R = b.size() - 1; \n        while(L < R) {\n            int mid = (L + R + 1)/2; \n            if (b[mid] - mid > k) {\n                R = mid - 1; \n            } else {\n                L = mid; \n            }\n        }\n        \n        return L == R && b[L] - L <= k?k + L + 1 : k; \n        \n    }\n    \n    \n    int n; \n    vector<int> b; \n};\n\n/**\n * Your Solution object will be instantiated and called as such:\n * Solution* obj = new Solution(N, blacklist);\n * int param_1 = obj->pick();\n */","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111","title_slug":"random-pick-with-blacklist"}