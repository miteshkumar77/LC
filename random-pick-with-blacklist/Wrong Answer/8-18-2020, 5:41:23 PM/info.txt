{"id":382892434,"lang":"cpp","time":"1 year, 8 months","timestamp":1597786883,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/382892434/","is_pending":"Not Pending","title":"Random Pick with Blacklist","memory":"N/A","code":"class Solution {\npublic:\n    Solution(int N, vector<int>& blacklist) {\n        n = N; \n        b.swap(blacklist); \n        sort(b.begin(), b.end()); \n    }\n    \n    int pick() {\n\n        int k = rand() % (n - b.size()); \n        \n        \n        int L = 0; \n        int R = b.size() - 1; \n        int ans = -1; \n        while(L <= R) {\n            int mid = L + (R - L)/2; \n            if (b[mid] - mid > k) {\n                R = mid - 1; \n            } else {\n                ans = mid; \n                L = mid + 1; \n            }\n        }\n        if (ans == -1) {\n            return k; \n        } else {\n            return b[ans] + k - ans; \n        }\n        \n    }\n    \n    \n    int n; \n    vector<int> b; \n};\n\n/**\n * Your Solution object will be instantiated and called as such:\n * Solution* obj = new Solution(N, blacklist);\n * int param_1 = obj->pick();\n */","compare_result":"1111111110111111010100001111111010010000011101000000001111111110100","title_slug":"random-pick-with-blacklist"}