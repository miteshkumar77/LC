{"id":395416682,"lang":"cpp","time":"1 year, 7 months","timestamp":1600057244,"status_display":"Accepted","runtime":"1560 ms","url":"/submissions/detail/395416682/","is_pending":"Not Pending","title":"Min Cost to Connect All Points","memory":"42.6 MB","code":"class Solution {\npublic:\n    int minCostConnectPoints(vector<vector<int>>& points) {\n        int n = points.size(); \n        function<int(vector<int>&,vector<int>&)> dist = [&](vector<int>& p1, vector<int>& p2) -> int {\n            return abs(p1[0] - p2[0]) + abs(p1[1] - p2[1]);     \n        };\n        \n        vector<int> parent(n, -1); \n        function<int(int)> find = [&](int node) -> int {\n            // cout << \"find\" << endl; \n            if (parent[node] == -1) {\n                return node; \n            }\n            parent[node] = find(parent[node]); \n            return parent[node]; \n        };\n        \n        \n        function<bool(int,int)> onion = [&](int a, int b) -> int {\n            int pa = find(a); \n            int pb = find(b); \n            if (pa == pb) {\n                return false; \n            }\n            parent[pa] = pb; \n            return true; \n        };\n        \n        function<bool(array<int,2>&,array<int,2>&)> cmp = [&](array<int,2>& a, array<int,2>& b) -> bool {\n            return dist(points[a[0]], points[a[1]]) > dist(points[b[0]], points[b[1]]);     \n        };\n        \n        priority_queue<array<int,2>, vector<array<int, 2>>, decltype(cmp)> pq(cmp); \n        \n        // cout << \"d\" << endl; \n        for (int i = 1; i < n; ++i) {\n            for (int j = 0; j < i; ++j) {\n                pq.push(array<int,2>{i,j}); \n            }\n        }\n        \n        // cout << \"dd\" << endl; \n        int ans = 0; \n        int k = n - 1; \n        while(k > 0) {\n            array<int,2> top = pq.top(); pq.pop(); \n            if (onion(top[0], top[1])) {\n                ans += dist(points[top[0]], points[top[1]]); \n                --k; \n            }\n        }\n        \n        return ans; \n    }\n    \n    \n    \n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"min-cost-to-connect-all-points"}