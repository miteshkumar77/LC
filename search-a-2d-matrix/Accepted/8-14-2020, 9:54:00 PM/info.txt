{"id":381022762,"lang":"cpp","time":"1 year, 8 months","timestamp":1597456440,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/381022762/","is_pending":"Not Pending","title":"Search a 2D Matrix","memory":"11.3 MB","code":"class Solution {\npublic:\n    bool searchMatrix(vector<vector<int>>& matrix, int target) {\n        \n        if (matrix.size() == 0 || matrix[0].size() == 0) {\n            return false; \n        }    \n            \n        int L0 = 0;\n        int R0 = matrix.size() - 1; \n        \n        while(L0 <= R0) {\n            int mid = L0 + (R0 - L0)/2; \n            if (matrix[mid].front() <= target && matrix[mid].back() >= target) {\n                int L1 = 0; \n                int R1 = matrix[0].size() - 1; \n                \n                while(L1 <= R1) {\n                    int mid1 = L1 + (R1 - L1)/2; \n                    if (matrix[mid][mid1] > target) {\n                        R1 = mid1 - 1; \n                    } else if (matrix[mid][mid1] < target) {\n                        L1 = mid1 + 1; \n                    } else {\n                        return true; \n                    }\n                }\n                return false; \n                \n            } else if (matrix[mid].front() > target) {\n                R0 = mid - 1;\n            } else {\n                L0 = mid + 1; \n            }\n        }\n        return false; \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"search-a-2d-matrix"}