{"id":351829461,"lang":"python3","time":"1 year, 10 months","timestamp":1591810676,"status_display":"Accepted","runtime":"116 ms","url":"/submissions/detail/351829461/","is_pending":"Not Pending","title":"Search a 2D Matrix","memory":"15.9 MB","code":"class Solution:\n    def searchMatrix(self, matrix: List[List[int]], target: int) -> bool:\n        A=matrix\n        B=target\n        if not A:\n            return 0\n        m=len(A)\n        n=len(A[0])\n        q=[]\n        for i in range(m):\n            for j in reversed(range(n)):\n                q.append((i,j))\n                break\n            break\n        while q:\n            i,j=q.pop()\n            if B < A[i][j] and j > 0:\n                q.append((i,j-1))\n            if B > A[i][j] and i < m-1:\n                q.append((i+1,j))\n            if A[i][j] == B:\n                return True\n        return False","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"search-a-2d-matrix"}