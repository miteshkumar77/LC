{"id":437253772,"lang":"cpp","time":"1 year, 3 months","timestamp":1609536576,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/437253772/","is_pending":"Not Pending","title":"Shortest Bridge","memory":"N/A","code":"class Solution {\npublic:\n    int shortestBridge(vector<vector<int>>& A) {\n        int m = A.size();\n        int n = A[0].size();\n        array<int, 5> dirs{0, 1, 0, -1, 0};\n        \n        function<void(int,int)> dfs = [&](int i, int j) -> void {\n            if (i < 0 || j < 0 || i >= m || j >= n || A[i][j] != 1) return;\n            \n            A[i][j] = 2;\n            for (int x = 0; x < 4; ++x) {\n                dfs(i + dirs[x], j + dirs[x + 1]); \n            }\n        };\n        \n        for (int i = 0; i < m; ++i) {\n            bool brk = false;\n            for (int j = 0; j < n; ++j) {\n                if (A[i][j]) {\n                    brk = true;\n                    dfs(i,j);\n                    break;\n                }\n            }\n            if (brk) break;\n        }\n//         for (auto v : A) {\n//             for (auto j : v) {\n//                 cout << j << ' ';\n//             }\n//             cout << endl;\n//         }\n        \n        int shortest1 = INT_MAX - 100;\n        int shortest2 = INT_MAX - 100;\n        \n        vector<vector<int>> dp1(m, vector<int> (n, INT_MAX - 100));\n        for (int i = 0; i < m; ++i) {\n            for (int j = 0; j < n; ++j) {\n                if (A[i][j] == 2) {\n                    dp1[i][j] = 0;\n                    continue;\n                }\n                \n                if (i != 0) {\n                    dp1[i][j] = min(dp1[i - 1][j] + 1, dp1[i][j]); \n                }\n                if (j != 0) {\n                    dp1[i][j] = min(dp1[i][j - 1] + 1, dp1[i][j]);\n                }\n                \n                if (A[i][j] == 1) {\n                    shortest1 = min(shortest1, dp1[i][j] - 1);\n                }\n            }\n        }\n        \n        dp1 = vector<vector<int>>(m, vector<int>(n, INT_MAX - 100));\n        \n        for (int i = m - 1; i >= 0; --i) {\n            for (int j = n - 1; j >= 0; --j) {\n                if (A[i][j] == 2) {\n                    dp1[i][j] = 0;\n                    continue;\n                }\n                if (i != m - 1) {\n                    dp1[i][j] = min(dp1[i + 1][j] + 1, dp1[i][j]);\n                }\n                if (j != n - 1) {\n                    dp1[i][j] = min(dp1[i][j + 1] + 1, dp1[i][j]);\n                }\n                \n                if (A[i][j] == 1) {\n                    shortest2 = min(shortest2, dp1[i][j] - 1);\n                    \n                }\n            }\n        }\n        \n  \n        return min(shortest1, shortest2);\n        \n    }\n};","compare_result":"011111111111101111111111111111101111111111111111111111111111111111111111111110111111011111111111","title_slug":"shortest-bridge"}