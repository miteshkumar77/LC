{"id":402892793,"lang":"cpp","time":"1 year, 6 months","timestamp":1601513417,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/402892793/","is_pending":"Not Pending","title":"Maximum Performance of a Team","memory":"N/A","code":"class Solution {\npublic:\n    int maxPerformance(int n, vector<int>& speed, vector<int>& efficiency, int k) {\n        int M = 1e9 + 7;\n        vector<pair<int,int>> paired;\n        for (int i = 0; i < n; ++i) {\n            paired.push_back(make_pair(efficiency[i], speed[i]));\n        }\n        sort(paired.begin(), paired.end());\n        if (k == 1) {\n            return (paired.back().first * paired.back().second) % M;\n        }\n        vector<int> dp(n + 1, 0);\n        priority_queue<int, vector<int>, greater<int>> pq; \n        \n        int sum = 0; \n        for (int i = n - 1; i >= 0; --i) {\n            \n            if (pq.size() == k - 1) {\n                if (pq.top() < paired[i].second) {\n                    sum += paired[i].second - pq.top();\n                    pq.pop();\n                    pq.push(paired[i].second);\n                }                                \n            } else {\n                pq.push(paired[i].second);\n                sum += paired[i].second;\n            }\n            sum = sum % M;\n            dp[i] = sum;\n        }\n        \n        int ans = 0;\n        for (int i = 0; i < n; ++i) {\n            ans = max(ans, (paired[i].first * ((dp[i + 1] + paired[i].second) % M) % M));\n        }\n        \n        return ans;\n        \n        \n    }\n};","compare_result":"11111111111110111111011000000000000000000000000000000","title_slug":"maximum-performance-of-a-team"}