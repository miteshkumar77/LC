{"id":503396902,"lang":"cpp","time":"10 months, 2 weeks","timestamp":1622905006,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/503396902/","is_pending":"Not Pending","title":"Maximum Performance of a Team","memory":"N/A","code":"class Solution {\npublic:\n    typedef unsigned long long int ulli;\n    int maxPerformance(int n, vector<int>& speed, vector<int>& efficiency, int k) {\n        vector<array<ulli, 2>> p(n);\n        for (int i = 0; i < n; ++i) {\n            p[i] = {(ulli)speed[i], (ulli)efficiency[i]};\n        }\n        sort(p.begin(), p.end(), [](const array<ulli,2>& a, const array<ulli,2>& b) -> bool {\n            return a[1] > b[1];\n        });\n        \n        priority_queue<int, vector<int>, greater<int>> mx;\n        ulli sum = 0;\n        ulli ans = 0;\n\n        for (const auto& v : p) {\n            sum += v[0];\n            ans = max(ans, sum * v[1]);\n            mx.push(v[0]);\n            if (mx.size() == k) {\n                sum -= mx.top(); mx.pop();\n            }\n        }\n        return ans;\n        \n    }\n};","compare_result":"111111111111111111111110000000000000000000000000000010","title_slug":"maximum-performance-of-a-team"}