{"id":293741031,"lang":"cpp","time":"2 years, 3 months","timestamp":1578893087,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/293741031/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    bool isValidBST(TreeNode* root) {\n        if (!root) {\n            return true; \n        } else {\n            return validate_bst_helper(root, 0, 0, false, false);\n        }\n    }\n\n    \n    bool validate_bst_helper(TreeNode* root, int min_left, int max_right, \n                             bool yet_left, bool yet_right) {\n        bool r;\n        bool l;\n        if (root -> left) {\n            if (!yet_right) {\n                l = (root -> left -> val < root -> val) && \n                validate_bst_helper(root -> left, min_left, root -> val, true, yet_right);\n            } else {\n                l = (min_left < root -> left -> val < root -> val) &&\n                validate_bst_helper(root -> left, min_left, root -> val, yet_left, yet_right);\n            }\n        } else {\n            l = true;\n        }\n\n        if (root -> right) {\n            if (!yet_left) {\n                r = (root -> right -> val > root -> val) && \n                validate_bst_helper(root -> right, root -> val, max_right, yet_left, true);\n            } else {\n                r = (max_right > root -> right -> val > root -> val) &&\n                validate_bst_helper(root -> right, root -> val, max_right, yet_left, yet_right);\n            }\n        } else {\n            r = true;\n        }\n\n        return r && l;     \n    }\n};","compare_result":"111111111111001011111111111111111111111111111011101101110111111111111011110","title_slug":"validate-binary-search-tree"}