{"id":431360844,"lang":"cpp","time":"1Â year, 4Â months","timestamp":1608146188,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/431360844/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool isValidBST(TreeNode* root) {\n        TreeNode* curr = root;\n        TreeNode* temp = nullptr;\n        TreeNode* prev = nullptr;\n        \n        while(curr) {\n            if (!(curr -> left)) {\n                if (prev && prev -> val >= curr -> val) return false;\n                prev = curr;\n                curr = curr -> right;\n            } else {\n                temp = curr -> left;\n                while(temp -> right && temp -> right != curr) {\n                    temp = temp -> right;\n                }\n                if (temp -> right == curr) {\n                    temp -> right = nullptr;\n                    curr = curr -> right;\n                } else {\n                    temp -> right = curr;\n                    curr = curr -> left;\n                }\n            }\n        }\n        return true;\n    }\n};","compare_result":"10110111010000000000000000000000000000000000000000000000000000000000000000000","title_slug":"validate-binary-search-tree"}