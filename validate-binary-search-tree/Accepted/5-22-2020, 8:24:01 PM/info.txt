{"id":343280676,"lang":"cpp","time":"1 year, 11 months","timestamp":1590193441,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/343280676/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"21.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool isValidBST(TreeNode* root) {\n        stack<TreeNode*> stak; \n        TreeNode* prev = nullptr; \n        TreeNode* head = root; \n        \n        \n         while(root || !stak.empty()) {\n             if (root) {\n                 stak.push(root); \n                 root = root -> left; \n             } else {\n                 if (prev) {\n                     if (stak.top() -> val <= prev -> val) {\n                         return false; \n                     }\n                 }\n                 \n                 prev = stak.top(); \n                 root = stak.top() -> right; \n                 stak.pop(); \n             }\n         }\n        \n        return true; \n        \n        \n    }\n    \n    \n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"validate-binary-search-tree"}