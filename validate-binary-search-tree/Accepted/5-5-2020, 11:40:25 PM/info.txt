{"id":335083718,"lang":"cpp","time":"1 year, 11 months","timestamp":1588736425,"status_display":"Accepted","runtime":"24 ms","url":"/submissions/detail/335083718/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"21.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool isValidBST(TreeNode* root) {\n        return helperV(root, nullptr, nullptr); \n    }\n    \n    bool helperV(TreeNode* root, TreeNode* max, TreeNode* min) {\n        if (!root) {\n            return true; \n        }\n        \n        if (max && root -> val >= max -> val) {\n            return false; \n        }\n        \n        if (min && root -> val <= min -> val) {\n            return false; \n        }\n        \n        return helperV(root -> right, max, root) &&\n            helperV(root -> left, root, min); \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"validate-binary-search-tree"}