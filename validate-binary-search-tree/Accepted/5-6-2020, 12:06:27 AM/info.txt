{"id":335093867,"lang":"cpp","time":"1 year, 11 months","timestamp":1588737987,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/335093867/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"21.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool isValidBST(TreeNode* root) {\n        TreeNode* prev = nullptr; \n        return helper(root, prev); \n    }\n    \n    bool helper(TreeNode* curr, TreeNode*& prev) {\n        if (!curr) {\n            return true; \n        }\n        \n        if (!helper(curr -> left, prev)) {\n            return false; \n        }\n        \n        if (prev && curr -> val <= prev -> val) {\n            return false; \n        }\n        \n        prev = curr; \n        \n        return helper(curr -> right, prev); \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"validate-binary-search-tree"}