{"id":404401210,"lang":"cpp","time":"1 year, 6 months","timestamp":1601823032,"status_display":"Accepted","runtime":"56 ms","url":"/submissions/detail/404401210/","is_pending":"Not Pending","title":"Remove Covered Intervals","memory":"11.7 MB","code":"class Solution {\npublic:\n    int removeCoveredIntervals(vector<vector<int>>& intervals) {\n        sort(intervals.begin(), intervals.end(), [](vector<int>& a, vector<int>& b) -> bool {\n            return a[1] - a[0] < b[1] - b[0];  \n        });\n        \n//         int m_start = intervals[0][0];\n//         int m_end   = intervals[0][1];\n//         int ans = 1;\n//         for (int i = 1; i < intervals.size(); ++i) {\n//             if (m_start <= intervals[i][0] && m_end >= intervals[i][1]) {\n//                 continue;\n//             } else if (m_start >= intervals[i][0] && m_end <= intervals[i][1]) {\n//                 m_start = intervals[i][0];\n//                 m_end = intervals[i][1];\n//                 continue;\n//             }\n//             m_start = intervals[i][0];\n//             m_end = intervals[i][1];\n//             ++ans;\n//         }\n//         return ans;\n        \n        function<bool(vector<int>&,vector<int>&)> isCovered = [&](vector<int>& a, vector<int>& b) -> bool {\n            return a[0] >= b[0] && a[1] <= b[1];    \n        };\n        \n        int ans = intervals.size();\n        for (int i = 0; i < intervals.size(); ++i) {\n            for (int j = i + 1; j < intervals.size(); ++j) {\n                if (isCovered(intervals[i], intervals[j])) {\n                    --ans;\n                    break;\n                }\n            }\n        }\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111","title_slug":"remove-covered-intervals"}