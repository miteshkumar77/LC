{"id":327282903,"lang":"cpp","time":"1 year, 12 months","timestamp":1587322442,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/327282903/","is_pending":"Not Pending","title":"Minimum Path Sum","memory":"8.4 MB","code":"class Solution {\npublic:\n    int minPathSum(vector<vector<int>>& grid) {\n        for (int i = 0; i < grid.size(); ++i) {\n            for (int j = 0; j < grid[i].size(); ++j) {\n                int u = 0;\n                int l = 0;\n                if (i != 0) {\n                    u = grid[i - 1][j]; \n                } else {\n                    u = -1;\n                }\n                \n                if (j != 0) {\n                    l = grid[i][j - 1];     \n                } else {\n                    l = -1;\n                }\n                \n                if (u == -1 && l == -1) {\n                    continue;\n                } else if (u == -1) {\n                    grid[i][j] += l;\n                } else if (l == -1) {\n                    grid[i][j] += u;\n                } else {\n                    grid[i][j] += min(u, l); \n                }\n                // cout << grid[i][j] << ' ';\n            }\n            \n            // cout << endl;\n        }\n         \n        return grid.back().back(); \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-path-sum"}