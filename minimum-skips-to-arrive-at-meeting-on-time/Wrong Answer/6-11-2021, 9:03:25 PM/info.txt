{"id":506584248,"lang":"cpp","time":"10 months, 1 week","timestamp":1623459805,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/506584248/","is_pending":"Not Pending","title":"Minimum Skips to Arrive at Meeting On Time","memory":"N/A","code":"class Solution {\npublic:\n    bool check(vector<int>& dist, int speed, int limit, int skips) {\n        int n = dist.size();\n        vector<vector<double>> dp(n+1, vector<double>(skips + 1, 0.0));\n        for (int i = 1; i <= n; ++i) dp[i][0] = ceil(dp[i-1][0]) + (double)dist[i-1]/(double)speed;\n        for (int i = 1; i <= n; ++i) {\n            for (int j = 1; j <= skips; ++j) {\n                dp[i][j] = min(dp[i-1][j-1] + (double)dist[i-1]/(double)speed, ceil(dp[i-1][j] + (double)dist[i-1]/(double)speed));\n                if (i == n && dp[i][j] <= limit) return true;\n            }\n        }\n        return false;\n    }\n    \n    int minSkips(vector<int>& dist, int speed, int hoursBefore) {\n        int n = dist.size();\n        int l = 0;\n        int r = n;\n        int ans = -1;\n        int mid;\n        while(l <= r) {\n            mid = l + (r - l)/2;\n            if (check(dist, speed, hoursBefore, mid)) {\n                ans = mid;\n                r = mid-1;\n            } else {\n                l = mid+1;\n            }\n        }\n        return ans;\n    }\n};","compare_result":"111000110111011100001111011111011001000001100011101000000000","title_slug":"minimum-skips-to-arrive-at-meeting-on-time"}