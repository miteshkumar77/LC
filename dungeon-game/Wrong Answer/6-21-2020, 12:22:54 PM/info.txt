{"id":356612386,"lang":"cpp","time":"1 year, 10 months","timestamp":1592756574,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/356612386/","is_pending":"Not Pending","title":"Dungeon Game","memory":"N/A","code":"class Solution {\npublic:\n    \n    typedef array<int, 3> ti; // {row, col, cost}\n    array<int, 3> dirs {0, 1, 0}; \n    int calculateMinimumHP(vector<vector<int>>& d) {\n        \n        \n        int M = d.size(); int N = d[0].size(); \n        vector<vector<int> > min_sf (M, vector<int>(N, 0)); \n        vector<vector<int> > max_sf (M, vector<int>(N, 0)); \n        \n        for (int i = 0; i < M; ++i) {\n            for (int j = 0; j < N; ++j) {\n                \n                if (i == 0 && j == 0) {\n                    max_sf[i][j] = d[i][j]; \n                    min_sf[i][j] = d[i][j]; \n                } else {\n                    \n                    \n                    if (i == 0) {\n                        max_sf[i][j] = max_sf[i][j - 1] + d[i][j]; \n                        min_sf[i][j] = min(min_sf[i][j - 1], max_sf[i][j]); \n                    } else if (j == 0) {\n                        max_sf[i][j] = max_sf[i - 1][j] + d[i][j]; \n                        min_sf[i][j] = min(min_sf[i - 1][j], max_sf[i][j]);\n                    } else {\n                        if (min_sf[i][j - 1] < min_sf[i - 1][j]) {\n                            max_sf[i][j] = max_sf[i - 1][j] + d[i][j]; \n                            min_sf[i][j] = min(min_sf[i - 1][j], max_sf[i][j]); \n                        } else {\n                            max_sf[i][j] = max_sf[i][j - 1] + d[i][j]; \n                            min_sf[i][j] = max_sf[i][j - 1] + d[i][j]; \n                            min_sf[i][j] = min(min_sf[i][j - 1], max_sf[i][j]); \n                        }\n                    }\n                }\n            }\n        }\n        \n//         for (int i = 0; i < M; ++i) {\n//             for (int j = 0; j < N; ++j) {\n//                 cout << setw(3) << max_sf[i][j] << ' '; \n//             }cout << endl; \n//         }\n        \n//         cout << endl << endl; \n//         for (int i = 0; i < M; ++i) {\n//             for (int j = 0; j < N; ++j) {\n//                 cout << setw(3) << min_sf[i][j] << ' '; \n//             }cout << endl; \n//         }\n        \n        int ans = min_sf.back().back(); \n        if (ans < 0) { return abs(ans) + 1; }\n        else { return 1; }\n    }\n    \n    \n    \n//     bool checkH(vector<vector<int> >& d, int t) {\n//         int M = d.size(); \n//         int N = d[0].size(); \n//         if (d[0][0] + t <= 0) {\n//             return false; \n//         } \n//         vector<vector<bool> > dsq (M, vector<bool>(N, false));\n//         vector<vector<int> > dp (M, vector<int>(N, 0)); \n//         dp[0][0] = t;\n//         for (int i = 0; i < M; ++i) {\n//             for (int j = 0; j < N; ++j) {\n//                 // cout << i << ' ' << j << endl; \n//                 if ((i != 0 || j != 0) && (i == 0 || dsq[i - 1][j]) && (j == 0 || dsq[i][j - 1])) {\n//                     // cout << i << ' ' << j << endl; \n//                     dsq[i][j] = true; \n//                 } else {\n                    \n//                     vector<int> result; \n//                     if (i != 0 && !dsq[i - 1][j]) {\n//                         result.push_back(dp[i - 1][j]); \n//                     }\n                    \n//                     if (j != 0 && !dsq[i][j - 1]) {\n//                         result.push_back(dp[i][j - 1]); \n//                     }\n                    \n//                     if (result.size() == 0) {\n//                         result.push_back(0); \n//                     }\n//                     dp[i][j] += ((*max_element(result.begin(), result.end())) + d[i][j]); \n//                     if (dp[i][j] <= 0) {\n//                         dsq[i][j] = true; \n//                     }\n//                 } \n//             } \n//         }\n//         return !dsq.back().back(); \n//     }\n};","compare_result":"111111111111111111111100000111111000111100000","title_slug":"dungeon-game"}