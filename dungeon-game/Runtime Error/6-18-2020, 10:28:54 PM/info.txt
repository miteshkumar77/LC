{"id":355574478,"lang":"cpp","time":"1 year, 10 months","timestamp":1592533734,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/355574478/","is_pending":"Not Pending","title":"Dungeon Game","memory":"N/A","code":"class Solution {\npublic:\n    \n    typedef array<int, 3> ti; // {row, col, cost}\n    array<int, 3> dirs {0, 1, 0}; \n    int calculateMinimumHP(vector<vector<int>>& dungeon) {\n        int L = 1; \n        int R = 0; \n        int sum = 0; \n        for (int i = 0; i < dungeon.size(); ++i) {\n            sum += dungeon[0][i];\n            R = min(sum, R); \n        }\n        \n        for (int i = 1; i < dungeon[0].size(); ++i) {\n            sum += dungeon[i].back(); \n            R = min(sum, R); \n        }\n        \n        R = 1 + abs(R); \n        \n        cout << R << endl; \n        int ans = R; \n        while(L <= R) {\n            int mid = L + (R - L)/2; \n            if (checkH(dungeon, mid)) {\n                ans = mid; \n                L = mid + 1; \n            } else {\n                R = mid - 1; \n            }\n        }\n        return ans; \n    }\n    \n    \n    \n    bool checkH(vector<vector<int> >& d, int t) {\n        int M = d.size(); \n        int N = d[0].size(); \n        if (d[0][0] + t <= 0) {\n            return false; \n        } \n        vector<vector<bool> > dsq (M, vector<bool>(N, false));\n        vector<vector<int> > dp (M, vector<int>(N, 0)); \n        dp[0][0] = t;\n        for (int i = 0; i < M; ++i) {\n            for (int j = 0; j < N; ++j) {\n                // cout << i << ' ' << j << endl; \n                if ((i != 0 || j != 0) && (i == 0 || dsq[i - 1][j]) && (j == 0 || dsq[i][j - 1])) {\n                    // cout << i << ' ' << j << endl; \n                    dsq[i][j] = true; \n                } else {\n                    \n                    vector<int> result; \n                    if (i != 0 && !dsq[i - 1][j]) {\n                        result.push_back(dp[i - 1][j]); \n                    }\n                    \n                    if (j != 0 && !dsq[i][j - 1]) {\n                        result.push_back(dp[i][j - 1]); \n                    }\n                    \n                    if (result.size() == 0) {\n                        result.push_back(0); \n                    }\n                    dp[i][j] += ((*max_element(result.begin(), result.end())) + d[i][j]); \n                    if (dp[i][j] <= 0) {\n                        dsq[i][j] = true; \n                    }\n                } \n            } \n        }\n        return !dsq.back().back(); \n    }\n};","compare_result":"111100000000000000000000000000000000000000000","title_slug":"dungeon-game"}