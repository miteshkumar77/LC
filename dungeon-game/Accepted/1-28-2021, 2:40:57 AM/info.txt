{"id":448866677,"lang":"cpp","time":"1 year, 2 months","timestamp":1611819657,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/448866677/","is_pending":"Not Pending","title":"Dungeon Game","memory":"9 MB","code":"class Solution {\npublic:\n    int calculateMinimumHP(vector<vector<int>>& dungeon) {\n        int m = dungeon.size();\n        int n = dungeon[0].size();\n        vector<vector<int>> dp(m, vector<int>(n, 0));\n        for (int i = m - 1; i >= 0; --i) {\n            for (int j = n - 1; j >= 0; --j) {\n                \n                int prevstate;\n                if (j == n - 1 && i == m - 1) {\n                    dp[i][j] = dungeon[i][j] <= 0 ?-1 * dungeon[i][j] + 1:-1 * dungeon[i][j]; \n                    continue;\n                }\n                \n                if (j == n - 1) {\n                    prevstate = dp[i + 1][j];\n                } else if (i == m - 1) {\n                    prevstate = dp[i][j + 1];\n                } else {\n                    prevstate = min(dp[i + 1][j], dp[i][j + 1]);\n                }\n                if (dungeon[i][j] < 0) {\n                    dp[i][j] = -1 * dungeon[i][j] + max(1, prevstate); \n                } else {\n                    dp[i][j] = prevstate - dungeon[i][j];\n                }\n            }\n        }\n        // for (auto v : dp) {\n        //     for (int i : v) cout << i << ' ';\n        //     cout << endl;\n        // }\n        return max(1, dp[0][0]);\n    }\n};","compare_result":"111111111111111111111111111111111111111111111","title_slug":"dungeon-game"}