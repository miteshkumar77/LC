{"id":375135931,"lang":"cpp","time":"1 year, 8 months","timestamp":1596406992,"status_display":"Accepted","runtime":"568 ms","url":"/submissions/detail/375135931/","is_pending":"Not Pending","title":"Maximum Number of Non-Overlapping Substrings","memory":"20.4 MB","code":"class Solution {\npublic:\n    vector<string> maxNumOfSubstrings(string s) {\n        array<int, 26> focc{-1};\n        array<int, 26> locc{-1};\n        for (int i = 0; i < 26; ++i) {\n            focc[i] = -1;\n            locc[i] = -1; \n        }\n        \n        for (int i = 0; i < s.length(); ++i) {\n            char c = s[i]; \n            if (focc[c - 'a'] == -1) {\n                focc[c - 'a'] = i;\n            }\n            \n            locc[c - 'a'] = i; \n        }\n        \n        vector<vector<int> > intervals; \n        \n        for (int i = 0; i < 26; ++i) {\n            if (focc[i] != -1 && locc[i] != -1) {\n                intervals.push_back(vector<int>{focc[i], locc[i]});\n            }\n        }\n        \n        for (int i = 0; i < intervals.size(); ++i) {\n            \n            int mini = intervals[i][0]; \n            int maxi = intervals[i][1];\n            for (int j = intervals[i][0]; j <= intervals[i][1]; ++j) {\n                char c = s[j];\n                mini = min(mini, focc[c - 'a']);\n                maxi = max(maxi, locc[c - 'a']);\n            }\n            \n            while(mini != intervals[i][0] || maxi != intervals[i][1]) {\n                intervals[i][0] = mini;\n                intervals[i][1] = maxi; \n                for (int j = intervals[i][0]; j <= intervals[i][1]; ++j) {\n                    char c = s[j];\n                    mini = min(mini, focc[c - 'a']);\n                    maxi = max(maxi, locc[c - 'a']);\n                }\n            }\n        }\n        \n        \n        sort(intervals.begin(), intervals.end(), [] (vector<int>& a, vector<int>& b) -> bool {\n            return a[0] < b[0]; \n        });\n        vector<vector<int> > ansi; \n        ansi.push_back(intervals[0]);\n        for (int i = 1; i < intervals.size(); ++i) {\n            vector<int> v = intervals[i]; \n            if (ansi.back()[1] < v[0]) {\n                ansi.push_back(v);\n            } else {\n                if (ansi.back()[1] > v[1]) {\n                    ansi.back() = v; \n                }\n            }\n        }\n        \n        \n        vector<string> ans; \n        for (vector<int> v : ansi) {\n            ans.push_back(s.substr(v[0], v[1] - v[0] + 1)); \n        }\n        return ans; \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-number-of-non-overlapping-substrings"}