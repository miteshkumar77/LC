{"id":289534505,"lang":"cpp","time":"2 years, 3 months","timestamp":1577646642,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/289534505/","is_pending":"Not Pending","title":"Maximum Depth of Binary Tree","memory":"21.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    int maxDepth(TreeNode* root) {\n        if (!root) {\n            return 0;\n        }\n        std::vector<TreeNode*> level;\n        level.push_back(root);\n        return helper(level, 0);\n    }\n    \n    int helper(std::vector<TreeNode*> level, int i) {\n        if (level.size() == 0) {\n            return i;\n        }\n        \n        std::vector<TreeNode*> n;\n        for (int j = 0; j < level.size(); j++) {\n            if (level[j] -> left) {\n                n.push_back(level[j] -> left);\n            }\n            \n            if (level[j] -> right) {\n                n.push_back(level[j] -> right);\n            }\n        }\n        \n        return helper(n, i + 1);\n    }\n};","compare_result":"111111111111111111111111111111111111111","title_slug":"maximum-depth-of-binary-tree"}