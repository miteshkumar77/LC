{"id":442581493,"lang":"cpp","time":"1 year, 3 months","timestamp":1610568468,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/442581493/","is_pending":"Not Pending","title":"Maximum Height by Stacking Cuboids ","memory":"N/A","code":"class Solution {\npublic:\n    int maxHeight(vector<vector<int>>& cuboids) {\n        int n = cuboids.size();\n        for (auto& v : cuboids) {\n            sort(v.begin(), v.end());\n        }\n        \n        sort(cuboids.begin(), cuboids.end(), [](const vector<int>& a, const vector<int>& b) -> bool {\n            for (int i = 2; i >= 0; --i) {\n                if (a[i] > b[i]) {\n                    return true;\n                } else if (a[0] < b[0]) {\n                    return false;\n                }\n            }\n            return true;\n        }); \n        \n        // for (auto v : cuboids) {\n        //     cout << \"[\" << v[0] << \",\" << v[1] << \",\" << v[2] << \"]\" << \",\";    \n        // }cout << endl;\n        vector<vector<int>> p{\n            {0, 1, 2},\n            {1, 0, 2},\n            {1, 2, 0},\n            {2, 1, 0},\n            {2, 0, 1},\n            {0, 2, 1}\n        };\n        int ans = 0;\n        vector<array<int, 6>> dp(n, {0,0,0,0,0,0});\n        for (int i = 0; i < n; ++i) {\n            for (int ri = 0; ri < 6; ++ri) {\n                dp[i][ri] = cuboids[i][p[ri][0]];\n                ans = max(ans, dp[i][ri]);\n            }\n        }\n        for (int i = 1; i < n; ++i) {\n            auto ci = cuboids[i];\n            for (int j = 0; j < i; ++j) {\n                auto cj = cuboids[j];\n                for (int ri = 0; ri < 6; ++ri) {\n                    for (int rj = 0; rj < 6; ++rj) {\n                        bool ok = true;\n                        for (int f = 0; f < 3; ++f) {\n                            if (ci[p[ri][f]] > cj[p[rj][f]]) {\n                                ok = false;\n                                break;\n                            }\n                        }\n                        if (ok) {\n                            dp[i][ri] = max(dp[i][ri], dp[j][rj] + ci[p[ri][0]]); \n                            ans = max(ans, dp[i][ri]);\n                        }\n                    }\n                }\n            }\n        }\n        return ans;\n    }\n};","compare_result":"11111111111111101110100000000000000000000000000000000000000000000000000000000000000","title_slug":"maximum-height-by-stacking-cuboids"}