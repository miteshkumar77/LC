{"id":354007185,"lang":"cpp","time":"1 year, 10 months","timestamp":1592229478,"status_display":"Accepted","runtime":"60 ms","url":"/submissions/detail/354007185/","is_pending":"Not Pending","title":"Search in a Binary Search Tree","memory":"34.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* searchBST(TreeNode* root, int val) {\n        while(root) {\n            if (root -> val < val) {\n                root = root -> right; \n            } else if (root -> val > val) {\n                root = root -> left; \n            } else {\n                return root; \n            }\n        }\n        return root; \n    }\n};","compare_result":"111111111111111111111111111111111111","title_slug":"search-in-a-binary-search-tree"}