{"id":524203407,"lang":"cpp","time":"9Â months","timestamp":1626577195,"status_display":"Accepted","runtime":"349 ms","url":"/submissions/detail/524203407/","is_pending":"Not Pending","title":"Maximum Number of Points with Cost","memory":"101.9 MB","code":"class Solution {\npublic:\n    long long maxPoints(vector<vector<int>>& points) {\n        int n = points.size(); int m = points[0].size();\n        vector<vector<long long>> dp(n, vector<long long>(m, 0));\n        dp[0] = vector<long long>(points[0].begin(), points[0].end());\n        for (int i = 1; i < n; ++i) {\n            long long mx = INT_MIN+1; \n            for (int j = 0; j < m; ++j) {\n                mx = max(mx-1, dp[i-1][j]);\n                dp[i][j] = mx + (long long)points[i][j];\n            }\n            mx = INT_MIN+1; \n            for (int j = m-1; j >= 0; --j) {\n                mx = max(mx-1, dp[i-1][j]);\n                // if (i == n-1) cout << mx << ' ' << points[i][j] << endl;\n                dp[i][j] = max(mx + (long long)points[i][j], dp[i][j]);\n            }\n        }\n        return *max_element(dp[n-1].begin(), dp[n-1].end());\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-number-of-points-with-cost"}