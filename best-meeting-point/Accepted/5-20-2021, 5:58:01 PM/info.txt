{"id":495966819,"lang":"cpp","time":"11Â months","timestamp":1621547881,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/495966819/","is_pending":"Not Pending","title":"Best Meeting Point","memory":"8.7 MB","code":"class Solution {\npublic:\n    int dist(array<int, 2> a, array<int, 2> b) {\n        return abs(a[0] - b[0]) + abs(a[1] - b[1]);\n    }\n    int minTotalDistance(vector<vector<int>>& grid) {\n        int n = grid.size();\n        int m = grid[0].size();\n        \n        vector<int> vdp(n + 1, 0);\n        vector<int> hdp(m + 1, 0);\n        for (int i = 0; i < n; ++i) {\n            vdp[i+1] = vdp[i] + accumulate(grid[i].begin(), grid[i].end(), 0);\n        }\n        for (int i = 0; i < m; ++i) {\n            hdp[i+1] = hdp[i];\n            for (int j = 0; j < n; ++j) hdp[i+1] += grid[j][i];\n        }\n        \n        int lans = 0;\n        int ans = INT_MAX;\n        for (int i = 0; i < n; ++i) {\n            for (int j = 0; j < m; ++j) {\n               if (grid[i][j]) \n                    lans += dist({0, 0}, {i, j});\n            }\n        }\n        //cout << lans << endl;\n        for (int i = 0; i < n; ++i) {\n            if (i == 0) grid[i][0] = lans;\n            else grid[i][0] = grid[i-1][0] + vdp[i] - (vdp.back() - vdp[i]);\n            ans = min(ans, grid[i][0]);\n            for (int j = 1; j < m; ++j) {\n                grid[i][j] = grid[i][j-1] + hdp[j] - (hdp.back() - hdp[j]);\n                ans = min(ans, grid[i][j]);\n            }\n        }\n        //for (const auto& v : grid){\n        //    for (int i : v) cout << i << ' ';\n        //    cout << endl;\n        //}\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111","title_slug":"best-meeting-point"}