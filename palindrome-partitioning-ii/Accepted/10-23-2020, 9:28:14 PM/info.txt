{"id":412432058,"lang":"cpp","time":"1 year, 5 months","timestamp":1603502894,"status_display":"Accepted","runtime":"320 ms","url":"/submissions/detail/412432058/","is_pending":"Not Pending","title":"Palindrome Partitioning II","memory":"22 MB","code":"class Solution {\npublic:\n    int minCut(string s) {\n        int n = s.length();\n        vector<vector<int>> dp(n + 1, vector<int>(n + 1, 0));\n        function<bool(int,int)> ispal = [&](int i, int j) -> bool {\n            if (dp[i][j] != 0) {\n                cout << \"ye\" << endl;\n                return dp[i][j] == 1;\n            }\n            if (i >= j) return true;\n            bool ans = s[i] == s[j] && ispal(i + 1, j - 1);\n            if (ans) {\n                dp[i][j] = 1;\n            } else {\n                dp[i][j] = -1;\n            }\n            return ans;\n        };\n        \n        \n        vector<bool> visited(n + 1, false);\n        \n        s = '#' + s;\n        queue<pair<int,int>> bfsq;\n        bfsq.push(make_pair(0, 0));\n        \n        while(!bfsq.empty()) {\n            auto p = bfsq.front(); bfsq.pop();\n            int i = p.first;\n            int cuts = p.second;\n            \n            if (visited[i]) continue;\n            \n            if (i == n) return cuts - 1;\n            \n            visited[i] = true;\n            for (int j = n; j > i; --j) {\n                if (ispal(i + 1, j)) {\n                    bfsq.push(make_pair(j, cuts + 1));\n                }\n            }\n        }\n        \n        return -1;\n\n    }\n};","compare_result":"11111111111111111111111111111","title_slug":"palindrome-partitioning-ii"}