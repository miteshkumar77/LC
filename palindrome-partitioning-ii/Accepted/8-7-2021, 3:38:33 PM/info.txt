{"id":534859122,"lang":"cpp","time":"8 months, 2 weeks","timestamp":1628365113,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/534859122/","is_pending":"Not Pending","title":"Palindrome Partitioning II","memory":"6.3 MB","code":"class Solution {\npublic:\n   \n    int minCut(string s) {\n        int n = s.length();\n        vector<int> dp(n+1, -1);\n        dp[0] = 0;\n        for (int i = 1; i <= n; ++i) {\n            int l = i-1;\n            int r = i-1;\n            while(l >= 0 && r < n && s[l] == s[r]) {\n                if (dp[l] != -1) {\n                    dp[r+1] = (dp[r+1] == -1 ? dp[l]+1 : min(dp[r+1], dp[l]+1));\n                }\n                --l; ++r;\n            }\n            l = i-1;\n            r = i;\n            while(l >= 0 && r < n && s[l] == s[r]) {\n                if (dp[l] != -1) {\n                    dp[r+1] = (dp[r+1] == -1 ? dp[l]+1 : min(dp[r+1], dp[l]+1));\n                }\n                --l; ++r;\n            }\n        }\n        for (int i : dp) cout << i << ' ';\n        return dp[n]-1;\n    }\n};","compare_result":"111111111111111111111111111111111","title_slug":"palindrome-partitioning-ii"}