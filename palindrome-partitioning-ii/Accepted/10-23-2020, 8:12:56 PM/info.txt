{"id":412416590,"lang":"cpp","time":"1 year, 5 months","timestamp":1603498376,"status_display":"Accepted","runtime":"736 ms","url":"/submissions/detail/412416590/","is_pending":"Not Pending","title":"Palindrome Partitioning II","memory":"6.8 MB","code":"class Solution {\npublic:\n    int minCut(string s) {\n        function<bool(int,int)> isPal = [&](int i, int j) -> bool {\n            while(i < j) {\n                if (s[i++] != s[j--]) {\n                    return false;\n                }\n            }    \n            \n            return true;\n        };\n        int n = s.length();\n        vector<int> dp(n + 1, INT_MAX);\n        dp[0] = 0;\n        s = '#' + s;\n        for (int i = 0; i <= n; ++i) {\n            if (dp[i] != INT_MAX) {\n                for (int j = i + 1; j <= n; ++j) {\n                    if (isPal(i + 1, j)) {\n                        dp[j] = min(dp[j], dp[i] + 1);\n                    }\n                }\n            }\n        }\n        \n        cout << string(2000, 'a') << endl;\n        \n        return dp.back() - 1;\n        \n        \n    }\n};","compare_result":"11111111111111111111111111111","title_slug":"palindrome-partitioning-ii"}