{"id":390621019,"lang":"cpp","time":"1 year, 7 months","timestamp":1599164901,"status_display":"Accepted","runtime":"296 ms","url":"/submissions/detail/390621019/","is_pending":"Not Pending","title":"Number of Operations to Make Network Connected","memory":"59.7 MB","code":"class Solution {\npublic:\n    int makeConnected(int n, vector<vector<int>>& connections) {\n        if (n - 1 > connections.size()) {\n            return -1; \n        }\n        \n        vector<vector<int>> graph(n); \n        for (auto edge : connections) {\n            graph[edge[0]].push_back(edge[1]); \n            graph[edge[1]].push_back(edge[0]); \n        }\n        \n        int components = 0; \n        vector<bool> visited(n, false);\n        function<void(int)> dfs = [&](int node) -> void {\n            if (visited[node]) {\n                return; \n            }\n            \n            visited[node] = true; \n            for (int neighbor : graph[node]) {\n                dfs(neighbor); \n            }\n        };\n        \n        for (int i = 0; i < n; ++i) {\n            if (!visited[i]) {\n                ++components; \n                dfs(i); \n            }\n        }\n        return components - 1; \n    }\n};","compare_result":"111111111111111111111111111111111111","title_slug":"number-of-operations-to-make-network-connected"}