{"id":397223345,"lang":"cpp","time":"1 year, 7 months","timestamp":1600385218,"status_display":"Accepted","runtime":"68 ms","url":"/submissions/detail/397223345/","is_pending":"Not Pending","title":"Minimum Falling Path Sum II","memory":"13.1 MB","code":"class Solution {\npublic:\n    int minFallingPathSum(vector<vector<int>>& arr) {\n        \n        function<pair<int,int>(int)> get2MinIdxs = [&](int n) -> pair<int,int> {\n            int min1 = INT_MAX; \n            int i1 = -1; \n            int min2 = INT_MAX; \n            int i2 = -1; \n            for (int i = 0; i < arr[n].size(); ++i) {\n                if (arr[n][i] < min1) {\n                    swap(min1, min2); \n                    swap(i1, i2); \n                    i1 = i; \n                    min1 = arr[n][i]; \n                } else if (arr[n][i] < min2) {\n                    min2 = arr[n][i]; \n                    i2 = i; \n                }\n            }\n            return make_pair(i1, i2); \n        };\n            \n        for (int h = 1; h < arr.size(); ++h) {\n            auto p = get2MinIdxs(h - 1); \n            for (int i = 0; i < arr[h].size(); ++i) {\n                if (i == p.first) {\n                    arr[h][i] += arr[h - 1][p.second]; \n                } else {\n                    arr[h][i] += arr[h - 1][p.first]; \n                }\n            }\n        }\n        \n        return arr.back()[get2MinIdxs(arr.size() - 1).first]; \n    }\n};","compare_result":"1111111111111","title_slug":"minimum-falling-path-sum-ii"}