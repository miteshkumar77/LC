{"id":440533854,"lang":"cpp","time":"1 year, 3 months","timestamp":1610165830,"status_display":"Accepted","runtime":"64 ms","url":"/submissions/detail/440533854/","is_pending":"Not Pending","title":"Find K Pairs with Smallest Sums","memory":"10.4 MB","code":"class Solution {\npublic:\n    int summ(const vector<int>& a) {\n        return a[0] + a[1];\n    }\n    vector<vector<int>> kSmallestPairs(vector<int>& nums1, vector<int>& nums2, int k) {\n        function<bool(const vector<int>&,const vector<int>&)> cmp = [&](const vector<int>& a, const vector<int>& b) -> bool {\n            return summ(a) < summ(b); \n        };\n        nums1.push_back(INT_MAX);\n        vector<vector<int>> ans;\n        priority_queue<vector<int>, vector<vector<int>>, decltype(cmp)> maxq(cmp);\n        for (int i : nums1) {\n            if (i == INT_MAX || (maxq.size() == k && summ(maxq.top()) <= i + nums2[0])) {\n                while(!maxq.empty()) {\n                    ans.push_back(maxq.top()); maxq.pop();\n                }\n                return ans;\n            }\n            \n            for (int j = 0; j < nums2.size() && (maxq.size() < k || nums2[j] + i < summ(maxq.top())); ++j) {\n                maxq.push({i, nums2[j]});\n                if (maxq.size() > k) {\n                    maxq.pop();\n                }\n            }\n        }\n        \n        return ans;\n        \n    }\n};","compare_result":"111111111111111111111111111","title_slug":"find-k-pairs-with-smallest-sums"}