{"id":489888623,"lang":"cpp","time":"11 months, 2 weeks","timestamp":1620361676,"status_display":"Accepted","runtime":"24 ms","url":"/submissions/detail/489888623/","is_pending":"Not Pending","title":"Convert Sorted List to Binary Search Tree","memory":"32 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\n/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* f(int l, int r, const vector<ListNode*>& lns) {\n        if (l > r) return nullptr;\n        int mid = l + (r - l)/2;\n        TreeNode* t = new TreeNode(lns[mid] -> val);\n        t -> left = f(l, mid - 1, lns);\n        t -> right = f(mid + 1, r, lns);\n        return t;\n    }\n    TreeNode* sortedListToBST(ListNode* head) {\n        vector<ListNode*> lns; lns.reserve(10000);\n        while(head) {\n            lns.push_back(head);\n            head = head->next;\n        }\n        int n = lns.size();\n        return f(0, n - 1, lns);\n    }\n};","compare_result":"11111111111111111111111111111111","title_slug":"convert-sorted-list-to-binary-search-tree"}