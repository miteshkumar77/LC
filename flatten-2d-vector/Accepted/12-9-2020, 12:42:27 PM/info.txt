{"id":428944083,"lang":"cpp","time":"1 year, 4 months","timestamp":1607535747,"status_display":"Accepted","runtime":"60 ms","url":"/submissions/detail/428944083/","is_pending":"Not Pending","title":"Flatten 2D Vector","memory":"23.8 MB","code":"class Vector2D {\npublic:\n    Vector2D(vector<vector<int>>& v) {\n        outer_it = v.begin(); \n        inner_it = outer_it != v.end() ? outer_it->begin():inner_it; \n        end_it = v.end();\n        push(); \n    }\n    \n    \n    \n    int next() {\n        int ret = *inner_it;\n        ++inner_it;\n        push();\n        return ret;\n    }\n    \n    bool hasNext() {\n        return outer_it != end_it;\n    }\nprivate:\n    \n    void push() {\n        while(outer_it != end_it && inner_it == outer_it->end()) {\n            ++outer_it;\n            if (outer_it != end_it) {\n                inner_it = outer_it->begin();\n            }\n        }\n    }\n    vector<vector<int>>::const_iterator end_it;\n    vector<vector<int>>::const_iterator outer_it;\n    vector<int>::const_iterator inner_it;\n};\n\n/**\n * Your Vector2D object will be instantiated and called as such:\n * Vector2D* obj = new Vector2D(v);\n * int param_1 = obj->next();\n * bool param_2 = obj->hasNext();\n */","compare_result":"111111111111111111","title_slug":"flatten-2d-vector"}