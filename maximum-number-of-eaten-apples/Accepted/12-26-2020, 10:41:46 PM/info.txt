{"id":435002310,"lang":"cpp","time":"1 year, 3 months","timestamp":1609040506,"status_display":"Accepted","runtime":"284 ms","url":"/submissions/detail/435002310/","is_pending":"Not Pending","title":"Maximum Number of Eaten Apples","memory":"55.1 MB","code":"class Solution {\npublic:\n    int eatenApples(vector<int>& apples, vector<int>& days) {\n      \n        int n = apples.size();\n        \n        map<int, int> ct;\n        int latest = n;\n        int ans = 0;\n        for (int d = 0; d < latest; ++d) {\n            if (d < n && apples[d] != 0) {\n                ct[days[d] + d] += apples[d];\n                latest = max(days[d] + d, latest);\n            }\n            \n            while(ct.size() != 0 && ct.begin() -> first <= d) {\n                ct.erase(ct.begin());\n            }\n            \n            if (ct.size() != 0) {\n                ++ans;\n                --ct[ct.begin() -> first];\n                if (ct.begin() -> second == 0) {\n                    ct.erase(ct.begin());\n                }\n            }\n        }\n        \n        \n        \n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-number-of-eaten-apples"}