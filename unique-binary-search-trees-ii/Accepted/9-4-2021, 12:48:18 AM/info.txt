{"id":549176698,"lang":"cpp","time":"7 months, 2 weeks","timestamp":1630730898,"status_display":"Accepted","runtime":"15 ms","url":"/submissions/detail/549176698/","is_pending":"Not Pending","title":"Unique Binary Search Trees II","memory":"13.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    TreeNode* copy_inorder(int& i, TreeNode* r) {\n        if (!r) return nullptr;    \n        TreeNode* ret = new TreeNode(0);\n        ret->left = copy_inorder(i, r->left);\n        ret->val = i++;\n        ret->right = copy_inorder(i, r->right);\n        return ret;\n    }\n    \n    vector<TreeNode*> generateTrees(int n) {\n        vector<vector<TreeNode*>> dp(n+1);\n        dp[0].push_back(nullptr);\n        for (int i = 1; i <= n; ++i) {\n            for (int j = 0; j < i; ++j) {\n                int l = j;\n                int r = i - 1 - j;\n                for (auto nl : dp[l]) {\n                    for (auto nr : dp[r]) {\n                        TreeNode* tn = new TreeNode(0);\n                        tn->left = nl;\n                        tn->right = nr;\n                        dp[i].push_back(tn);\n                    }\n                }\n            }\n        }\n        \n        vector<TreeNode*> ans; ans.reserve(dp[n].size());\n        for (auto r : dp[n]) {\n            int idx = 1;\n            ans.push_back(copy_inorder(idx, r));\n        }\n        return ans;\n    }\n};","compare_result":"11111111","title_slug":"unique-binary-search-trees-ii"}