{"id":423481402,"lang":"golang","time":"1 year, 4 months","timestamp":1606183413,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/423481402/","is_pending":"Not Pending","title":"House Robber III","memory":"5.2 MB","code":"/**\n * Definition for a binary tree node.\n * type TreeNode struct {\n *     Val int\n *     Left *TreeNode\n *     Right *TreeNode\n * }\n */\n\nfunc Max(x, y int) int {\n    if x < y {\n        return y\n    }\n    return x\n}\n\nfunc rob(root *TreeNode) int {\n    var v func(r *TreeNode) (int,int)\n    \n    v = func(r *TreeNode) (int,int) {\n        if r == nil {\n            return 0, 0\n        } else {\n            rli, rle := v(r.Left)\n            rri, rre := v(r.Right)\n            include := r.Val + rle + rre\n            exclude := Max(rle, rli) + Max(rri, rre)\n            return include, exclude\n        }\n    }\n\n    ri , re := v(root); \n    return Max(ri, re)\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"house-robber-iii"}