{"id":361654894,"lang":"cpp","time":"1 year, 9 months","timestamp":1593803836,"status_display":"Accepted","runtime":"32 ms","url":"/submissions/detail/361654894/","is_pending":"Not Pending","title":"House Robber III","memory":"22.2 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int rob(TreeNode* root) {\n        pair<int, int> result = helper(root); \n        return max(result.first, result.second); \n    }\n    \n    \n    pair<int, int> helper(TreeNode* root) {\n        if (!root) {\n            return pair<int, int>(0, 0); \n        }\n        \n        pair<int, int> lr = helper(root -> left); \n        pair<int, int> rr = helper(root -> right); \n        \n        int include_node = root -> val + lr.second + rr.second; \n        int exclude_node = max(lr.second, lr.first) + max(rr.second, rr.first); \n        return pair<int, int>(include_node, exclude_node); \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"house-robber-iii"}