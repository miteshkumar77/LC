{"id":391117966,"lang":"cpp","time":"1 year, 7 months","timestamp":1599264831,"status_display":"Accepted","runtime":"376 ms","url":"/submissions/detail/391117966/","is_pending":"Not Pending","title":"Meeting Scheduler","memory":"40.2 MB","code":"class Solution {\npublic:\n    typedef long long int lli; \n    vector<int> minAvailableDuration(vector<vector<int>>& slots1, vector<vector<int>>& slots2, int duration) {\n        auto cmp = [](vector<int>& a, vector<int>& b) -> bool {\n            return a[1] < b[1]; \n        };\n        sort(slots1.begin(), slots1.end(), cmp);\n        sort(slots2.begin(), slots2.end(), cmp); \n        int s1 = 0; \n        int s2 = 0; \n        while(s1 < slots1.size() && s2 < slots2.size()) {\n            // cout << s1 << ' ' << s2 << endl; \n            lli min1 = slots1[s1][0]; lli max1 = slots1[s1][1]; \n            lli min2 = slots2[s2][0]; lli max2 = slots2[s2][1]; \n\n            \n            \n            lli overlap = min(max1, max2) - max(min1, min2); \n            if (overlap >= duration) {\n                return vector<int>{(int)max(min1, min2), (int)(max(min1, min2) + (lli)duration)}; \n            }\n            \n            if (max2 <= max1) {\n                ++s2; \n            } else {\n                ++s1; \n            }\n        }\n        return vector<int>(); \n    }\n};","compare_result":"111111111111111111","title_slug":"meeting-scheduler"}