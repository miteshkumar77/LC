{"id":391116149,"lang":"cpp","time":"1 year, 7 months","timestamp":1599264393,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/391116149/","is_pending":"Not Pending","title":"Meeting Scheduler","memory":"N/A","code":"class Solution {\npublic:\n    vector<int> minAvailableDuration(vector<vector<int>>& slots1, vector<vector<int>>& slots2, int duration) {\n        \n        int s1 = 0; \n        int s2 = 0; \n        while(s1 < slots1.size() && s2 < slots2.size()) {\n            // cout << s1 << ' ' << s2 << endl; \n            int min1 = slots1[s1][0]; int max1 = slots1[s1][1]; \n            int min2 = slots2[s2][0]; int max2 = slots2[s2][1]; \n\n            \n            \n            int overlap = min(max1, max2) - max(min1, min2); \n            if (overlap >= duration) {\n                return vector<int>{max(min1, min2), max(min1, min2) + duration}; \n            }\n            \n            if (max2 <= max1) {\n                ++s2; \n            } else {\n                ++s1; \n            }\n        }\n        return vector<int>(); \n    }\n};","compare_result":"111111100000111111","title_slug":"meeting-scheduler"}