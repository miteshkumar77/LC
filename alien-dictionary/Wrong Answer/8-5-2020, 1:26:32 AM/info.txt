{"id":376326022,"lang":"cpp","time":"1 year, 8 months","timestamp":1596605192,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/376326022/","is_pending":"Not Pending","title":"Alien Dictionary","memory":"N/A","code":"class Solution {\npublic:\n    string alienOrder(vector<string>& words) {\n        array<bool, 26> exists; \n        fill(exists.begin(), exists.end(), false); \n        array<unordered_set<char>, 26> graph; \n        fill(graph.begin(), graph.end(), unordered_set<char>()); \n        for (int i = 0; i < words.size(); ++i) {\n            for (int k = 0; k < words[i].length(); ++k) {\n                exists[words[i][k] - 'a'] = true; \n            }\n            if (i != 0) {\n                int t = 0; \n                int b = 0; \n                while(t < words[i - 1].length() && b < words[i].length()) {\n                    if (words[i - 1][t] != words[i][b]) {\n                        graph[words[i - 1][t] - 'a'].insert(words[i][b]); \n                        break; \n                    }\n                    ++t; ++b; \n                }\n            }\n        }\n        \n        stack<char> topsort; \n        array<bool, 26> pre; \n        array<bool, 26> post; \n        fill(pre.begin(), pre.end(), false); \n        fill(post.begin(), post.end(), false); \n        bool busted = false; \n        function<void(char)> dfs = [&](char c) -> void {\n            pre[c - 'a'] = true; \n            for (char x : graph[c - 'a']) {\n                if (pre[x - 'a'] && !post[x - 'a']) {\n                    busted = true; \n                    return; \n                }\n                if (!pre[x - 'a']) {\n                    dfs(x); \n\n                }\n            }\n            post[c - 'a'] = true; \n            topsort.push(c); \n        };\n        \n        for (int i = 0; i < 26; ++i) {\n            if (exists[i] && !post[i]) {\n                dfs((char)(i + 'a'));\n            }\n        }\n        \n        if (busted) {\n            return \"\"; \n        }\n        string ans = \"\"; \n        while(!topsort.empty()) {\n            ans+= topsort.top(); \n            topsort.pop(); \n        }\n        return ans; \n    }\n};","compare_result":"11111111111111011111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"alien-dictionary"}