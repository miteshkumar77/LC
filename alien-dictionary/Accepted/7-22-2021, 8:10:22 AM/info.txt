{"id":526526785,"lang":"cpp","time":"9Â months","timestamp":1626955822,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/526526785/","is_pending":"Not Pending","title":"Alien Dictionary","memory":"9 MB","code":"class Solution {\npublic:\n    string alienOrder(vector<string>& words) {\n        vector<vector<int>> graph(26, vector<int>());\n        vector<bool> in(26, false);\n        bool ok;\n        for (string const& w : words) {\n            for (char c : w) in[c-'a'] = true;\n        }\n        \n        for (int w = 0; w+1 < words.size(); ++w) {\n            bool ok = true;\n            for (int i = 0; i < min(words[w].length(), words[w+1].length()); ++i) {\n                if (words[w][i] != words[w+1][i]) {\n                    graph[words[w+1][i]-'a'].push_back(words[w][i]-'a');\n                    ok = false;\n                    break;\n                }\n            }\n            if (ok && words[w].length() > words[w+1].length()) return \"\";\n        }\n        string ans;\n        vector<bool> pre(26, false);\n        vector<bool> post(26, false);\n        function<bool(int)> ts = [&](int node) -> bool {\n            if (post[node]) return true;\n            if (pre[node]) return false;\n            pre[node] = true;\n            for (int n : graph[node]) {\n                if (!ts(n)) return false;\n            }\n            ans.push_back((char)(node+'a'));\n            post[node] = true;\n            return true;\n        };\n        for (int i = 0; i < 26; ++i) {\n            if (!in[i]) continue;\n            if (!ts(i)) return \"\";\n        }\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"alien-dictionary"}