{"id":383702105,"lang":"cpp","time":"1 year, 8 months","timestamp":1597928787,"status_display":"Accepted","runtime":"52 ms","url":"/submissions/detail/383702105/","is_pending":"Not Pending","title":"Reorder List","memory":"17.9 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    void reorderList(ListNode* head) {\n        list<ListNode*> lbucket; \n        list<ListNode*> rbucket;\n        ListNode* fast_ptr = head; \n        if (!head) {\n            return;\n        }\n        // ListNode* fast_ptr = head -> next;\n        // if (fast_ptr) {\n        //     fast_ptr = fast_ptr -> next; \n        // }\n        while(fast_ptr) {\n            lbucket.push_back(head); \n            head = head -> next;\n            fast_ptr = fast_ptr -> next;\n            if (fast_ptr) {\n                fast_ptr = fast_ptr -> next; \n            }\n        }\n        // head = head -> next; \n        while(head) {\n\n            rbucket.push_front(head);\n            head = head -> next; \n        }\n        \n        auto lit = lbucket.begin();\n        auto rit = rbucket.begin(); \n        ListNode* cur = nullptr; \n        while(lit != lbucket.end() && rit != rbucket.end()) {\n            if (cur) {\n                cur -> next = (*lit);\n            }\n            cur = *lit;\n            cur -> next = *rit;\n            cur = cur -> next;\n            ++lit;\n            ++rit;\n            \n        }\n        \n        \n        \n        if (lit != lbucket.end()) {\n            if (!cur) {\n                return;\n                \n            }\n            cur -> next = *lit;\n            cur = cur -> next;\n        }\n        cur -> next = nullptr; \n        \n        \n        \n    }\n};","compare_result":"1111111111111","title_slug":"reorder-list"}