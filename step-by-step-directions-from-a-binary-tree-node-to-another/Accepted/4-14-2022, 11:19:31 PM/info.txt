{"id":680604290,"lang":"cpp","time":"3 days, 20 hours","timestamp":1649992771,"status_display":"Accepted","runtime":"234 ms","url":"/submissions/detail/680604290/","is_pending":"Not Pending","title":"Step-By-Step Directions From a Binary Tree Node to Another","memory":"138.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    array<bool, 2> solve(TreeNode* root, int a, int b, string& u, string& d) {\n        if (!root) return {false, false};\n        auto lr = solve(root->left, a, b, u, d);\n        auto rr = solve(root->right, a, b, u, d);\n        if (lr[0] && lr[1]) return lr;\n        if (rr[0] && rr[1]) return rr;\n        if (rr[1]) d.push_back('R');\n        if (lr[1]) d.push_back('L');\n        if (rr[0] || lr[0]) u.push_back('U');\n        return {lr[0] || rr[0] || (root->val == a), lr[1] || rr[1] || (root->val == b)};\n    }\n    string getDirections(TreeNode* root, int startValue, int destValue) {\n        string u, d;\n        solve(root, startValue, destValue, u, d);\n        reverse(d.begin(), d.end());\n        return u + d;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"step-by-step-directions-from-a-binary-tree-node-to-another"}