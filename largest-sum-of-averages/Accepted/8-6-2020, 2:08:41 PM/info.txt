{"id":377078210,"lang":"cpp","time":"1 year, 8 months","timestamp":1596737321,"status_display":"Accepted","runtime":"192 ms","url":"/submissions/detail/377078210/","is_pending":"Not Pending","title":"Largest Sum of Averages","memory":"49.3 MB","code":"class Solution {\npublic:\n    double largestSumOfAverages(vector<int>& A, int K) {\n        vector<int> pre(A.size() + 1); \n        pre[0] = 0; \n        for (int i = 0; i < A.size(); ++i) {\n            pre[i + 1] = pre[i] + A[i]; \n        }\n        \n        \n        vector<vector<vector<double>>> dp(A.size(), vector<vector<double>>(A.size(), vector<double>(K + 1))); \n        vector<vector<vector<bool>>> dp2(A.size(), vector<vector<bool>>(A.size(), vector<bool>(K + 1, false))); \n\n        function<double(int,int)> avg = [&](int L, int R) -> double {\n            return ((double)pre[R + 1] - pre[L])/(R - L + 1); \n        };\n        \n        \n        function <double(int,int,int)> ans = [&](int L, int R, int k) -> double {\n            if (dp2[L][R][k]) {\n                return dp[L][R][k]; \n            }\n            if (k == 1) {\n                dp[L][R][k] = avg(L, R); \n                dp2[L][R][k] = true; \n                return dp[L][R][k]; \n            }\n            \n            double ret = 0; \n            for (int i = L; i < R - k + 2; ++i) {\n                ret = max(ret, ans(L, i, 1) + ans(i + 1, R, k - 1)); \n            }\n            \n            dp2[L][R][k] = true; \n            dp[L][R][k] = ret; \n            return ret; \n        };\n        \n        return ans(0, A.size() - 1, K); \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111","title_slug":"largest-sum-of-averages"}