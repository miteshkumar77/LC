{"id":519226959,"lang":"cpp","time":"9 months, 2 weeks","timestamp":1625739729,"status_display":"Accepted","runtime":"264 ms","url":"/submissions/detail/519226959/","is_pending":"Not Pending","title":"Maximum Length of Repeated Subarray","memory":"109.2 MB","code":"class Solution {\npublic:\n    int findLength(vector<int>& nums1, vector<int>& nums2) {\n        int n = nums1.size(); int m = nums2.size();\n        vector<vector<int>> dp(n + 1, vector<int>(m + 1, 0));\n        int ans = 0;\n        for (int i = 1; i <= n; ++i) {\n            for (int j = 1; j <= m; ++j) {\n                if (nums1[i-1] == nums2[j-1]) {\n                    dp[i][j] = dp[i-1][j-1] + 1;\n                    ans = max(ans, dp[i][j]);\n                }\n            }\n        }\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111","title_slug":"maximum-length-of-repeated-subarray"}