{"id":436076998,"lang":"cpp","time":"1 year, 3 months","timestamp":1609268415,"status_display":"Accepted","runtime":"208 ms","url":"/submissions/detail/436076998/","is_pending":"Not Pending","title":"Pseudo-Palindromic Paths in a Binary Tree","memory":"108.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int pseudoPalindromicPaths (TreeNode* root) {\n        array<int, 10> ct;\n        fill(ct.begin(), ct.end(), 0);\n        \n        function<int(TreeNode*,int)> helper = [&](TreeNode* node, int numOdd) -> int {\n            if (!node) {\n                return 0;\n            }\n            \n            int pre = ct[node->val];\n            ++ct[node->val];\n            if (ct[node->val] % 2 == 0) {\n                --numOdd;\n            } else {\n                ++numOdd;\n            }\n            if (!node->left && !node->right) {\n                ct[node->val] = pre;\n                return numOdd == 0 || numOdd == 1;\n            }\n            int ans = helper(node->left, numOdd) + helper(node->right, numOdd);\n            ct[node->val] = pre;\n            return ans;\n        };\n        \n        return helper(root, 0);\n        \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111","title_slug":"pseudo-palindromic-paths-in-a-binary-tree"}