{"id":532353670,"lang":"cpp","time":"8 months, 2 weeks","timestamp":1627947808,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/532353670/","is_pending":"Not Pending","title":"Shortest Palindrome","memory":"N/A","code":"class Solution {\npublic:\n    string shortestPalindrome(string s) {\n        int n = s.length();\n        vector<int> lps(n);\n        lps[0] = 0;\n        int j = 0;\n        for (int i = 1; i < n;) {\n            if (s[i] == s[j]) {\n                lps[i++] = ++j;\n            } else if (j > 0) {\n                j = lps[j-1];\n            } else {\n                lps[i++] = 0;\n            }\n        }\n        j = 0;\n        int maxj = 0;\n        for (int i = n-1; i >= 0;) {\n            if (s[i] == s[j]) {\n                ++j;\n                --i;\n            } else if (j > 0) {\n                j = lps[j-1];\n            } else {\n                --i;\n            }\n            if (i <= j) {\n                maxj = max(maxj, j);\n            }\n        }\n        auto add = s.substr(j);\n        reverse(s.begin(), s.end());\n        \n        return s + add;\n    }\n};","compare_result":"110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"shortest-palindrome"}