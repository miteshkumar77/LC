{"id":680980314,"lang":"cpp","time":"3 days, 6 hours","timestamp":1650043129,"status_display":"Accepted","runtime":"19 ms","url":"/submissions/detail/680980314/","is_pending":"Not Pending","title":"Trim a Binary Search Tree","memory":"23.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    TreeNode* trimBST(TreeNode* root, int low, int high) {\n        if (!root) return root;\n        if (root->val < low) {\n            return trimBST(root->right, low, high);\n        } else if (root->val > high) {\n            return trimBST(root->left, low, high);\n        } else {\n            root->left = trimBST(root->left, low, high);\n            root->right = trimBST(root->right, low, high);\n            return root;\n        }\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"trim-a-binary-search-tree"}