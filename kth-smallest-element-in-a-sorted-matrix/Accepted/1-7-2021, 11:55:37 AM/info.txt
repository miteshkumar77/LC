{"id":439871360,"lang":"cpp","time":"1 year, 3 months","timestamp":1610038537,"status_display":"Accepted","runtime":"792 ms","url":"/submissions/detail/439871360/","is_pending":"Not Pending","title":"Kth Smallest Element in a Sorted Matrix","memory":"13.5 MB","code":"class Solution {\npublic:\n    int kthSmallest(vector<vector<int>>& matrix, int k) {\n        for (int i = 0; i < matrix.size(); ++i) {\n            for (int j = 0; j < matrix[i].size(); ++j) {\n                cout << numLTE(matrix, matrix[i][j]) << ' ';\n            }\n            cout << endl;\n        }\n        int l = matrix[0][0];\n        int r = matrix.back().back();\n        int ans = r;\n        int mid;\n        while(l <= r) {\n            mid = l + (r - l)/2;\n            \n            if (numLTE(matrix, mid) >= k) {\n                ans = mid;\n                r = mid - 1;\n            } else {\n                l = mid + 1;\n            }\n        }\n        \n        return ans;\n    }\n    \n    int numLTE(vector<vector<int>>& matrix, int num) {\n        int col = matrix[0].size() - 1;\n        int ans = 0;\n        for (int row = 0; row < matrix.size() && col >= 0; ++row) {\n            while(col >= 0 && matrix[row][col] > num) {\n                --col;\n            }\n            ans += col + 1;\n        }\n        return ans;\n    }\n    \n    bool check(vector<vector<int>>& matrix, int k, int i) {\n        \n        int lt = numLTE(matrix, i); \n        return lt >= k;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"kth-smallest-element-in-a-sorted-matrix"}