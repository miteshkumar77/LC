{"id":433443453,"lang":"cpp","time":"1 year, 3 months","timestamp":1608667582,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/433443453/","is_pending":"Not Pending","title":"Balanced Binary Tree","memory":"22.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool isBalanced(TreeNode* root) {\n        return isBalancedHelper(root).first;\n    }\n    \n    pair<bool, int> isBalancedHelper(TreeNode* root) {\n        if (!root) {\n            return make_pair(true, 0);\n        }\n        \n        auto rl = isBalancedHelper(root -> left);\n        auto rr = isBalancedHelper(root-> right);\n        \n        return make_pair(rl.first && rr.first && abs(rl.second - rr.second) <= 1, \n                         max(rl.second, rr.second) + 1); \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"balanced-binary-tree"}