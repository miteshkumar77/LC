{"id":390117876,"lang":"cpp","time":"1Â year, 7Â months","timestamp":1599078608,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/390117876/","is_pending":"Not Pending","title":"Flatten a Multilevel Doubly Linked List","memory":"7.3 MB","code":"/*\n// Definition for a Node.\nclass Node {\npublic:\n    int val;\n    Node* prev;\n    Node* next;\n    Node* child;\n};\n*/\n\nclass Solution {\npublic:\n    Node* flatten(Node* head) {\n        helper(head); \n        return head; \n    }\n    \n    Node* helper(Node* head) {\n        Node* cur = head; \n        Node* last = nullptr; \n        while(cur) {\n            if (cur -> child) {\n                Node* end = helper(cur -> child); \n                if (cur -> next) {\n                    end -> next = cur -> next; \n                    cur -> next -> prev = end; \n                }\n                cur -> next = cur -> child; \n                cur -> child -> prev = cur; \n                cur -> child = nullptr; \n            }\n            last = cur; \n            cur = cur -> next; \n        }\n        return last; \n    }\n    \n};","compare_result":"1111111111111111111111","title_slug":"flatten-a-multilevel-doubly-linked-list"}