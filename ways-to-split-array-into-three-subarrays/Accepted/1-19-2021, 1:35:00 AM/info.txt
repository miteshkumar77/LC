{"id":444936982,"lang":"cpp","time":"1 year, 2 months","timestamp":1611038100,"status_display":"Accepted","runtime":"132 ms","url":"/submissions/detail/444936982/","is_pending":"Not Pending","title":"Ways to Split Array Into Three Subarrays","memory":"81.3 MB","code":"class Solution {\npublic:\n    int waysToSplit(vector<int>& nums) {\n        int n = nums.size();\n        int left = 0;\n        int midl = nums[0];\n        int jl = 0;\n        int midu = nums[0];\n        int ju = 0;\n        int rightu = accumulate(nums.begin() + 1, nums.end(), 0);\n        int ans = 0;\n        int M = 1e9 + 7;\n        for (int i = 0; i < nums.size() - 2; ++i) {\n            left += nums[i];\n            midl -= nums[i];\n            midu -= nums[i];\n            while(jl == i || (jl < n - 2 && midl < left)) {\n                midl += nums[++jl];\n            }\n            while(ju == i || (ju < n - 2 && midu + nums[ju + 1] <= rightu - nums[ju + 1])) {\n                midu += nums[++ju];\n                rightu -= nums[ju];\n            }\n            // cout << jl << ' ' << midl << ' ' << ju << ' ' << midu << endl;\n            // if (midl >= && midu <= rightu && rightu != 0 && ju >= jl) {\n            if (midl >= left && midu >= left && midu <= rightu && ju >= jl) {\n                ans += max(0, ju - jl + 1);\n                ans = ans % M;\n            }\n        }\n        return ans;\n    }\n    \n    \n    \n    \n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"ways-to-split-array-into-three-subarrays"}