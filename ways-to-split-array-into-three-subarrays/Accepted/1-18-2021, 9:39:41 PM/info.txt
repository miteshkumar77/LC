{"id":444848987,"lang":"cpp","time":"1 year, 2 months","timestamp":1611023981,"status_display":"Accepted","runtime":"284 ms","url":"/submissions/detail/444848987/","is_pending":"Not Pending","title":"Ways to Split Array Into Three Subarrays","memory":"85.1 MB","code":"class Solution {\npublic:\n    int waysToSplit(vector<int>& nums) {\n        int n = nums.size();\n        vector<int> pref(n);\n        pref[0] = nums[0];\n        \n        int M = 1e9 + 7;\n        \n        for (int i = 1; i < nums.size(); ++i) pref[i] = nums[i] + pref[i - 1];\n        \n        int ans = 0;\n        int left = 0;\n        for (int i = 0; i < nums.size() - 2; ++i) {\n            left += nums[i];\n            int l = i + 1;\n            int r = n - 2;\n            int lb = lower_bound(pref, l, r, left, left);\n            int ub = upper_bound(pref, l, r, (nums.back() - left)/2, left);\n            ans += max(0, ub - lb + 1);\n            ans = ans % M;\n        }\n        return ans;\n    }\n    \n    \n    int lower_bound(const vector<int>& pref, int l, int r, int t, int left) {\n        int ans = r + 1;\n        int mid;\n        while(l <= r) {\n            mid = l + (r - l)/2;\n            if (pref[mid] - left >= t) {\n                ans = mid;\n                r = mid - 1;\n            } else {\n                l = mid + 1;\n            }\n        }\n        return ans;\n    }\n    \n    int upper_bound(const vector<int>& pref, int l, int r, int t, int left) {\n        int ans = l - 1;\n        int mid;\n        while(l <= r) {\n            mid = l + (r - l)/2;\n            if (pref[mid] - left <= pref.back() - pref[mid]) {\n                ans = mid;\n                l = mid + 1;\n            } else {\n                r = mid - 1;\n            }\n        }\n        return ans;\n    }\n    \n    \n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"ways-to-split-array-into-three-subarrays"}