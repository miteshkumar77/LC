{"id":492837942,"lang":"cpp","time":"11 months, 1 week","timestamp":1620954928,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/492837942/","is_pending":"Not Pending","title":"Partition Array for Maximum Sum","memory":"8.5 MB","code":"class Solution {\npublic:\n    int maxSumAfterPartitioning(vector<int>& arr, int k) {\n        int n = arr.size();\n        vector<int> dp(n, 0);\n        int prev;\n        int mxelem;\n        for (int i = 0; i < n; ++i) {\n            mxelem = arr[i];\n            for (int j = i; j >= max(0, i - k + 1); --j) {\n                mxelem = max(mxelem, arr[j]);\n                prev = (j == 0) ? 0 : dp[j-1];\n                dp[i] = max(dp[i], mxelem * (i - j + 1) + prev);\n            }\n        }\n        return dp.back();\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"partition-array-for-maximum-sum"}