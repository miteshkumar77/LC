{"id":486325892,"lang":"cpp","time":"11 months, 3 weeks","timestamp":1619627063,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/486325892/","is_pending":"Not Pending","title":"Unique Paths II","memory":"7.6 MB","code":"class Solution {\npublic:\n    int uniquePathsWithObstacles(vector<vector<int>>& obstacleGrid) {\n        int n = obstacleGrid.size();\n        if (n == 0) {\n            return 0;\n        }\n        int m = obstacleGrid[0].size();\n        for (int i = 0; i < n; ++i) {\n            for (int j = 0; j < m; ++j) {\n                \n                if (obstacleGrid[i][j] == 1) {\n                    obstacleGrid[i][j] = -1;\n                    continue;\n                }\n                if (i == 0 && j == 0) {\n                    obstacleGrid[i][j] = 1;\n                    continue;\n                }\n                \n                if (i != 0 && obstacleGrid[i - 1][j] > 0) {\n                    obstacleGrid[i][j] += obstacleGrid[i - 1][j]; \n                }\n                if (j != 0 && obstacleGrid[i][j - 1] > 0) {\n                    obstacleGrid[i][j] += obstacleGrid[i][j - 1];\n                } \n            }\n        }\n        return max(obstacleGrid[n - 1][m - 1], 0);\n    }\n};","compare_result":"11111111111111111111111111111111111111111","title_slug":"unique-paths-ii"}