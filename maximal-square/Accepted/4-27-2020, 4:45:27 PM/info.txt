{"id":331062058,"lang":"cpp","time":"1 year, 11 months","timestamp":1588020327,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/331062058/","is_pending":"Not Pending","title":"Maximal Square","memory":"8.8 MB","code":"class Solution {\npublic:\n    int maximalSquare(vector<vector<char>>& matrix) {\n        if (matrix.size() == 0) {\n            return 0; \n        }\n        vector<vector<int> > dp = vector<vector<int> >(matrix.size() + 1, vector<int>(matrix[0].size() + 1, 0)); \n        \n         \n        int max_area = 0; \n        for (int i = 1; i <= matrix.size(); ++i) {\n            for (int j = 1; j <= matrix[0].size(); ++j) {\n                \n                if (matrix[i - 1][j - 1] == '0') {\n                    dp[i][j] = 0; \n                } else {\n                    dp[i][j] = min(dp[i - 1][j], dp[i][j - 1]); \n                    dp[i][j] = min(dp[i][j], dp[i - 1][j - 1]); \n                    ++dp[i][j];\n                    if (dp[i][j] * dp[i][j] > max_area) {\n                        max_area = dp[i][j] * dp[i][j];\n                    }\n                }\n                    \n                \n            }\n        }\n        \n        return max_area; \n        \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximal-square"}