{"id":446179394,"lang":"cpp","time":"1 year, 2 months","timestamp":1611291111,"status_display":"Accepted","runtime":"496 ms","url":"/submissions/detail/446179394/","is_pending":"Not Pending","title":"Number of Boomerangs","memory":"124.1 MB","code":"class Solution {\npublic:\n    \n    int dist(const vector<int>& p1, const vector<int>& p2) {\n        return (p1[0] - p2[0]) * (p1[0] - p2[0]) + (p1[1] - p2[1]) * (p1[1] - p2[1]); \n    }\n    \n    int numberOfBoomerangs(vector<vector<int>>& points) {\n        int ans = 0;\n        for (int anchor = 0; anchor < points.size(); ++anchor) {\n            // cout << anchor << \": \";\n            unordered_map<int, int> count;\n            for (int point = 0; point < points.size(); ++point) {\n                if (point == anchor) continue;\n                // cout << point << ' ';\n                ++count[dist(points[anchor], points[point])]; \n            }\n            cout << endl;\n            for (auto p : count) {\n                ans += p.second * (p.second - 1); \n            }\n        }\n        \n        return ans;\n    }\n    \n};","compare_result":"11111111111111111111111111111111","title_slug":"number-of-boomerangs"}