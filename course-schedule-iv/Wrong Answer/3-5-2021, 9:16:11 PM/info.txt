{"id":464061999,"lang":"cpp","time":"1 year, 1 month","timestamp":1614996971,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/464061999/","is_pending":"Not Pending","title":"Course Schedule IV","memory":"N/A","code":"class Solution {\npublic:\n    \n    void ts(vector<vector<int>>& graph, vector<int>& color, unordered_map<int,int>& mp, vector<int>& stk, int node, int c) {\n        color[node] = c;\n        for (int neighbor : graph[node]) {\n            ts(graph, color, mp, stk, neighbor, c);\n        }\n        stk.push_back(node); \n        mp[node] = stk.size();\n    }\n    vector<bool> checkIfPrerequisite(int n, vector<vector<int>>& prerequisites, vector<vector<int>>& queries) {\n        vector<vector<int>> graph(n);\n        for (auto e : prerequisites) {\n            graph[e[0]].push_back(e[1]);\n        }\n        vector<int> stk;\n        stk.reserve(n);\n        vector<int> color(n, -1);\n        unordered_map<int,int> mp;\n        int c = 0;\n        for (int i = 0; i < n; ++i) {\n            if (color[i] == -1) {\n                ts(graph, color, mp, stk, i, c++);\n            }\n        }\n        vector<bool> res;\n        res.reserve(n);\n        for (auto& q : queries) {\n            res.push_back(mp[q[0]] > mp[q[1]] && color[q[0]] == color[q[1]]);\n        }\n        return res;\n        \n    }\n};","compare_result":"11111001000000000000000000000000000000000000000000000000000000000000","title_slug":"course-schedule-iv"}