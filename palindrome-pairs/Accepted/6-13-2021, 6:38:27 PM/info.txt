{"id":507518182,"lang":"cpp","time":"10 months, 1 week","timestamp":1623623907,"status_display":"Accepted","runtime":"336 ms","url":"/submissions/detail/507518182/","is_pending":"Not Pending","title":"Palindrome Pairs","memory":"105.9 MB","code":"class Solution {\npublic:\n    \n/*\n\n    isPal(w1[] + w2[]) == ?\n    \n    case 1: 0 <= k <= w1.length\n        any(isPal(w1[0:k] + w1[k:] + w2[])) ==\n            any(isPal(w1[k:]) and reverse(w1[0:k]) == w2[])\n    \n    \n    w1[0:x] + w1[x:] + w2[0:y] + w2[y:]\n    isPal(w1[x:] + w2[0:y])\n    \n    case 2: 0 <= k <= w2.length\n        any(isPal(w1[] + w2[0:k] + w2[k:])) ==\n            any(isPal(w2[0:k]) && reverse(w1[]) == w2[k:])\n    \n    ex: w1[] = sl, w2[] = lls\n    \n    reverse(w1[]) == w2[1:] && isPal(w2[0:1]) => ls == ls && l is a palindrome\n\n\n*/\n    bool isPal(const string& wd) {\n        int l = 0; int r = (int)wd.length() - 1;\n        while(l < r) if (wd[l++] != wd[r--]) return false;\n        return true;\n    }\n    vector<vector<int>> palindromePairs(vector<string>& words) {\n        unordered_map<string, vector<int>> m1;\n        unordered_map<string, vector<int>> m2;\n        unordered_map<int, unordered_set<int>> pairs;\n        int n = words.size();\n        for (int i = 0; i < n; ++i) {\n            for (int k = 0; k <= words[i].length(); ++k) {\n                auto w10k = words[i].substr(0, k); reverse(w10k.begin(), w10k.end());\n                auto w1k = words[i].substr(k, words[i].length());\n                if (isPal(w1k)) { \n                    m1[w10k].push_back(i);\n                }\n                if (w1k.length() == 0) m2[w10k].push_back(i);\n            }\n        }\n        \n        for (int i = 0; i < n; ++i) {\n            auto it = m1.find(words[i]);\n            if (it != m1.end()) for (int j : it -> second) if (i != j) pairs[j].insert(i);\n            for (int k = 0; k <= words[i].length(); ++k) {\n                auto w20k = words[i].substr(0, k);\n                auto w2k = words[i].substr(k, words[i].length());\n                if (isPal(w20k)) {\n                    it = m2.find(w2k);\n                    if (it != m1.end()) for (int j : it -> second) if (i != j) pairs[j].insert(i);\n                }\n            }\n        }\n        vector<vector<int>> ans;\n        for (const auto& p : pairs) {\n            for (int j : p.second) ans.push_back({p.first, j});\n        }\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"palindrome-pairs"}