{"id":507504832,"lang":"cpp","time":"10 months, 1 week","timestamp":1623621223,"status_display":"Accepted","runtime":"364 ms","url":"/submissions/detail/507504832/","is_pending":"Not Pending","title":"Palindrome Pairs","memory":"106 MB","code":"class Solution {\npublic:\n    bool isPal(const string& s, int l, int r) {\n        while(l < r) if (s[l++] != s[r--]) return false;\n        return true;\n    }\n    \n    \n    vector<vector<int>> palindromePairs(vector<string>& words) {\n        int n = words.size();\n        \n        unordered_map<string, vector<int>> m1;\n        unordered_map<string, vector<int>> m2;\n        unordered_map<int, unordered_set<int>> pairs; \n        for (int i = 0; i < n; ++i) {\n            for (int k = 0; k <= words[i].length(); ++k) {\n                auto sl0k = words[i].substr(0, k); reverse(sl0k.begin(), sl0k.end());\n                auto slk = words[i].substr(k, words[i].length() - k);\n                if (isPal(slk, 0, (int)slk.length() - 1)) {\n                    m1[sl0k].push_back(i);\n                }\n            }\n            reverse(words[i].begin(), words[i].end());\n            m2[words[i]].push_back(i);\n            reverse(words[i].begin(), words[i].end());\n        }\n        \n        for (int i = 0; i < n; ++i) {\n            auto it = m1.find(words[i]);\n            if (it != m1.end()) {\n                for (int j : it -> second) if (i != j) pairs[j].insert(i);\n            }\n            for (int k = 0; k <= words[i].length(); ++k) {\n                auto sr0k = words[i].substr(0, k);\n                auto srk = words[i].substr(k, words[i].length() - k);\n                if (isPal(sr0k, 0, (int)sr0k.length() - 1)) {\n                    it = m2.find(srk);\n                    if (it != m2.end()) {\n                        for (int j : it -> second) if (i != j) pairs[j].insert(i);\n                    }\n                }\n            }\n        }\n        vector<vector<int>> ans;\n        for (const auto& p : pairs) {\n            for (int i : p.second) ans.push_back({p.first, i});\n        }\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"palindrome-pairs"}