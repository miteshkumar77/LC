{"id":503547136,"lang":"cpp","time":"10 months, 2 weeks","timestamp":1622928438,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/503547136/","is_pending":"Not Pending","title":"Palindrome Pairs","memory":"N/A","code":"class Solution {\npublic:\n    bool isPal(int i, int j, const string& wd) {\n        while(i < j) if (wd[i++] != wd[j--]) return false; return true;\n    }\n    vector<vector<int>> palindromePairs(vector<string>& words) {\n        unordered_map<string, vector<int>> dp;\n        vector<vector<int>> ans;\n        \n        int i = 0;\n        vector<int> empties;\n        for (string& wd : words) {\n            if (wd == \"\") {\n                empties.push_back(i);\n                continue;\n            }           \n            reverse(wd.begin(), wd.end());\n            dp[wd].push_back(i);\n            for (int x = (int)wd.length() - 1; x >= 0; --x) {\n                if (isPal(x, (int)wd.length()-1, wd)) {\n                    dp[wd.substr(0, x)].push_back(i);\n                }\n            }\n            reverse(wd.begin(), wd.end());\n            ++i;\n        }\n        i = 0;\n        for (string& wd : words) {\n            auto p = dp.find(wd);\n            if (p != dp.end()) {\n                for (int j : p->second) {\n                    if (i == j) continue;\n                    ans.push_back({i, j});\n                }\n            }\n            ++i;\n        }\n        for (int e : dp[\"\"]) {\n            for (int v : empties) {\n                if (e != v) ans.push_back({e, v});\n            }\n        }\n        /*\n        for (const auto& p : dp) {\n            cout << p.first << \": \";\n            for (int x : p.second) cout << x << ' ';\n            cout << endl;\n        }\n        */\n        return ans;\n    }\n};","compare_result":"11111000000001100101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111010000111111111","title_slug":"palindrome-pairs"}