{"id":377167238,"lang":"cpp","time":"1 year, 8 months","timestamp":1596752369,"status_display":"Accepted","runtime":"192 ms","url":"/submissions/detail/377167238/","is_pending":"Not Pending","title":"Random Pick with Weight","memory":"40.6 MB","code":"class Solution {\n    \n    \nprivate: \n    vector<unsigned long long int> weights; \npublic:\n    Solution(vector<int>& w) {\n        \n        weights = vector<unsigned long long int>(w.size()); \n        weights[0] = w[0]; \n        for (int i = 1; i < w.size(); ++i) {\n            weights[i] = weights[i - 1] + w[i]; \n        }\n    }\n    \n    int pickIndex() {\n        unsigned long long int randidx = rand() % weights.back(); \n        int L = 0; \n        int R = weights.size() - 1; \n        return upper_bound(weights.begin(), weights.end(), randidx) - begin(weights); \n    }\n};\n\n/**\n * Your Solution object will be instantiated and called as such:\n * Solution* obj = new Solution(w);\n * int param_1 = obj->pickIndex();\n */","compare_result":"111111111111111111111111111111111111111111111111111111111","title_slug":"random-pick-with-weight"}