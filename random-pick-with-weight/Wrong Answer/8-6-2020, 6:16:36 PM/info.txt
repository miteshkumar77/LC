{"id":377166370,"lang":"cpp","time":"1 year, 8 months","timestamp":1596752196,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/377166370/","is_pending":"Not Pending","title":"Random Pick with Weight","memory":"N/A","code":"class Solution {\n    \n    \nprivate: \n    vector<unsigned long long int> weights; \npublic:\n    Solution(vector<int>& w) {\n        \n        weights = vector<unsigned long long int>(w.size()); \n        weights[0] = w[0]; \n        for (int i = 1; i < w.size(); ++i) {\n            weights[i] = weights[i - 1] + w[i]; \n        }\n    }\n    \n    int pickIndex() {\n        unsigned long long int randidx = rand() % weights.back(); \n        int L = 0; \n        int R = weights.size() - 1; \n        int ans = 0; \n        while(L < R) {\n            int mid = L + (R - L)/2; \n            if (weights[mid] < randidx) {\n                ans = mid; \n                L = mid + 1; \n            } else {\n                R = mid - 1; \n            }\n        }\n        return ans; \n    }\n};\n\n/**\n * Your Solution object will be instantiated and called as such:\n * Solution* obj = new Solution(w);\n * int param_1 = obj->pickIndex();\n */","compare_result":"111100000001000000000000000010010100001010001101110011011","title_slug":"random-pick-with-weight"}