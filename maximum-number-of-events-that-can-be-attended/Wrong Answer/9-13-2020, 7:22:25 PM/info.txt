{"id":395306385,"lang":"cpp","time":"1 year, 7 months","timestamp":1600039345,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/395306385/","is_pending":"Not Pending","title":"Maximum Number of Events That Can Be Attended","memory":"N/A","code":"class Solution {\npublic:\n    int maxEvents(vector<vector<int>>& events) {\n        sort(events.begin(), events.end(), [](vector<int>& a, vector<int>& b) -> bool {\n            return a[0] < b[0];     \n        });\n        \n        \n        vector<int> pre = events[0]; \n        \n        int ans = 0; \n        \n        for (int i = 0; i < events.size(); ++i) {\n            if (events[i][0] <= pre[1]) {\n                pre[1] = max(pre[1], events[i][1]); \n            } else {\n                ans += pre[1] - pre[0] + 1; \n                pre = events[i]; \n            }\n        }\n        ans += pre[1] - pre[0] + 1; \n        return min(ans, (signed int)events.size()); \n    }\n};","compare_result":"111111111010111111000101111111111111111111111","title_slug":"maximum-number-of-events-that-can-be-attended"}