{"id":492172475,"lang":"cpp","time":"11 months, 1 week","timestamp":1620821402,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/492172475/","is_pending":"Not Pending","title":"Range Sum Query 2D - Immutable","memory":"15.3 MB","code":"class NumMatrix {\npublic:\n    vector<vector<int>> dp;\n    NumMatrix(vector<vector<int>>& matrix) {\n        int m = matrix.size();\n        int n = matrix[0].size();\n        dp = vector<vector<int>>(m + 1, vector<int>(n + 1, 0));\n        for (int i = 1; i <= m; ++i) {\n            for (int j = 1; j <= n; ++j) {\n                dp[i][j] = matrix[i-1][j-1] - dp[i-1][j-1] + dp[i-1][j] + dp[i][j-1];\n            }\n        }\n    }\n    \n    int sumRegion(int row1, int col1, int row2, int col2) {\n        return dp[row2+1][col2+1] - dp[row1][col2+1] - dp[row2+1][col1] + dp[row1][col1];\n    }\n};\n\n/**\n * Your NumMatrix object will be instantiated and called as such:\n * NumMatrix* obj = new NumMatrix(matrix);\n * int param_1 = obj->sumRegion(row1,col1,row2,col2);\n */","compare_result":"11111111111","title_slug":"range-sum-query-2d-immutable"}