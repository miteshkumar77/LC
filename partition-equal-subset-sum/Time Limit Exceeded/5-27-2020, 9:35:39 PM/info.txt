{"id":345635896,"lang":"cpp","time":"1 year, 10 months","timestamp":1590629739,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/345635896/","is_pending":"Not Pending","title":"Partition Equal Subset Sum","memory":"N/A","code":"class Solution {\npublic:\n    bool canPartition(vector<int>& nums) {\n        int total_sum = 0; \n        for (int num : nums) {\n            total_sum += num; \n        }\n        \n        if (total_sum % 2 != 0) {\n            return false; \n        }\n        \n        total_sum /= 2; \n        \n        vector<vector<bool> > dp(nums.size() + 1, vector<bool>(total_sum + 1, false)); \n        for (int i = 0; i <= nums.size(); ++i) {\n            dp[i][0] = true; \n        }\n        \n        for (int i = 1; i <= nums.size(); ++i) {\n            for (int j = 1; j <= total_sum; ++j) {\n                dp[i][j] = dp[i - 1][j] || (j - nums[i - 1] >= 0 && dp[i - 1][j - nums[i - 1]]); \n            }\n        }\n        \n        for (int i = 0; i < dp.size(); ++i) {\n            for (int j = 0; j < dp[i].size(); ++j) {\n                cout << dp[i][j] << ' '; \n            }\n            cout << endl; \n        }\n        \n        \n        \n        return dp.back().back(); \n        \n        \n    }\n    \n    \n};","compare_result":"111111111111111111111111111111111111111111100000000000000000000000000000000000000000000000000000000000000","title_slug":"partition-equal-subset-sum"}