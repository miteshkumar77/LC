{"id":405448456,"lang":"cpp","time":"1 year, 6 months","timestamp":1602025639,"status_display":"Accepted","runtime":"108 ms","url":"/submissions/detail/405448456/","is_pending":"Not Pending","title":"Insert into a Binary Search Tree","memory":"60 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* insertIntoBST(TreeNode* root, int val) {\n        if (!root) {\n            return new TreeNode(val);\n        }\n        TreeNode* tmp = root;\n        TreeNode* prev = nullptr;\n        while(root) {\n            prev = root;\n            if (root -> val < val) {\n                root = root -> right;\n            } else {\n                root = root -> left;\n            }\n        }\n        if (prev -> val > val) {\n            prev -> left = new TreeNode(val);\n        } else {\n            prev -> right = new TreeNode(val);\n        }\n        return tmp;\n    }\n};","compare_result":"11111111111111111111111111111111111","title_slug":"insert-into-a-binary-search-tree"}