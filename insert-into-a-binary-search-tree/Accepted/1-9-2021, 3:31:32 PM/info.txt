{"id":440816992,"lang":"cpp","time":"1 year, 3 months","timestamp":1610224292,"status_display":"Accepted","runtime":"128 ms","url":"/submissions/detail/440816992/","is_pending":"Not Pending","title":"Insert into a Binary Search Tree","memory":"60.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* insertIntoBST(TreeNode* root, int val) {\n        if (!root) {\n            return new TreeNode(val);\n        }\n        if (root -> val < val) {\n            if (!root -> right) {\n                root -> right = new TreeNode(val);\n            } else {\n                insertIntoBST(root -> right, val);\n            }\n        } else {\n            if (!root -> left) {\n                root -> left = new TreeNode(val);\n            } else {\n                insertIntoBST(root -> left, val);\n            }\n        }\n        return root;\n    }\n};","compare_result":"11111111111111111111111111111111111","title_slug":"insert-into-a-binary-search-tree"}