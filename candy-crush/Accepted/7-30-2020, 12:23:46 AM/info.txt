{"id":373467056,"lang":"cpp","time":"1 year, 8 months","timestamp":1596083026,"status_display":"Accepted","runtime":"88 ms","url":"/submissions/detail/373467056/","is_pending":"Not Pending","title":"Candy Crush","memory":"20.3 MB","code":"class Solution {\npublic:\n    vector<vector<int>> candyCrush(vector<vector<int>>& board) {\n        array<int, 5> dirs{0, 1, 0, -1, 0}; \n        \n        \n        function<bool()> eliminate_candies = [&]() -> bool {\n            \n            vector<vector<int> > mark(board.size(), vector<int>(board.size(), false));\n            \n            for (int i = 0; i < board.size(); ++i) {\n                int prev = -1;\n                int num_prev = 0;\n                \n                for (int j = 0; j < board[i].size(); ++j) {\n                    if (prev == -1) {\n                        prev = j; \n                        num_prev = 1; \n                    } else if (board[i][prev] == board[i][j]) {\n                        ++num_prev;\n                    } else {\n\n                        if (num_prev >= 3) {\n                            for (int x = prev; x < j; ++x) {\n                                mark[i][x] = true; \n                            }\n                        }\n                        prev = j; \n                        num_prev = 1; \n                    }\n                }\n                if (num_prev >= 3) {\n                    for (int x = prev; x < board[i].size(); ++x) {\n                        mark[i][x] = true; \n                    }\n                }\n            }\n            \n            for (int j = 0; j < board[0].size(); ++j) {\n                int prev = -1;\n                int num_prev = 0;\n                for (int i = 0; i < board.size(); ++i) {\n                    \n                    if (prev == -1) {\n                        prev = i; \n                        num_prev = 1; \n                    } else if (board[prev][j] == board[i][j]) {\n                        ++num_prev;\n                    } else {\n                        if (num_prev >= 3) {\n                            for (int x = prev; x < i; ++x) {\n                                mark[x][j] = true; \n                            }\n                        }\n                        \n                        prev = i; \n                        num_prev = 1; \n                    }\n                }\n                if (num_prev >= 3) {\n                    for (int x = prev; x < board.size(); ++x) {\n                        mark[x][j] = true; \n                    }\n                }\n                        \n            }\n            \n            int marks = 0; \n            for (int i = 0; i < board.size(); ++i) {\n                for (int j = 0; j < board.size(); ++j) {\n                    if (mark[i][j] && board[i][j] != 0) {\n                        \n                        ++marks; \n                        board[i][j] = 0; \n                    }\n                }\n            }\n            \n            // cout << marks << endl; \n            return marks > 0; \n        };\n        \n        \n        auto shift_col = [&](int col) -> void {\n            list<int> mem;\n            for (int i = board.size() - 1; i >= 0; --i) {\n                if (board[i][col] != 0) {\n                    mem.push_back(board[i][col]); \n                }\n            }\n            int j = board.size() - 1;\n            for (int i : mem) {\n                board[j][col] = i;\n                --j;\n            }\n            \n            for (int i = j; i >= 0; --i) {\n                board[i][col] = 0; \n            }\n            \n        };\n        \n        \n        while(true) {\n            if (!eliminate_candies()) {\n                return board; \n            }\n            \n            \n            \n            for (int i = 0; i < board[0].size(); ++i) {\n                shift_col(i);\n            }\n        }\n        \n        \n        \n    }\n    \n    \n    \n};","compare_result":"111111111111111111111111","title_slug":"candy-crush"}