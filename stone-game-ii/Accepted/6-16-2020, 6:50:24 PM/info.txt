{"id":354629568,"lang":"cpp","time":"1 year, 10 months","timestamp":1592347824,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/354629568/","is_pending":"Not Pending","title":"Stone Game II","memory":"7.3 MB","code":"class Solution {\npublic:\n    int stoneGameII(vector<int>& piles) {\n        vector<int> sufSums (piles.size()); \n        sufSums[piles.size() - 1] = piles.back(); \n        for (int i = piles.size() - 2; i >= 0; --i) {\n            sufSums[i] = piles[i] + sufSums[i + 1]; \n        }\n        \n        vector<vector<int> > dp (piles.size(), vector<int>(piles.size() + 1, -1)); \n        return helper(piles, 0, 1, sufSums, dp); \n    }\n    \n    \n    \n    int helper(vector<int>& piles, int i, int M, vector<int>& sufsums, vector<vector<int>>& dp) {\n        if (i >= piles.size()) {\n            return 0; \n        }\n        \n        if (2 * M + i >= piles.size()) {\n            return sufsums[i]; \n        }\n        \n        if (dp[i][M] != -1) {\n            return dp[i][M]; \n        }\n        int opp_scr = INT_MAX; \n        for (int X = 1; X <= 2 * M; ++X) {\n            int res = helper(piles, X + i, max(X, M), sufsums, dp); \n            opp_scr = min(res, opp_scr); \n        }\n        dp[i][M] = sufsums[i] - opp_scr; \n        return sufsums[i] - opp_scr; \n    }\n    \n    \n    \n};","compare_result":"111111111111111111111","title_slug":"stone-game-ii"}