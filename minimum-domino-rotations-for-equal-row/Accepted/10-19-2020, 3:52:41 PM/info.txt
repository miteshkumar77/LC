{"id":410758768,"lang":"cpp","time":"1 year, 6 months","timestamp":1603137161,"status_display":"Accepted","runtime":"1528 ms","url":"/submissions/detail/410758768/","is_pending":"Not Pending","title":"Minimum Domino Rotations For Equal Row","memory":"247.8 MB","code":"class Solution {\npublic:\n    int minDominoRotations(vector<int>& A, vector<int>& B) {\n        unordered_map<int,int> Act;\n        unordered_map<int,int> Bct;\n        unordered_map<int,int> DoubleCt;\n        for (int i = 0; i < A.size(); ++i) {\n            ++Act[A[i]];\n            ++Bct[B[i]];\n            if (A[i] == B[i]) {\n                ++DoubleCt[A[i]];\n            }\n            auto a = make_pair(A[i], 0);\n            auto b = make_pair(B[i], 0);\n            Act.insert(a);\n            Act.insert(b);\n            Bct.insert(a);\n            Bct.insert(b);\n            DoubleCt.insert(a);\n            DoubleCt.insert(b);\n        }\n        \n        \n        int ans = INT_MAX;\n        for (int i : A) {\n            if (Act[i] + Bct[i] - DoubleCt[i] == A.size()) {\n                ans = min(ans, min(Act[i], Bct[i]) - DoubleCt[i]);\n            } \n        }\n        ans = ans == INT_MAX?-1:ans;\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-domino-rotations-for-equal-row"}