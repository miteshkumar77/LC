{"id":382993138,"lang":"cpp","time":"1 year, 8 months","timestamp":1597804352,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/382993138/","is_pending":"Not Pending","title":"Maximum Subarray Sum with One Deletion","memory":"N/A","code":"class Solution {\npublic:\n    int maximumSum(vector<int>& arr) {\n        \n        if (arr.size() == 1) {\n            return arr[0]; \n        }\n        \n        \n        long long int max_rem = INT_MIN; \n        long long int max_nrem = arr[0]; \n        \n        long long int gmax = max(max_rem, max_nrem); \n        \n        for (int i = 1; i < arr.size(); ++i) {\n            max_rem = max(max_rem + arr[i], max_nrem); \n            max_nrem = max((unsigned long long)(max_nrem + arr[i]), (unsigned long long)arr[i]); \n            gmax = max(gmax, max(max_nrem, max_rem)); \n        }\n//         int max_rem = max(arr[0], arr[1]); \n        \n//         int max_nrem = max(arr[1], arr[0] + arr[1]); \n//         int gmax = max(max_rem, max_nrem); \n        \n        \n        \n//         for (int i = 2; i < arr.size(); ++i) {\n//             max_rem = max(max_rem + arr[i], max(max_nrem, arr[i]));\n//             max_nrem = max(max_nrem + arr[i], max_nrem); \n//             cout << max_rem << ' ' << max_nrem << endl; \n//             gmax = max(max_rem, max(gmax, max_nrem)); \n//         }\n        return gmax; \n    }\n};","compare_result":"11110011000001010001010000010000","title_slug":"maximum-subarray-sum-with-one-deletion"}