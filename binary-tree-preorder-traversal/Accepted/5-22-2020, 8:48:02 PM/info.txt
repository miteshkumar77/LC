{"id":343286821,"lang":"cpp","time":"1 year, 11 months","timestamp":1590194882,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/343286821/","is_pending":"Not Pending","title":"Binary Tree Preorder Traversal","memory":"12.6 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> preorderTraversal(TreeNode* root) {\n        \n        \n        if (!root) {\n            return vector<int>(); \n        }\n        stack<TreeNode*> stak; \n        vector<int> res; res.reserve(100000); \n        \n        stak.push(root); \n        \n        while(!stak.empty()) {\n            res.push_back(stak.top() -> val);\n            root = stak.top(); \n            stak.pop(); \n            if (root -> right) {\n                stak.push(root -> right); \n            }\n            \n            if (root -> left) {\n                stak.push(root -> left); \n            }\n        }\n        \n        return res; \n        \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-preorder-traversal"}