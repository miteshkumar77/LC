{"id":454068565,"lang":"cpp","time":"1 year, 2 months","timestamp":1612885857,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/454068565/","is_pending":"Not Pending","title":"Convert BST to Greater Tree","memory":"33.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    TreeNode* convertBST(TreeNode* root) {\n        TreeNode* head = root;\n        int prev = 0;\n        stack<TreeNode*> stk;\n        while(root || !stk.empty()) {\n            if (root) {\n                stk.push(root);\n                root = root -> right;\n            } else {\n                root = stk.top();\n                stk.pop();\n                prev += root->val;\n                root->val = prev;\n                root = root -> left;\n            }\n        }\n        return head;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"convert-bst-to-greater-tree"}