{"id":375039712,"lang":"cpp","time":"1 year, 8 months","timestamp":1596391635,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/375039712/","is_pending":"Not Pending","title":"Word Search II","memory":"N/A","code":"class Solution {\n    \n    \nprivate: \n    \n    \n    struct TN {\n        array<TN*, 26> letters; \n        bool isEnd; \n        \n        TN() {\n            fill(letters.begin(), letters.end(), nullptr); \n            isEnd = false; \n        }\n    }\n    \n    void insertWord(TN* head, string& word) {\n        for (char c : word) {\n            if (!(head -> letters)[c - 'a']) {\n                (head -> letters)[c - 'a'] = new TN(); \n            }\n            head = (head -> letters)[c - 'a']; \n        }\n        head -> isEnd = true; \n    }\n    \n    \n    \n    bool deleteWord(TN* head, string& word, int i) {\n        if (i == word.length()) {\n            bool isInt = false; \n            head -> isEnd = false; \n            for (int i = 0; i < 26; ++i) {\n                if ((head -> letters)[i]) {\n                    isInt = true;\n                    break;\n                }\n            }\n            \n            if (!isInt) {\n                delete head; \n                return true; \n            } else {\n                return false; \n            }\n            \n        } else {\n            bool res = deleteWord((head -> letters)[word[i] - 'a'], word, i + 1);\n            if (!res) {\n                return false; \n            } \n            \n            (head -> letters)[word[i] - 'a'] = nullptr; \n            bool isInt = false;\n            for (int i = 0; i < 26; ++i) {\n                if ((head -> letters)[i]) {\n                    isInt = true; \n                    break; \n                }\n            }\n            if (!isInt) {\n                delete head; \n                return true; \n            } else {\n                return false; \n            }\n        }\n    }\n    \n    \npublic:\n    vector<string> findWords(vector<vector<char>>& board, vector<string>& words) {\n        vector<vector<bool> > visited(board.size(), vector<bool>(board[0].size(), false)); \n    }\n    \n    void bt(vector<string>& ans, string& s, TN* head, vector<vector<bool>>& visited, vector<vector<char>>& board, TN* actHead) {\n        if (head -> isEnd) {\n            if (deleteWord(actHead, ))\n        }\n    }\n    \n    \n    \n};","compare_result":null,"title_slug":"word-search-ii"}