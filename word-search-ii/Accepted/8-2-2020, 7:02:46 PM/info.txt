{"id":375149282,"lang":"cpp","time":"1 year, 8 months","timestamp":1596409366,"status_display":"Accepted","runtime":"96 ms","url":"/submissions/detail/375149282/","is_pending":"Not Pending","title":"Word Search II","memory":"32.5 MB","code":"class Solution {\n    \n    \nprivate: \n    struct TN {\n        array<TN*, 26> letters; \n        bool isEnd;\n        bool explored; \n        TN() {\n            fill(letters.begin(), letters.end(), nullptr); \n            isEnd = false; \n            explored = false; \n        }\n    };\n    \n    \n    void insert(string& s, TN* head) {\n        for (char c : s) {\n            if (!(head -> letters)[c - 'a']) {\n                (head -> letters)[c - 'a'] = new TN(); \n            }\n            head = (head -> letters)[c - 'a']; \n        }\n        head -> isEnd = true; \n    }\n    \npublic:\n    \n    \n    vector<string> findWords(vector<vector<char>>& board, vector<string>& words) {\n        TN* const head = new TN(); \n        for (string word : words) {\n            insert(word, head); \n        }\n        int M = board.size(); \n        int N = board[0].size(); \n        \n        vector<vector<bool>> visited(M, vector<bool>(N, false)); \n        string box = \"\"; \n        vector<string> ans; \n        array<int, 5> dirs{0, 1, 0, -1, 0}; \n        \n        function<void(TN*,int,int)> bt = [&] (TN* cur, int i, int j) -> void {\n            if (i >= 0 && j >= 0 && i < M && j < N && !visited[i][j] && (cur -> letters)[board[i][j] - 'a']) {\n                visited[i][j] = true; \n                box += board[i][j]; \n                for (int x = 0; x < 4; ++x) {\n                    bt((cur -> letters)[board[i][j] - 'a'], i + dirs[x], j + dirs[x + 1]); \n                }\n                if ((cur -> letters[board[i][j] - 'a']) -> isEnd) {\n                    (cur -> letters[board[i][j] - 'a']) -> isEnd = false; \n                    ans.push_back(box); \n                }\n                box.pop_back(); \n                visited[i][j] = false; \n            } \n        };\n        \n        \n        for (int k = 0; k < M; ++k) {\n            for (int l = 0; l < N; ++l) {\n                bt(head, k, l); \n            }\n        }\n        \n        return ans; \n        \n        \n    }\n    \n    \n    \n};","compare_result":"111111111111111111111111111111111111","title_slug":"word-search-ii"}