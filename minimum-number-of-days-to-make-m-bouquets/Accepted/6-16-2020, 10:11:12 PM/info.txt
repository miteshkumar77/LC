{"id":354690696,"lang":"cpp","time":"1 year, 10 months","timestamp":1592359872,"status_display":"Accepted","runtime":"356 ms","url":"/submissions/detail/354690696/","is_pending":"Not Pending","title":"Minimum Number of Days to Make m Bouquets","memory":"63.5 MB","code":"class Solution {\npublic:\n    int minDays(vector<int>& bloomDay, int m, int k) {\n        \n        if (bloomDay.size() < m * k) {\n            return -1; \n        }\n        int L = *min_element(bloomDay.begin(), bloomDay.end()); \n        int R = *max_element(bloomDay.begin(), bloomDay.end()); \n        int ans = -1; \n        \n//         for (int i = L; i <= R; ++i) {\n//             cout << i << ' ' << checkt(bloomDay, i, m, k) << endl; \n            \n//         }\n        \n        while(L <= R) {\n            int mid = L + (R - L)/2; \n            if (checkt(bloomDay, mid, m, k)) {\n                ans = mid; \n                R = mid - 1; \n            } else {\n                L = mid + 1; \n            }\n        }\n        return ans; \n        \n    }\n    \n    \n    \n    bool checkt(vector<int>& bd, int t, int m, int k) {\n        int num_bcts = 0; \n        int num_flwrs = 0; \n        for (int i = 0; i < bd.size(); ++i) {\n            if (bd[i] <= t) {\n                ++num_flwrs; \n                if (num_flwrs == k) {\n                    num_flwrs = 0; \n                    ++num_bcts; \n                    if (num_bcts == m) {\n                        return true; \n                    }\n                }\n            } else {\n                num_flwrs = 0; \n            }\n        }\n        return false; \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-number-of-days-to-make-m-bouquets"}