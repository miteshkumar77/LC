{"id":421866872,"lang":"cpp","time":"1 year, 5 months","timestamp":1605758395,"status_display":"Accepted","runtime":"260 ms","url":"/submissions/detail/421866872/","is_pending":"Not Pending","title":"Maximal Network Rank","memory":"42.8 MB","code":"class Solution {\npublic:\n    int maximalNetworkRank(int n, vector<vector<int>>& edges) {\n        unordered_map<int, unordered_set<int>> graph;\n        for (int i = 0; i < n; ++i) {\n            graph.insert(make_pair(i, unordered_set<int>())); \n        }\n        \n        for (auto edge : edges) {\n            graph[edge[0]].insert(edge[1]);\n            graph[edge[1]].insert(edge[0]);\n        }\n        int ans = INT_MIN;\n        int tmp;\n        for (int i = 0; i < n; ++i) {\n            for (int j = i + 1; j < n; ++j) {\n                tmp = graph[i].size();\n                tmp += graph[j].size();\n                if (graph[i].find(j) != graph[i].end()) {\n                    tmp -= 1;\n                }\n                ans = max(ans, tmp);\n            }\n        }\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximal-network-rank"}