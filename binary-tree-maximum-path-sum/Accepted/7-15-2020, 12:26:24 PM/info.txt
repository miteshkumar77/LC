{"id":367016075,"lang":"cpp","time":"1 year, 9 months","timestamp":1594830384,"status_display":"Accepted","runtime":"96 ms","url":"/submissions/detail/367016075/","is_pending":"Not Pending","title":"Binary Tree Maximum Path Sum","memory":"28.6 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    typedef pair<int, int> pii; \n    int maxPathSum(TreeNode* root) {\n        int ans = INT_MIN; \n        helper(root, ans); \n        return ans; \n    }\n    \n    int helper(TreeNode* root, int& ans) {\n        if (!root) {\n            return 0; \n        }\n        \n        int lR = max(0, helper(root -> left, ans)); \n        int rR = max(0, helper(root -> right, ans)); \n        ans = max(ans, lR + rR + root -> val); \n        return max(lR, rR) + root -> val; \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-maximum-path-sum"}