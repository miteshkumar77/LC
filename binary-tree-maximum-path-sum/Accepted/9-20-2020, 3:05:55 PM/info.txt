{"id":398416819,"lang":"cpp","time":"1 year, 7 months","timestamp":1600628755,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/398416819/","is_pending":"Not Pending","title":"Binary Tree Maximum Path Sum","memory":"29.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int maxPathSum(TreeNode* root) {\n        int ans = INT_MIN; \n        function<int(TreeNode*)> helper = [&](TreeNode* r) -> int {\n            if (!r) {\n                return 0; \n            }    \n            \n            int rv = r -> val; \n            int sr = max(helper(r -> right), 0); \n            int sl = max(helper(r -> left), 0);\n            ans = max(ans, sr + sl + rv); \n            \n            \n            return max(sr, sl) + rv; \n            \n        };\n        helper(root);\n        return ans; \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-maximum-path-sum"}