{"id":345075215,"lang":"cpp","time":"1 year, 10 months","timestamp":1590521703,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/345075215/","is_pending":"Not Pending","title":"Binary Tree Maximum Path Sum","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int maxPathSum(TreeNode* root) {\n        int ans = INT_MIN;\n        helper(root, ans); \n        return ans; \n    }\n    \n    \n    int helper(TreeNode* root, int& ans) {\n        if (!root) {\n            return 0; \n        }\n        \n        int left = helper(root -> left, ans); \n        int right = helper(root -> right, ans); \n        \n        if (left + root -> val + right > ans) {\n            ans = left + root -> val + right; \n        }\n        \n        return max(left, right) + root -> val; \n    }\n};","compare_result":"111111011001101111111011111110011011100001100111101010100111111111101100011110111111101111111","title_slug":"binary-tree-maximum-path-sum"}