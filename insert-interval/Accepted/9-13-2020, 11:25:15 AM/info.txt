{"id":395122563,"lang":"cpp","time":"1 year, 7 months","timestamp":1600010715,"status_display":"Accepted","runtime":"32 ms","url":"/submissions/detail/395122563/","is_pending":"Not Pending","title":"Insert Interval","memory":"17.2 MB","code":"class Solution {\npublic:\n    vector<vector<int>> insert(vector<vector<int>>& intervals, vector<int>& newInterval) {\n        for (auto it = intervals.begin(); it != intervals.end(); ++it) {\n            if ((*it)[0] >= newInterval[0]) {\n                intervals.insert(it, newInterval); \n                break;\n            }\n            if (next(it) == intervals.end()) {\n                intervals.push_back(newInterval); \n                break;\n            }\n        }\n        \n        if (intervals.size() == 0) {\n            intervals.push_back(newInterval); \n        }\n\n        vector<vector<int>> ans{intervals[0]}; \n        \n        for (int i = 1; i < intervals.size(); ++i) {\n            if (intervals[i][0] <= ans.back()[1]) {\n                ans.back()[1] = max(ans.back()[1], intervals[i][1]); \n            } else {\n                ans.push_back(intervals[i]); \n            }\n        }\n        return ans; \n        \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"insert-interval"}