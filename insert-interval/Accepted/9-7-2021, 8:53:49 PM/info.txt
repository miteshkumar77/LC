{"id":551208852,"lang":"cpp","time":"7 months, 1 week","timestamp":1631062429,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/551208852/","is_pending":"Not Pending","title":"Insert Interval","memory":"17.1 MB","code":"class Solution {\npublic:\n    vector<vector<int>> insert(vector<vector<int>>& intervals, vector<int>& newInterval) {\n        int n = intervals.size();\n        int l = 0; int r = n-1;\n        int ans = n;\n        int mid;\n        while(l <= r) {\n            mid = r;\n            if (intervals[mid][0] >= newInterval[0]) {\n                ans = mid;\n                r = mid - 1;\n            } else {\n                l = mid + 1;\n            }\n        }\n        intervals.insert(intervals.begin() + ans, newInterval);\n        vector<vector<int>> ret; ret.reserve(n);\n        for (int i = 0; i <= n; ++i) {\n            if (ret.empty() || ret.back()[1] < intervals[i][0]) {\n                ret.push_back(intervals[i]);\n            } else {\n                ret.back()[1] = max(ret.back()[1], intervals[i][1]);\n            }\n        }\n        return ret;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"insert-interval"}