{"id":373324629,"lang":"cpp","time":"1 year, 8 months","timestamp":1596054845,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/373324629/","is_pending":"Not Pending","title":"Insert Interval","memory":"17.5 MB","code":"class Solution {\npublic:\n    vector<vector<int>> insert(vector<vector<int>>& intervals, vector<int>& newInterval) {\n        if (intervals.size() == 0) {\n            return vector<vector<int> >{newInterval};\n        }\n        vector<vector<int> > ans;\n        ans.reserve(intervals.size()); \n        bool added = false; \n        for (int i = 0; i <= intervals.size(); ++i) {\n            vector<int> nextInterval; \n            \n            if (i == intervals.size()) {\n                if (added) {\n                    break; \n                }\n                \n                nextInterval = newInterval; \n                added = true; \n            } else {\n                if (!added && newInterval[0] <= intervals[i][0]) {\n                    nextInterval = newInterval;\n                    --i; \n                    added = true; \n                } else {\n                    nextInterval = intervals[i]; \n                }\n            }\n            \n            if (ans.size() == 0) {\n                ans.push_back(nextInterval);\n            } else {\n                if (ans.back()[1] >= nextInterval[0]) {\n                    ans.back()[1] = max(ans.back()[1], nextInterval[1]); \n                } else {\n                    ans.push_back(nextInterval);\n                }\n            }\n        }\n        return ans; \n        \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"insert-interval"}