{"id":357445325,"lang":"cpp","time":"1 year, 9 months","timestamp":1592931764,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/357445325/","is_pending":"Not Pending","title":"Count Complete Tree Nodes","memory":"31.1 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int countNodes(TreeNode* root) {\n        TreeNode* head = root; \n        int height = 0; \n        while(head) {\n            ++height; \n            head = head -> left; \n        }\n        int h = height; \n        \n        unsigned long long int L = 0; \n        unsigned long long int R = pow(2, h - 1) - 1; \n        // cout << L << ' ' << R << endl; \n        unsigned long long int ans = L; \n        while(L <= R) {\n            unsigned long long int mid = L + (R - L)/2; \n            if (!checkP(root, height, mid)) {\n                ans = mid; \n                L = mid + 1; \n            } else {\n                R = mid - 1; \n            }\n        }\n        \n        unsigned long long int checkbit = pow(2, h - 2); \n        int result = 0; \n        for (int i = 0; i < h - 1; ++i) {\n            if ((checkbit & ans) != 0) {\n                ++result; \n            }\n        }\n        // cout << ans << endl; \n        \n        \n        unsigned long long int numToRight = pow(2, h - 1) - 1 - ans;\n        // cout << numToRight << endl; \n        return pow(2, h) - 1 - numToRight; \n         \n    }\n    \n    bool checkP(TreeNode* root, int h, unsigned long long int path) {\n        unsigned long long int checkbit = pow(2, h - 2); \n        for (int i = 0; i < h - 1; ++i) {\n            if ((checkbit & path) == 0) {\n                root = root -> left; \n            } else {\n                root = root -> right; \n            }\n            \n            if (!root) {\n                return true; \n            }\n            checkbit = checkbit >> 1; \n        }\n        return false; \n    }\n};","compare_result":"111111111111111111","title_slug":"count-complete-tree-nodes"}