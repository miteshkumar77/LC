{"id":533424578,"lang":"cpp","time":"8 months, 2 weeks","timestamp":1628118575,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/533424578/","is_pending":"Not Pending","title":"Path Sum II","memory":"24.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void calc(TreeNode* root,\n              vector<vector<int>>& ans,\n              unordered_map<int,unordered_set<int>>& st,\n              vector<int>& path, int sum, int target) {\n        if (!root) return;\n        path.push_back(root->val);\n        sum += root->val;\n        st[sum].insert(path.size());\n        calc(root->left, ans, st, path, sum, target);\n        calc(root->right, ans, st, path, sum, target);\n        if (!root->left && !root->right) {\n            \n            if (sum == target) {\n                ans.push_back(path);\n            }\n        }\n        st[sum].erase(path.size());\n        path.pop_back();\n    }\n    vector<vector<int>> pathSum(TreeNode* root, int targetSum) {\n        vector<vector<int>> ans;\n        vector<int> path;\n        unordered_map<int, unordered_set<int>> st;\n        st[0].insert(0);\n        calc(root, ans, st, path, 0, targetSum);\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"path-sum-ii"}