{"id":360465940,"lang":"cpp","time":"1 year, 9 months","timestamp":1593567249,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/360465940/","is_pending":"Not Pending","title":"Path Sum II","memory":"20 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>> pathSum(TreeNode* root, int sum) {\n        vector<vector<int> > ans;\n        vector<int> path; \n        helper(root, ans, path, 0, sum); \n        return ans; \n    }\n    \n    \n    void helper(TreeNode* root, vector<vector<int> >& ans, vector<int>& path, int acc, int& sum) {\n        if (!root) {\n            return; \n        }\n        \n        path.push_back(root -> val); \n        int next = acc + root -> val; \n        if (!root -> left && !root -> right && next == sum) {\n            ans.push_back(path); \n        }\n        \n        \n        helper(root -> left, ans, path, next, sum); \n        helper(root -> right, ans, path, next, sum); \n        path.pop_back(); \n        \n        \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"path-sum-ii"}