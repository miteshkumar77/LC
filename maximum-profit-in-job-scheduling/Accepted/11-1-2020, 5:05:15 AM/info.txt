{"id":415540782,"lang":"cpp","time":"1 year, 5 months","timestamp":1604225115,"status_display":"Accepted","runtime":"276 ms","url":"/submissions/detail/415540782/","is_pending":"Not Pending","title":"Maximum Profit in Job Scheduling","memory":"59.5 MB","code":"class Solution {\npublic:\n    int jobScheduling(vector<int>& startTime, vector<int>& endTime, vector<int>& profit) {\n        vector<vector<int>> is;\n        int n = startTime.size();\n        for (int i = 0; i < n; ++i) {\n            is.push_back(vector<int>{startTime[i], endTime[i], profit[i]});\n        }\n        \n        sort(is.begin(), is.end(), [](vector<int>& a, vector<int>& b) -> bool {\n            return a[1] <= b[1];\n        });\n        \n        // for (auto v : is) cout << v[0] << ' ' << v[1] << ' ' << v[2] << endl;\n        // cout << endl;\n        vector<int> dp(n);\n        int prev = 0;\n        for (int i = 0; i < n; ++i) {\n            int l = 0;\n            int r = i - 1;\n            int last = -1;\n            while(l <= r) {\n                int mid = l + (r - l)/2;\n                if (is[mid][1] > is[i][0]) {\n                    r = mid - 1;\n                } else {\n                    last = mid;\n                    l = mid + 1;\n                }\n            }\n            // cout << last << endl;\n            last = last == -1?0:dp[last];\n            dp[i] = max(prev, last + is[i][2]);\n            prev = dp[i];\n        }\n        \n        // for (int i : dp) cout << i << ' ';\n        return prev;\n    }\n};","compare_result":"111111111111111111111111111","title_slug":"maximum-profit-in-job-scheduling"}