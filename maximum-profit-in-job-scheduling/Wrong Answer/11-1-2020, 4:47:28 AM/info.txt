{"id":415537775,"lang":"cpp","time":"1 year, 5 months","timestamp":1604224048,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/415537775/","is_pending":"Not Pending","title":"Maximum Profit in Job Scheduling","memory":"N/A","code":"class Solution {\npublic:\n    int jobScheduling(vector<int>& startTime, vector<int>& endTime, vector<int>& profit) {\n        vector<vector<int>> is;\n        int n = startTime.size();\n        for (int i = 0; i < n; ++i) {\n            is.push_back(vector<int>{startTime[i], endTime[i], profit[i]});\n        }\n        \n        sort(is.begin(), is.end(), [](vector<int>& a, vector<int>& b) -> bool {\n            return a[1] < b[1];\n        });\n        \n        \n        vector<int> dp(n);\n        dp[0] = profit[0];\n        for (int i = 1; i < n; ++i) {\n            dp[i] = dp[i - 1];\n            int l = 0;\n            int r = i - 1;\n            int last = -1;\n            while(l <= r) {\n                int mid = l + (r - l)/2;\n                if (is[mid][1] > is[i][0]) {\n                    r = mid - 1;\n                } else {\n                    last = mid;\n                    l = mid + 1;\n                }\n            }\n            \n            if (last != -1) {\n                dp[i] = max(dp[i], dp[last] + profit[i]);\n            }\n        }\n        return dp.back();\n    }\n};","compare_result":"100001000000000000000000000","title_slug":"maximum-profit-in-job-scheduling"}