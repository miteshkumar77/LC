{"id":392984347,"lang":"cpp","time":"1 year, 7 months","timestamp":1599602078,"status_display":"Accepted","runtime":"144 ms","url":"/submissions/detail/392984347/","is_pending":"Not Pending","title":"Degree of an Array","memory":"33.7 MB","code":"class Solution {\npublic:\n    int findShortestSubArray(vector<int>& nums) {\n        unordered_map<int,int> ct; \n        unordered_map<int,int> first; \n        unordered_map<int,int> last; \n        int maxf = 0; \n        int idx = 0; \n        for (int i : nums) {\n            ++ct[i]; \n            if (ct[i] > maxf) {\n                maxf = ct[i]; \n            }\n            first.insert(make_pair(i, idx)); \n            last[i] = idx; \n            ++idx; \n        }\n        \n        int ans = INT_MAX; \n        for (auto [key, value] : ct) {\n            if (value == maxf) {\n                ans = min(ans, last[key] - first[key] + 1); \n            }\n        }\n        return ans; \n        \n        \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"degree-of-an-array"}