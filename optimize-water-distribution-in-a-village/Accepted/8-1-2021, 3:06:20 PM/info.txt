{"id":531723638,"lang":"cpp","time":"8 months, 2 weeks","timestamp":1627844780,"status_display":"Accepted","runtime":"156 ms","url":"/submissions/detail/531723638/","is_pending":"Not Pending","title":"Optimize Water Distribution in a Village","memory":"45 MB","code":"class Solution {\npublic:\n    int minCostToSupplyWater(int n, vector<int>& wells, vector<vector<int>>& pipes) {\n        vector<vector<int>> edges;\n        for (int i = 0; i < n; ++i) {\n            edges.push_back({wells[i], i, n});\n        }\n        for (int i = 0; i < pipes.size(); ++i) {\n            pipes[i][0]--;\n            pipes[i][1]--;\n            edges.push_back({pipes[i][2], pipes[i][1], pipes[i][0]});\n        }\n        vector<int> parent(n + 1, -1);\n        \n        function<int(int)> find = [&](int node) -> int {\n            if (parent[node] == -1) return node;\n            parent[node] = find(parent[node]);\n            return parent[node];\n        };\n        \n        function<bool(int,int)> onion = [&](int a, int b) -> int {\n            int pa = find(a); int pb = find(b);\n            if (pa == pb) return true;\n            parent[pa] = pb;\n            return false;\n        };\n        sort(edges.begin(), edges.end(), [](vector<int> const & a, vector<int> const& b) {\n            return a[0] < b[0];\n        });\n        \n        \n        int ans = 0;\n        for (auto const& e : edges) {\n            if (!onion(e[1], e[2])) {\n                ans += e[0];\n            }\n        }\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111","title_slug":"optimize-water-distribution-in-a-village"}