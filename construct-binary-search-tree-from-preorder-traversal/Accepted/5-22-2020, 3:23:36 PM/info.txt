{"id":343186720,"lang":"cpp","time":"1 year, 11 months","timestamp":1590175416,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/343186720/","is_pending":"Not Pending","title":"Construct Binary Search Tree from Preorder Traversal","memory":"9.2 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* bstFromPreorder(vector<int>& preorder) {\n        if (preorder.size() == 0) {\n            return nullptr; \n        }\n        \n        TreeNode* root = new TreeNode(preorder[0]); \n        helper(root, nullptr, preorder, 1); \n        return root; \n    }\n    \n    int helper(TreeNode* root, TreeNode* max, vector<int>& preorder, int i) {\n        if (i >= preorder.size()) {\n            return -1; \n        }\n        \n        if (preorder[i] < root -> val) {\n            root -> left = new TreeNode(preorder[i]); \n            int res = helper(root -> left, root, preorder, i + 1); \n            if (res != -1) {\n                return helper(root, max, preorder, res); \n            } else {\n                return res; \n            }\n        } else if (preorder[i] > root -> val && (!max || max -> val > preorder[i])) {\n            root -> right = new TreeNode(preorder[i]); \n            return helper(root -> right, max, preorder, i + 1); \n        } else {\n            return i; \n        }\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"construct-binary-search-tree-from-preorder-traversal"}