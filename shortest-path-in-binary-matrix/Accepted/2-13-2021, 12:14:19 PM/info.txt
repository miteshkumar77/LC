{"id":455573896,"lang":"cpp","time":"1 year, 2 months","timestamp":1613236459,"status_display":"Accepted","runtime":"120 ms","url":"/submissions/detail/455573896/","is_pending":"Not Pending","title":"Shortest Path in Binary Matrix","memory":"38.9 MB","code":"class Solution {\npublic:\n    int shortestPathBinaryMatrix(vector<vector<int>>& grid) {\n        int n = grid.size();\n        int m = grid[0].size(); \n        array<int, 8> dx{0, 0, 1, 1, 1, -1, -1, -1};\n        array<int, 8> dy{-1, 1, -1, 0, 1, -1, 0, 1}; \n        queue<array<int, 3>> bfsq;\n        bfsq.push({0, 0, 1});\n        \n        while(!bfsq.empty()) {\n            auto a = bfsq.front();\n            bfsq.pop();\n            if (a[0] >= n || a[0] < 0 || a[1] >= m || a[1] < 0 || grid[a[0]][a[1]] != 0) {\n                continue;\n            }\n            if (a[0] == n - 1 && a[1] == m - 1) return a[2];\n            grid[a[0]][a[1]] = 1; \n            for (int i = 0; i < 8; ++i) {\n                bfsq.push({a[0] + dx[i], a[1] + dy[i], a[2] + 1});\n            }\n        }\n        return -1; \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"shortest-path-in-binary-matrix"}