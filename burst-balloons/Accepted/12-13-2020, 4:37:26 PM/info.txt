{"id":430331658,"lang":"cpp","time":"1 year, 4 months","timestamp":1607895446,"status_display":"Accepted","runtime":"132 ms","url":"/submissions/detail/430331658/","is_pending":"Not Pending","title":"Burst Balloons","memory":"9.3 MB","code":"class Solution {\npublic:\n    int maxCoins(vector<int>& nums) {\n        \n        nums.insert(nums.begin(), 1);\n        nums.push_back(1);\n        vector<vector<int> > dp(nums.size(), vector<int>(nums.size(), -1)); \n\n        function<int(int, int)> merge = [&] (int L, int R) -> int {\n            \n            if (L > R) {\n                return 0; \n            }\n            if (dp[L][R] != -1) return dp[L][R]; \n            int ans = 0; \n            for (int i = L; i <= R; ++i) {\n                ans = max(ans, merge(L, i - 1) + merge(i + 1, R) + nums[L - 1] * nums[i] * nums[R + 1]);\n            }\n            dp[L][R] = ans; \n            return ans; \n        };\n        \n        \n        return merge(1, nums.size() - 2);\n    }\n    \n    \n    \n    \n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"burst-balloons"}