{"id":377979871,"lang":"cpp","time":"1 year, 8 months","timestamp":1596908292,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/377979871/","is_pending":"Not Pending","title":"Closest Binary Search Tree Value","memory":"21.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\n\n    double ans; \n    bool set = false; \npublic:\n    int closestValue(TreeNode* root, double target) {\n        if (!root) {\n            return -1; \n        }\n        if (!set || abs(target - root -> val) < abs(target - ans)) {\n            ans = root -> val; \n            set = true; \n        }\n        \n        closestValue(root -> left, target); \n        closestValue(root -> right, target); \n        return ans; \n        \n        \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111","title_slug":"closest-binary-search-tree-value"}