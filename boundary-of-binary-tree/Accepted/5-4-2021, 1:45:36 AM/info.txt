{"id":488616703,"lang":"cpp","time":"11 months, 2 weeks","timestamp":1620107136,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/488616703/","is_pending":"Not Pending","title":"Boundary of Binary Tree","memory":"21.6 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> lefts;\n    vector<int> boundaryOfBinaryTree(TreeNode* root) {\n        lefts.reserve(1000);\n        dfs(root, true, true, true);\n        return lefts;\n    }\n    \n    void dfs(TreeNode* root, bool isRoot, bool left, bool right) {\n        if (!root) return;\n        if (isRoot) {\n            lefts.push_back(root->val);\n        }\n        if (!isRoot && !root->left && !root->right) {\n            lefts.push_back(root->val);\n            return;\n        }\n        if (isRoot && !root->left) left = false;\n        if (isRoot && !root->right) right = false;\n        if (!isRoot) {\n            if (left) {\n                lefts.push_back(root->val);\n            } \n        }\n        dfs(root -> left, false, left, root -> right ? false : right);\n        dfs(root -> right, false, root -> left ? false : left, right);\n        if (!isRoot) {\n            if (!left && right) {\n                lefts.push_back(root->val);\n            }\n        }\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"boundary-of-binary-tree"}