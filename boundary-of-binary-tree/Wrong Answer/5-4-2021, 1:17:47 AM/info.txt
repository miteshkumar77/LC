{"id":488606484,"lang":"cpp","time":"11 months, 2 weeks","timestamp":1620105467,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/488606484/","is_pending":"Not Pending","title":"Boundary of Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> ans;\n    vector<int> boundaryOfBinaryTree(TreeNode* root) {\n        dfs(root, true, true);\n        return ans;\n    }\n    \n    void dfs(TreeNode* root, bool left, bool right) {\n        if (!root) return;\n        if (left) ans.push_back(root->val);\n        if (!(root -> left || root -> right)) {\n            if (!(left || right)) ans.push_back(root -> val);\n        }\n        dfs(root -> left, left, false);\n        dfs(root -> right, false, right);\n        if (left) return;\n        if (right) ans.push_back(root -> val);\n    }\n};","compare_result":"10111111110111111111111111010010111111111111011001011000011000010011010010110011111111111101101001010101100111101011","title_slug":"boundary-of-binary-tree"}