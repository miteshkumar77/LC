{"id":440035630,"lang":"cpp","time":"1 year, 3 months","timestamp":1610067448,"status_display":"Accepted","runtime":"192 ms","url":"/submissions/detail/440035630/","is_pending":"Not Pending","title":"Find Two Non-overlapping Sub-arrays Each With Target Sum","memory":"74.6 MB","code":"class Solution {\npublic:\n    int minSumOfLengths(vector<int>& arr, int T) {\n        int n = arr.size();\n        vector<int> dp(n, INT_MAX);\n        int ans = INT_MAX;\n        int sum = 0;\n        int j = 0;\n        for (int i = 0; i < n; ++i) {\n            sum += arr[i];\n            while(sum > T) {\n                sum -= arr[j++];\n            }\n            if (sum == T) {\n                dp[i] = min(i==0?INT_MAX:dp[i - 1], i - j + 1);\n                if (j != 0 && dp[j - 1] != INT_MAX) {\n                    ans = min(ans, i - j + 1 + dp[j - 1]); \n                }\n            } else {\n                dp[i] = i==0?INT_MAX:dp[i - 1];\n            }\n        }\n        // for (int i : dp) cout << i << ' ';\n        // cout << endl;\n        return ans==INT_MAX?-1:ans;\n        \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111","title_slug":"find-two-non-overlapping-sub-arrays-each-with-target-sum"}