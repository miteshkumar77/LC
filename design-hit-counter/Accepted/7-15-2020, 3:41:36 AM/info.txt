{"id":366864612,"lang":"cpp","time":"1 year, 9 months","timestamp":1594798896,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/366864612/","is_pending":"Not Pending","title":"Design Hit Counter","memory":"7.4 MB","code":"class HitCounter {\npublic:\n    /** Initialize your data structure here. */\n    HitCounter() {\n        \n    }\n    \n    /** Record a hit.\n        @param timestamp - The current timestamp (in seconds granularity). */\n    void hit(int timestamp) {\n        ++hit_ct; \n        if (q.size() != 0 && q.front().first == timestamp) {\n            ++(q.begin() -> second); \n        } else {\n            q.push_front(make_pair(timestamp, 1)); \n        }\n        while(q.size() != 0 && timestamp - 299 > q.back().first) {\n            hit_ct -= q.back().second; \n            q.pop_back(); \n        }\n    }\n    \n    /** Return the number of hits in the past 5 minutes.\n        @param timestamp - The current timestamp (in seconds granularity). */\n    int getHits(int timestamp) {\n        while(q.size() != 0 && timestamp - 299 > q.back().first) {\n            hit_ct -= q.back().second; \n            q.pop_back(); \n        }\n        return hit_ct; \n    }\nprivate: \n    list<pair<int, int>> q; \n    int n = 300;\n    int top_timestamp = 1; \n    int hit_ct = 0; \n};\n\n/**\n * Your HitCounter object will be instantiated and called as such:\n * HitCounter* obj = new HitCounter();\n * obj->hit(timestamp);\n * int param_2 = obj->getHits(timestamp);\n */","compare_result":"111111111111111111111111","title_slug":"design-hit-counter"}