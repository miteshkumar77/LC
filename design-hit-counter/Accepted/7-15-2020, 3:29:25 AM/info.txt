{"id":366860276,"lang":"cpp","time":"1 year, 9 months","timestamp":1594798165,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/366860276/","is_pending":"Not Pending","title":"Design Hit Counter","memory":"8.9 MB","code":"class HitCounter {\npublic:\n    /** Initialize your data structure here. */\n    HitCounter() {\n        for (int i = 0; i < n; ++i) {\n            q.push_back(0); \n        }\n    }\n    \n    /** Record a hit.\n        @param timestamp - The current timestamp (in seconds granularity). */\n    void hit(int timestamp) {\n        if (timestamp == top_timestamp) {\n            (*q.begin())++; \n            hit_ct++; \n        } else {\n            for (int i = top_timestamp; i < min(timestamp, top_timestamp + 301) - 1; ++i) {\n                q.push_front(0); \n                hit_ct -= q.back(); \n                q.pop_back(); \n            }\n            q.push_front(1); \n            hit_ct -= q.back(); ++hit_ct; \n            q.pop_back(); \n            top_timestamp = timestamp; \n        }\n    }\n    \n    /** Return the number of hits in the past 5 minutes.\n        @param timestamp - The current timestamp (in seconds granularity). */\n    int getHits(int timestamp) {\n        for (int i = top_timestamp; i < min(timestamp, top_timestamp + 301); ++i) {\n            \n            q.push_front(0); \n            hit_ct -= q.back(); \n            q.pop_back(); \n        }\n        top_timestamp = timestamp; \n        return hit_ct; \n    }\nprivate: \n    list<int> q; \n    int n = 300;\n    int top_timestamp = 1; \n    int hit_ct = 0; \n};\n\n/**\n * Your HitCounter object will be instantiated and called as such:\n * HitCounter* obj = new HitCounter();\n * obj->hit(timestamp);\n * int param_2 = obj->getHits(timestamp);\n */","compare_result":"111111111111111111111111","title_slug":"design-hit-counter"}