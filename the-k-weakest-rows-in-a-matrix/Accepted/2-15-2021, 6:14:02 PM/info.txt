{"id":456523526,"lang":"cpp","time":"1 year, 2 months","timestamp":1613430842,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/456523526/","is_pending":"Not Pending","title":"The K Weakest Rows in a Matrix","memory":"10.5 MB","code":"class Solution {\npublic:\n    int cal(vector<int>& value, vector<vector<int>>& mat, int rho) {\n        if (value[rho] == -1) {\n            int l = 0;\n            int r = mat[0].size() - 1;\n            int mid;\n            int ans = r + 1;\n            while(l <= r) {\n                mid = l + (r - l)/2;\n                if (mat[rho][mid]) {\n                    l = mid + 1;\n                } else {\n                    ans = mid;\n                    r = mid - 1;\n                }\n            }\n            value[rho] = ans;\n        }\n        return value[rho]; \n    }\n    vector<int> kWeakestRows(vector<vector<int>>& mat, int k) {\n        int n = mat.size(); \n        vector<int> value(n, -1); \n        vector<int> subarr(n);\n        for (int i = 0; i < n; ++i) {\n            subarr[i] = i;\n        }\n        sort(subarr.begin(), subarr.end(), [&](int a, int b) -> bool {\n            return cal(value, mat, a) < cal(value, mat, b) ||\n                (cal(value, mat, a) == cal(value, mat, b) && a < b);  \n        }); \n        return vector<int>(subarr.begin(), subarr.begin() + k); \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"the-k-weakest-rows-in-a-matrix"}