{"id":345158995,"lang":"cpp","time":"1 year, 10 months","timestamp":1590537215,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/345158995/","is_pending":"Not Pending","title":"Kth Smallest Element in a BST","memory":"24.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int kthSmallest(TreeNode* root, int k) {\n        int smack = k; \n        int ans = -1; \n        kth(root, smack, ans); \n        return ans; \n    }\n    \n    void kth(TreeNode* root, int& k, int& ans) {\n        if (!root) {\n            return; \n        }\n        \n        kth(root -> left, k, ans); \n        --k; \n        if (k == 0) {\n            ans = root -> val; \n            return; \n        }\n        kth(root -> right, k, ans); \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"kth-smallest-element-in-a-bst"}