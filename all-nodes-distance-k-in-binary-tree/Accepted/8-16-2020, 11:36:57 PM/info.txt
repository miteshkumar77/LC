{"id":382029224,"lang":"cpp","time":"1 year, 8 months","timestamp":1597635417,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/382029224/","is_pending":"Not Pending","title":"All Nodes Distance K in Binary Tree","memory":"12.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> distanceK(TreeNode* root, TreeNode* target, int K) {\n        \n        vector<int> ans; \n        \n        \n        function<void(TreeNode*,int)> helper = [&] (TreeNode* r, int depth) -> void {\n            \n            if (!r) {\n                return; \n            }\n            \n            \n            \n            if (depth == 0) {\n                ans.push_back(r -> val); \n                return; \n            }\n            helper(r->left, depth - 1); helper(r -> right, depth - 1); \n        };\n        \n        \n        function<int(TreeNode*)> solver = [&] (TreeNode* r) -> int {\n            if (!r) {\n                return -1; \n            }\n            \n            if (r == target) {\n                helper(r, K); \n                return K - 1; \n            }\n            \n            int lr = solver(r -> left); \n            int rr = solver(r -> right); \n            \n            if (lr >= 0) {\n                if (lr == 0) {\n                    ans.push_back(r -> val); \n                    return -1; \n                } else {\n                    helper(r -> right, lr - 1); \n                    return lr - 1; \n                }\n            }\n            \n            if (rr >= 0) {\n                if (rr == 0) {\n                    ans.push_back(r -> val); \n                    return -1; \n                } else {\n                    helper(r -> left, rr - 1); \n                    return rr - 1; \n                }\n            }\n            return -1; \n        };\n        \n        solver(root); \n        return ans; \n    }\n    \n    \n    \n};","compare_result":"111111111111111111111111111111111111111111111111111111111","title_slug":"all-nodes-distance-k-in-binary-tree"}