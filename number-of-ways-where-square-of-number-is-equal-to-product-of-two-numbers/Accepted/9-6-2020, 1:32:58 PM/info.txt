{"id":391910165,"lang":"cpp","time":"1 year, 7 months","timestamp":1599413578,"status_display":"Accepted","runtime":"284 ms","url":"/submissions/detail/391910165/","is_pending":"Not Pending","title":"Number of Ways Where Square of Number Is Equal to Product of Two Numbers","memory":"11.6 MB","code":"class Solution {\npublic:\n    typedef unsigned long long int lli; \n    int numTriplets(vector<int>& nums1, vector<int>& nums2) {\n        unordered_map<lli,int> n1;\n        unordered_map<lli,int> n2; \n        for (int i : nums1) {\n            ++n1[((lli)i) * i];\n        }\n        for (int i : nums2) {\n            ++n2[((lli)i)*i]; \n            \n        }\n        int ans = 0; \n        for (int i = 0; i < nums1.size(); ++i) {\n            for (int j = i + 1; j < nums1.size(); ++j) {\n                if (n2.find((((lli)nums1[i]) * nums1[j])) != n2.end()) {\n                    ans += n2[((lli)nums1[i]) * nums1[j]];  \n                }\n            }\n        }\n        \n        for (int i = 0; i < nums2.size(); ++i) {\n            for (int j = i + 1; j < nums2.size(); ++j) {\n                if (n1.find((((lli)nums2[i]) * nums2[j])) != n1.end()) {\n                    ans += n1[((lli)nums2[i]) * nums2[j]];\n                }\n            }\n        }\n        \n        return ans; \n        \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"number-of-ways-where-square-of-number-is-equal-to-product-of-two-numbers"}