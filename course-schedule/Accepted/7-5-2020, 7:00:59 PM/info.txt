{"id":362648821,"lang":"cpp","time":"1 year, 9 months","timestamp":1593990059,"status_display":"Accepted","runtime":"52 ms","url":"/submissions/detail/362648821/","is_pending":"Not Pending","title":"Course Schedule","memory":"14.1 MB","code":"class Solution {\npublic:\n    bool canFinish(int numCourses, vector<vector<int>>& prerequisites) {\n        vector<vector<int> > graph(numCourses, vector<int>()); \n        for (int i = 0; i < prerequisites.size(); ++i) {\n            graph[prerequisites[i][0]].push_back(prerequisites[i][1]); \n        }\n        vector<bool> pre(numCourses, false); vector<bool> post(numCourses, false); \n        for (int i = 0; i < numCourses; ++i) {\n            if (dfs(graph, i, pre, post)) {\n                return false; \n            }\n        }\n        return true; \n        \n        \n    }\n    \n    \n    bool dfs(vector<vector<int> >& graph, int node, vector<bool>& pre, vector<bool>& post) {\n        if (pre[node] && post[node]) {\n            return false; \n        }\n        \n        if (pre[node] && !post[node]) {\n            return true; \n        }\n        pre[node] = true; \n        for (int neighbor : graph[node]) {\n            if (dfs(graph, neighbor, pre, post)) {\n                return true; \n            }\n        }\n        post[node] = true; \n        return false; \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111","title_slug":"course-schedule"}