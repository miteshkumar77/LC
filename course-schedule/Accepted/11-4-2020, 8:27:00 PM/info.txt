{"id":416889708,"lang":"cpp","time":"1 year, 5 months","timestamp":1604539620,"status_display":"Accepted","runtime":"52 ms","url":"/submissions/detail/416889708/","is_pending":"Not Pending","title":"Course Schedule","memory":"18.5 MB","code":"class Solution {\npublic:\n    bool canFinish(int n, vector<vector<int>>& edges) {\n        \n        unordered_map<int, unordered_set<int>> graph;\n        \n        for (auto e : edges) {\n            graph[e[0]].insert(e[1]);\n        }\n        \n        vector<int> dp(n, 0);\n        \n        int finishable = 0;\n        \n        function<bool(int)> dfs = [&](int node) -> bool {\n            if (dp[node] != 0) {\n                return dp[node] == 1;\n            }\n            \n            bool canFinish = true;\n            dp[node] = -1;\n            for (int neighbor : graph[node]) {\n                if (!dfs(neighbor)) {\n                    canFinish = false;\n                }\n            }\n            if (canFinish) {\n                dp[node] = 1;\n            } else {\n                dp[node] = -1;\n            }\n            return canFinish;\n        };\n        \n        for (int i = 0; i < n; ++i) {\n            if (!dfs(i)) {\n                return false;\n            }\n        }\n        return true;\n        \n        \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111","title_slug":"course-schedule"}