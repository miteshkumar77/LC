{"id":442142023,"lang":"cpp","time":"1 year, 3 months","timestamp":1610479731,"status_display":"Accepted","runtime":"24 ms","url":"/submissions/detail/442142023/","is_pending":"Not Pending","title":"Add Two Numbers","memory":"70.5 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {\n        int carry = 0;\n        ListNode* head = nullptr;\n        ListNode* curr = nullptr;\n        while(l1 || l2) {\n            if (!l2) {\n                if (curr) {\n                    curr -> next = l1;\n                } else {\n                    head = l1;\n                }\n                curr = l1;\n                l1 = l1 -> next;\n            } else if (!l1) {\n                if (curr) {\n                    curr -> next = l2;\n                } else {\n                    head = l2;\n                }\n                curr = l2;\n                l2 = l2 -> next;\n            } else {\n                if (curr) {\n                    curr -> next = l1;\n                } else {\n                    head = l1;\n                }\n                curr = l1;\n                l1 -> val += l2 -> val;\n                l1 = l1 -> next;\n                l2 = l2 -> next;\n            }\n            curr -> val += carry;\n            carry = curr -> val / 10;\n            curr -> val %= 10;\n            curr -> next = nullptr;\n        }\n        if (carry) {\n            curr -> next = new ListNode(carry);\n        }\n        return head;\n    }\n};","compare_resulttitle_slug":"add-two-numbers"}