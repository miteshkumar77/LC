{"id":375433984,"lang":"cpp","time":"1 year, 8 months","timestamp":1596465192,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/375433984/","is_pending":"Not Pending","title":"Remove Duplicates from Sorted List","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* deleteDuplicates(ListNode* head) {\n        ListNode* cur = head; \n        while(cur -> next) {\n            if (cur -> val == cur -> next -> val) {\n                ListNode* tmp = cur -> next -> next;\n                cur -> next -> next = nullptr; \n                delete cur -> next; \n                cur -> next = tmp; \n                \n            } else {\n                cur = cur -> next; \n            }\n        }\n        return head; \n    }\n};","compare_result":"110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"remove-duplicates-from-sorted-list"}