{"id":366597937,"lang":"cpp","time":"1 year, 9 months","timestamp":1594750518,"status_display":"Accepted","runtime":"376 ms","url":"/submissions/detail/366597937/","is_pending":"Not Pending","title":"Word Ladder","memory":"13.9 MB","code":"class Solution {\npublic:\n    int ladderLength(string beginWord, string endWord, vector<string>& wordList) {\n        unordered_map<string, int> dist; \n        for (string w : wordList) {\n            dist[w] = -1; \n        }\n        \n        \n        queue<string> q; \n        q.push(beginWord); \n        dist[beginWord] = 1; \n        \n        while(!q.empty()) {\n            string top = q.front(); q.pop(); \n            \n            for (int i = 0; i < top.size(); ++i) {\n                for (int j = 0; j < 26; ++j) {\n                    char c = 'a' + j; \n                    string next = top;  \n                    next[i] = c; \n                    if (dist.find(next) != dist.end() && dist[next] == -1) {\n                        dist[next] = 1 + dist[top]; \n                        q.push(next); \n                        if (next == endWord) {\n                            return dist[next]; \n                        }\n                    }\n                }\n            }\n        }\n        return 0; \n        \n        \n    }\n};","compare_result":"1111111111111111111111111111111111111111111","title_slug":"word-ladder"}