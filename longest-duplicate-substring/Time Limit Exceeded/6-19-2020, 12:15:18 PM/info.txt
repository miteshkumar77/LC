{"id":355792547,"lang":"cpp","time":"1 year, 10 months","timestamp":1592583318,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/355792547/","is_pending":"Not Pending","title":"Longest Duplicate Substring","memory":"N/A","code":"class Solution {\npublic:\n    string longestDupSubstring(string S) {\n        int L = 0; \n        int R = S.length() - 1;\n        string ans = \"\"; \n        // cout << test(1, S).second << endl; \n        while(L <= R) {\n            int mid = L + (R - L)/2; \n            pair<bool, string> r = test(mid, S); \n             \n            if (r.first) {\n                ans = r.second; \n                L = mid + 1; \n            } else {\n                R = mid - 1; \n            }\n        }\n        return ans; \n    }\n    \n    pair<bool, string> test(int L, string& S) {\n        // cout << L << endl; \n        unordered_set<string> us; \n        string s = \"\"; \n        for (int i = 0; i < L; ++i) {\n            s += S[i]; \n        }\n        us.insert(s); \n        for (int i = L; i < S.length(); ++i) {\n            // cout << s << endl; \n           \n            s += S[i]; \n            s = s.substr(1); \n            if (us.find(s) != us.end()) {\n                return make_pair(true, s);  \n            }\n            us.insert(s); \n        }\n        return make_pair(false, \"\"); \n    }\n};","compare_result":"1111100000000000","title_slug":"longest-duplicate-substring"}