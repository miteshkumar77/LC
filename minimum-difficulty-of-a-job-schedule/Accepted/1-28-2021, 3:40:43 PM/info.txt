{"id":449077113,"lang":"cpp","time":"1 year, 2 months","timestamp":1611866443,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/449077113/","is_pending":"Not Pending","title":"Minimum Difficulty of a Job Schedule","memory":"7.7 MB","code":"class Solution {\npublic:\n    \n    int sol(int day, int end, vector<vector<int>>& dp, vector<int>& jobs) {\n        \n        if (dp[day][end] != -1) return dp[day][end];\n        \n        if (day == 0) {\n            dp[day][end] = *max_element(jobs.begin(), jobs.begin() + end + 1); \n            return dp[day][end];\n        }\n        int mval = 0;\n        int ans = INT_MAX;\n        for (int i = end; i >= day; --i) {\n            mval = max(mval, jobs[i]);\n            ans = min(ans, mval + sol(day - 1, i - 1, dp, jobs));\n        }\n        dp[day][end] = ans;\n        return ans;\n    }\n    \n    int minDifficulty(vector<int>& jobs, int d) { \n        int n = jobs.size();\n        if (n < d) {\n            return -1;\n        }\n        vector<vector<int>> dp(d, vector<int>(n, -1));\n        int a = sol(d - 1, n - 1, dp, jobs); \n        return a;\n    }\n};","compare_result":"11111111111111111111111111111111","title_slug":"minimum-difficulty-of-a-job-schedule"}