{"id":373353694,"lang":"cpp","time":"1 year, 8 months","timestamp":1596060304,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/373353694/","is_pending":"Not Pending","title":"Minimum Size Subarray Sum","memory":"10.6 MB","code":"class Solution {\npublic:\n    int minSubArrayLen(int s, vector<int>& nums) {\n        int runningSum = 0; \n        int len = INT_MAX;\n        bool found_len = false; \n        int j = 0;\n        for (int i = 0; i < nums.size(); ++i) {\n            runningSum += nums[i]; \n            while(j <= i && runningSum >= s) {\n                found_len = true; \n                runningSum -= nums[j]; \n                if (i - j + 1 < len) {\n                    len = i - j + 1; \n                }\n                ++j;\n            }\n        }\n        if (found_len) {\n            return len;\n        } else {\n            return 0; \n        }\n    }\n};","compare_result":"111111111111111","title_slug":"minimum-size-subarray-sum"}