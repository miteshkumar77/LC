{"id":378481084,"lang":"cpp","time":"1 year, 8 months","timestamp":1596995934,"status_display":"Accepted","runtime":"48 ms","url":"/submissions/detail/378481084/","is_pending":"Not Pending","title":"Sort List","memory":"12.7 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* sortList(ListNode* head) {\n        \n        if (!head) {\n            return nullptr; \n        }\n        \n        \n        array<ListNode*, 2> res = split(head); \n        if (!res[0] || !res[1]) {\n            return merge(res[0], res[1]); \n        }\n        \n        \n        ListNode* h1 = sortList(res[0]); \n        ListNode* h2 = sortList(res[1]); \n        \n        return merge(h1, h2); \n        \n        \n//         while(res[0]) {\n//             cout << res[0] -> val << ' ';\n//             res[0] = res[0] -> next; \n//         }cout << endl; \n        \n//         while(res[1]) {\n//             cout << res[1] -> val << ' ';\n//             res[1] = res[1] -> next; \n//         }\n    }\n    \n    \n    \n    array<ListNode*, 2> split(ListNode* head) {\n        if (!head) {\n            return array<ListNode*, 2>{nullptr, nullptr}; \n        }\n        ListNode* h1 = nullptr; \n        ListNode* h2 = nullptr; \n        ListNode* c1 = nullptr; \n        ListNode* c2 = nullptr; \n        \n        while(head) {\n            if (!h1) {\n                h1 = head; \n            }\n            \n            if (c1) {\n                c1 -> next = head; \n            }\n            c1 = head; \n            \n            head = head -> next; \n            if (!head) {\n                break; \n            }\n            if (!h2) {\n                h2 = head; \n            }\n            \n            if (c2) {\n                c2 -> next = head;  \n            }\n            c2 = head; \n            head = head -> next; \n        }\n        \n        c1 -> next = nullptr; \n        if (c2) {\n            c2 -> next = nullptr; \n        }\n        return array<ListNode*, 2>{h1, h2}; \n        \n    }\n    ListNode* merge(ListNode* h1, ListNode* h2) {\n        ListNode* head = nullptr; \n        ListNode* cur = nullptr; \n        \n        while(h1 || h2) {\n            ListNode* tmp = nullptr; \n            if (h1 && (!h2 || h1 -> val < h2 -> val)) {\n                tmp = h1; \n                h1 = h1 -> next; \n            } else if (h2 && (!h1 || h2 -> val <= h1 -> val)) {\n                tmp = h2; \n                h2 = h2 -> next; \n            }\n            if (!head) {\n                head = tmp; \n            }\n            \n            if (cur) {\n                cur -> next = tmp; \n            }\n            cur = tmp; \n        }\n        return head; \n    }\n};","compare_result":"1111111111111111","title_slug":"sort-list"}