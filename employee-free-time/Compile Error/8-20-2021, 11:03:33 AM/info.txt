{"id":541474393,"lang":"cpp","time":"8Â months","timestamp":1629471813,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/541474393/","is_pending":"Not Pending","title":"Employee Free Time","memory":"N/A","code":"/*\n// Definition for an Interval.\nclass Interval {\npublic:\n    int start;\n    int end;\n\n    Interval() {}\n\n    Interval(int _start, int _end) {\n        start = _start;\n        end = _end;\n    }\n};\n*/\n\nclass Solution {\npublic:\n    \n    \n    vector<Interval> employeeFreeTime(vector<vector<Interval>> schedule) {\n        auto cmp = [&](pair<int,int> const& a, pair<int,int> const& b) -> bool {\n            return schedule[a.first][a.second].start < schedule[b.first][b.second].start;    \n        };\n        \n        priority_queue<pair<int,int>, vector<pair<int,int>>, decltype(cmp)> pq(cmp);\n        \n        for (int i = 0; i < schedule.size(); ++i) {\n            if (schedule[i].empty()) continue;\n            pq.push({i, 0});\n        }\n        \n        auto get_next = [&]() -> Interval& {\n            auto p = pq.top();\n            auto& ivl = schedule[p.first][p.second];\n            if (p.second + 1 < schedule[p.first].size()) {\n                pq.emplace({p.first, p.second-1});\n            }\n            return ivl;\n        };\n        \n        Interval curr = get_next();\n        return {curr};\n    }\n};","compare_result":null,"title_slug":"employee-free-time"}