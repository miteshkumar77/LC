{"id":448116588,"lang":"cpp","time":"1 year, 2 months","timestamp":1611677897,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/448116588/","is_pending":"Not Pending","title":"Employee Free Time","memory":"12.7 MB","code":"/*\n// Definition for an Interval.\nclass Interval {\npublic:\n    int start;\n    int end;\n\n    Interval() {}\n\n    Interval(int _start, int _end) {\n        start = _start;\n        end = _end;\n    }\n};\n*/\n\nclass Solution {\npublic:\n    vector<Interval> employeeFreeTime(vector<vector<Interval>> schedule) {\n        int n = schedule.size(); \n        vector<array<int, 2>> splitSchedule;\n        splitSchedule.reserve(n<<1); \n        \n        for (const vector<Interval>& v : schedule) {\n            for (const Interval& i : v) {\n                splitSchedule.push_back({i.start, 1});\n                splitSchedule.push_back({i.end, -1});\n            }\n        }\n        sort(splitSchedule.begin(), splitSchedule.end(), [](const array<int, 2>& a, const array<int, 2>& b) -> bool {\n            return a[0] < b[0] || (a[0] == b[0] && a[1] > b[1]);  \n        });\n        \n        int occupied = 0;\n        vector<vector<int>> ans;\n        for (const array<int, 2>& i : splitSchedule) {\n            occupied += i[1];\n            if (ans.size() != 0 && ans.back().size() == 1) {\n                ans.back().push_back(i[0]); \n            } else if (occupied == 0) {\n                ans.push_back(vector<int>{i[0]}); \n            }\n        }\n        if (ans.back().size() == 1) {\n            ans.pop_back(); \n        }\n        vector<Interval> ansv;\n        ansv.reserve(ans.size());\n        for (const vector<int>& a : ans) {\n            ansv.push_back(Interval(a[0], a[1])); \n        }\n        return ansv;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"employee-free-time"}