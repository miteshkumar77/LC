{"id":511809315,"lang":"cpp","time":"9 months, 4 weeks","timestamp":1624404058,"status_display":"Accepted","runtime":"1024 ms","url":"/submissions/detail/511809315/","is_pending":"Not Pending","title":"Number of Matching Subsequences","memory":"392.2 MB","code":"class Solution {\npublic:\n    int numMatchingSubseq(string s, vector<string>& words) {\n        \n        int n = s.length();\n        vector<vector<int>> dp(n+1, vector<int>(26, n));\n        for (int i = n-1; i >= 0; --i) {\n            for (int j = 0; j < 26; ++j) {\n                if (s[i]-'a' == j) {\n                    dp[i][j] = i;\n                } else {\n                    dp[i][j] = dp[i+1][j];\n                }\n            }\n        }\n        int ans = 0;   \n        int si;\n        unordered_map<string,int> ct;\n        for (string const& w : words) ++ct[w];\n        for (auto const& [w,c] : ct) {\n            si = 0;\n            bool ok = true;\n            for (char c : w) {\n                if (dp[si][c-'a'] == n) {\n                    ok = false;\n                    break;\n                }\n                si = dp[si][c-'a']+1;\n            }\n            ans += ok * c;\n        }\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"number-of-matching-subsequences"}