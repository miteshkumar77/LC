{"id":478431125,"lang":"cpp","time":"1Â year","timestamp":1617951822,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/478431125/","is_pending":"Not Pending","title":"Inorder Successor in BST","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* inorderSuccessor(TreeNode* root, TreeNode* p) {\n        TreeNode* curr = root;\n        stack<TreeNode*> stk;\n        TreeNode* met = nullptr;\n        while(root || !stk.empty()) {\n            if (curr) {\n                stk.push(curr);\n                curr = curr -> left;\n            } else {\n                curr = stk.top();\n                stk.pop();\n                if (curr == p) {\n                    met = p;\n                } else if (met) {\n                    return curr;\n                }\n                curr = curr -> right;\n            }\n        }\n        return nullptr;\n    }\n};","compare_result":"100000000000000000000000","title_slug":"inorder-successor-in-bst"}