{"id":679042483,"lang":"cpp","time":"6 days, 7 hours","timestamp":1649777627,"status_display":"Accepted","runtime":"22 ms","url":"/submissions/detail/679042483/","is_pending":"Not Pending","title":"Split Array into Fibonacci Sequence","memory":"8.9 MB","code":"class Solution {\npublic:\n    \n    inline bool check_val(int l, int r, string const& s) {\n        auto tmp = s.substr(l, r - l + 1);\n        if (tmp.length() == 1) return true;\n        return tmp[0] != '0' && tmp.length() <= 10 && stoll(tmp) < (((ll)1)<<31);\n    }\n    \n    using ll = long long;\n    \n    /*\n    dp[i][j][k]: true iff prefix 0..i can be a fibonacci-like sequence ending with j and k\n    */\n    \n    bool solve(string const& s, vector<unordered_map<ll, unordered_map<ll, bool>>>& dp, vector<int>& prev, int i, ll j, ll k) {\n        if (i < 0) return true;\n        if (dp[i].count(j) && dp[i][j].count(k)) return dp[i][j][k];\n        for (int l = i; l >= max(0, i-10); --l) {\n            if (check_val(l, i, s)) {\n                auto tmp = s.substr(l, i-l+1);\n                auto tmp_i = stoll(tmp);\n                if ((((j == -1 || k == -1) && l > 0) || (tmp_i + j) == k) && solve(s, dp, prev, l-1, tmp_i, j)) {\n                    prev[i] = l-1;\n                    dp[i][j][k] = true;\n                    return true;\n                }\n            }\n        }\n        dp[i][j][k] = false;\n        return false;\n    }\n    \n    \n    \n    \n    vector<int> splitIntoFibonacci(string num) {\n        int n = num.length();\n        vector<unordered_map<ll, unordered_map<ll, bool>>> dp(n);\n        vector<int> prev(n, INT_MAX);\n        if (!solve(num, dp, prev, n-1, -1, -1)) {\n            return {};\n        }\n        // for (int i : prev) cout << i << ' ';\n        int t = n-1;\n        vector<int> ans;\n        while(t >= 0) {\n            ans.push_back(stoi(num.substr(prev[t]+1, t - prev[t])));\n            t = prev[t];\n        }\n        reverse(ans.begin(), ans.end());\n        return ans;\n        \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"split-array-into-fibonacci-sequence"}