{"id":536457944,"lang":"cpp","time":"8 months, 1 week","timestamp":1628624897,"status_display":"Accepted","runtime":"216 ms","url":"/submissions/detail/536457944/","is_pending":"Not Pending","title":"Stream of Characters","memory":"103.6 MB","code":"class StreamChecker {\nprivate:\n    \n    struct TN {\n        array<TN*, 26> letters{};    \n        bool is_end{false};\n    };\n    \n    void insert(string const& s)\n    {\n        TN* cur = head;\n        for (int i = (int)s.length() - 1; i >= 0; --i) {\n            if (!(cur->letters)[s[i]-'a']) {\n                (cur->letters)[s[i] - 'a'] = new TN();\n            }\n            cur = (cur->letters)[s[i] - 'a'];\n        }\n        cur->is_end = true;\n    }\n    \n    \n    TN* head;\n    vector<char> stream;\n    \npublic:\n    StreamChecker(vector<string>& words) {\n        head = new TN();\n        for (string const& s : words) insert(s);\n    }\n    \n    bool query(char letter) {\n        stream.push_back(letter);\n        TN* cur = head;\n        for (int i = (int)stream.size() - 1; i >= 0; --i) {\n            cur = (cur->letters)[stream[i]-'a'];\n            if (!cur) return false;\n            if (cur->is_end) break;\n        }\n        return (cur != head && cur->is_end);\n    }\n};\n\n/**\n * Your StreamChecker object will be instantiated and called as such:\n * StreamChecker* obj = new StreamChecker(words);\n * bool param_1 = obj->query(letter);\n */","compare_result":"11111111111111111","title_slug":"stream-of-characters"}