{"id":385234961,"lang":"cpp","time":"1 year, 7 months","timestamp":1598200435,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/385234961/","is_pending":"Not Pending","title":"Stream of Characters","memory":"N/A","code":"class StreamChecker {\n    \n    \nprivate: \n    \n    struct TN {\n        array<TN*, 26> letters; \n        bool isEnd; \n        TN() {\n            fill(letters.begin(), letters.end(), nullptr); \n            isEnd = false; \n        }\n    };\n    \n    void insert(string& s, TN* head) {\n        TN* cur = head; \n        for (char c : s) {\n            if (!(cur -> letters)[c - 'a']) {\n                (cur -> letters)[c - 'a'] = new TN(); \n            }\n            cur = (cur -> letters)[c - 'a']; \n        }\n        cur -> isEnd = true; \n    }\n    \npublic:\n    StreamChecker(vector<string>& words) {\n        head = new TN();\n        for (string w : words) {\n            insert(w, head); \n        }\n    }\n    \n    bool query(char letter) {\n        q.push(head); \n        bool yes = false; \n        for (int i = 0; i < q.size(); ++i) {\n            TN* t = q.front(); \n            q.pop(); \n            if ((t -> letters)[letter - 'a']) {\n                t = (t -> letters)[letter - 'a']; \n                if (t -> isEnd) {\n                    yes = true; \n                }\n                q.push(t); \n            }\n        }\n        return yes; \n    }\n    TN* head;  \n    queue<TN*> q; \n\n};\n\n/**\n * Your StreamChecker object will be instantiated and called as such:\n * StreamChecker* obj = new StreamChecker(words);\n * bool param_1 = obj->query(letter);\n */","compare_result":"10000000010111110","title_slug":"stream-of-characters"}