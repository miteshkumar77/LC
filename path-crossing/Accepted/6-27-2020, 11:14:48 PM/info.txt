{"id":359223634,"lang":"cpp","time":"1 year, 9 months","timestamp":1593314088,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/359223634/","is_pending":"Not Pending","title":"Path Crossing","memory":"6.8 MB","code":"class Solution {\n    typedef pair<int, int> pii; \npublic:\n    bool isPathCrossing(string path) {\n        set<pii> p; \n        pii init(0, 0); \n        p.insert(init); \n        array<pii, 26> dirs; \n        dirs['N' - 'A'] = pii(1, 0); \n        dirs['S' - 'A'] = pii(-1, 0); \n        dirs['E' - 'A'] = pii(0, 1); \n        dirs['W' - 'A'] = pii(0, -1); \n        for (char c : path) {\n            init.first += dirs[c - 'A'].first;\n            init.second += dirs[c - 'A'].second; \n            if (p.find(init) != p.end()) {\n                return true; \n            }\n            p.insert(init); \n        }\n        return false; \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"path-crossing"}