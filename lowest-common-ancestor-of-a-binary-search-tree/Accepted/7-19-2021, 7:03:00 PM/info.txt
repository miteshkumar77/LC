{"id":525187338,"lang":"cpp","time":"9Â months","timestamp":1626735780,"status_display":"Accepted","runtime":"32 ms","url":"/submissions/detail/525187338/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Search Tree","memory":"23.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\n\nclass Solution {\nprivate:\n    array<TreeNode*, 3> lca(TreeNode* root, TreeNode* p, TreeNode* q) {\n        if (!root) return {nullptr, nullptr, nullptr};\n        array<TreeNode*, 3> a{nullptr, nullptr, nullptr};\n        if (root == p) {\n            a[1] = p;\n        }\n        if (root == q) {\n            a[2] = q;\n        }\n        if (root->val > p->val) {\n            auto rl = lca(root->left, p, q);\n            a[0] = rl[0] ? rl[0] : a[0];\n            a[1] = rl[1] ? rl[1] : a[1];\n            a[2] = rl[2] ? rl[2] : a[2];\n        }\n        if (root->val < q->val) {\n            auto rl = lca(root->right, p, q);\n            a[0] = rl[0] ? rl[0] : a[0];\n            a[1] = rl[1] ? rl[1] : a[1];\n            a[2] = rl[2] ? rl[2] : a[2];\n        }\n        if (!a[0] && a[1] && a[2]) a[0] = root;\n        return a;\n    }\npublic:\n    \n    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {\n        if (p->val > q->val) {\n            swap(p, q);\n        }\n        return lca(root, p, q)[0];\n    }\n};","compare_result":"111111111111111111111111111","title_slug":"lowest-common-ancestor-of-a-binary-search-tree"}