{"id":403107827,"lang":"cpp","time":"1 year, 6 months","timestamp":1601559968,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/403107827/","is_pending":"Not Pending","title":"Maximum Distance in Arrays","memory":"N/A","code":"class Solution {\npublic:\n    int maxDistance(vector<vector<int>>& arrays) {\n        \n        auto mx = [&](int a, int b) -> bool {\n            return arrays[a].back() > arrays[b].back();    \n        };\n        \n        auto mn = [&](int a, int b) -> bool {\n            return arrays[a][0] < arrays[b][0];\n        };\n        \n        \n        priority_queue<int, vector<int>, decltype(mx)> max2(mx);\n        priority_queue<int, vector<int>, decltype(mn)> min2(mn);\n        \n        for (int i = 0; i < arrays.size(); ++i) {\n            max2.push(i); min2.push(i);\n            if (max2.size() > 2) {\n                max2.pop();\n                min2.pop();\n            }\n        }\n        \n        vector<int> mins;\n        vector<int> maxs;\n        mins.push_back(arrays[min2.top()][0]); min2.pop(); mins.push_back(arrays[min2.top()][0]);\n        maxs.push_back(arrays[max2.top()].back()); max2.pop(); maxs.push_back(arrays[max2.top()].back());\n        \n        // for (int i : mins) cout << i << ' ';\n        // cout << endl;\n        // for (int i : maxs) cout << i << ' ';\n        // cout << endl;\n        return max(maxs[0] - mins[1], maxs[1] - mins[0]);\n    }\n};","compare_result":"1101111000100011101101100011000110110111101110100111111111111111110111011111111111111111011111001011111101110111111111111111","title_slug":"maximum-distance-in-arrays"}