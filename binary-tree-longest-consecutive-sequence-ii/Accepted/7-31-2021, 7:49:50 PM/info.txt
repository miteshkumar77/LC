{"id":531293113,"lang":"cpp","time":"8 months, 2 weeks","timestamp":1627775390,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/531293113/","is_pending":"Not Pending","title":"Binary Tree Longest Consecutive Sequence II","memory":"23.2 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    array<int,2> dfs(TreeNode* root, int& ans) {\n        if (!root) return {0,0};\n        auto lr = dfs(root->left, ans);\n        auto rr = dfs(root->right, ans);\n        array<int,2> ret{0,0};\n        int left_inc = 0;\n        int left_dec = 0;\n        int right_inc = 0;\n        int right_dec = 0;\n        if (root->left) {\n            if (root->left->val == root->val - 1) {\n                left_inc = lr[0];\n            } else if (root->left->val == root->val + 1) {\n                left_dec = lr[1];\n            }\n        }\n        if (root->right) {\n            if (root->right->val == root->val - 1) {\n                right_inc = rr[0];\n            } else if (root->right->val == root->val + 1) {\n                right_dec = rr[1];\n            }\n        }\n        ans = max(max(ans, left_dec + right_inc + 1), right_dec + left_inc + 1);\n        ret[0] = max(right_inc, left_inc) + 1;\n        ret[1] = max(right_dec, left_dec) + 1;\n        return ret;\n    }\n    \n    int longestConsecutive(TreeNode* root) {\n        int ans = 0;\n        dfs(root, ans);\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-longest-consecutive-sequence-ii"}