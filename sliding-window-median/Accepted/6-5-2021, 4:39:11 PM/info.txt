{"id":503532011,"lang":"cpp","time":"10 months, 2 weeks","timestamp":1622925551,"status_display":"Accepted","runtime":"80 ms","url":"/submissions/detail/503532011/","is_pending":"Not Pending","title":"Sliding Window Median","memory":"12.6 MB","code":"class Solution {\npublic:\n    vector<double> medianSlidingWindow(vector<int>& nums, int k) {\n        vector<double> ans;\n        ans.reserve(nums.size() - k + 1);\n        vector<int> window; \n        window.reserve(k); \n        for (int i = 0; i < k; ++i) {\n            window.push_back(nums[i]); \n        }\n        sort(window.begin(), window.end()); \n        ans.push_back(med(window)); \n        for (int i = k; i < nums.size(); ++i) {\n            insertI(nums[i], window); \n            eraseI(nums[i - k], window); \n            ans.push_back(med(window)); \n        }\n        return ans; \n        \n    }\n    \n    \n    double med(vector<int>& window) {\n        int n = window.size(); \n        if (n % 2 == 0) {\n            return ((double)(window[n/2]) + window[n/2 - 1])/2; \n        } else {\n            return window[n/2]; \n        }\n    }\n    \n    void insertI(int val, vector<int>& window) {\n        window.insert(upper_bound(window.begin(), window.end(), val), val); \n    }\n    void eraseI(int val, vector<int>& window) {\n        window.erase(lower_bound(window.begin(), window.end(), val)); \n    }\n    \n    \n    \n};","compare_result":"111111111111111111111111111111111111111111","title_slug":"sliding-window-median"}