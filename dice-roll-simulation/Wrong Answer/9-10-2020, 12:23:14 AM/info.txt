{"id":393578644,"lang":"cpp","time":"1 year, 7 months","timestamp":1599711794,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/393578644/","is_pending":"Not Pending","title":"Dice Roll Simulation","memory":"N/A","code":"class Solution {\npublic:\n    int dieSimulator(int n, vector<int>& rollMax) {\n        \n        vector<vector<int>> dp(n + 1, vector<int>(rollMax.size(), 0)); \n        // dp[r][f] : number of sequences of length r that end with dice face f\n        // f : face\n        // r : roll number\n        int mod = 1e9 + 7; \n        for (int i = 0; i < rollMax.size(); ++i) {\n            dp[1][i] = 1; \n        }\n        for (int r = 2; r <= n; ++r) {\n            int sum = 0; \n            for (int f = 0; f < rollMax.size(); ++f) {\n                sum += dp[r - 1][f]; \n                sum = sum % mod; \n            }\n            for (int f = 0; f < rollMax.size(); ++f) {\n                dp[r][f] = sum; \n                if (r >= rollMax[f]) {\n                    dp[r][f] = (dp[r][f] - dp[r - rollMax[f]][f] + mod) % mod; \n                }\n            }\n        }\n        int ans = 0; \n        for (int f = 0; f < rollMax.size(); ++f) {\n            ans += dp[n][f]; \n        }\n        return ans; \n        \n    }\n};","compare_result":"11100000000000000000000000000000","title_slug":"dice-roll-simulation"}