{"id":393597029,"lang":"cpp","time":"1 year, 7 months","timestamp":1599714575,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/393597029/","is_pending":"Not Pending","title":"Dice Roll Simulation","memory":"9.2 MB","code":"class Solution {\npublic:\n    int dieSimulator(int n, vector<int>& rollMax) {\n        \n        vector<vector<int>> dp(n + 1, vector<int>(7, 0)); \n        // dp[r][f] : number of sequences of length r that end with dice face f\n        // f : face\n        // r : roll number\n        int mod = 1e9 + 7; \n        for (int i = 0; i < 6; ++i) {\n            dp[1][i] = 1; \n        }\n        dp[0][6] = 1; \n        dp[1][6] = 6; \n        for (int r = 2; r <= n; ++r) {\n            for (int f = 0; f < 6; ++f) {\n                for (int i = 1; i <= r && i <= rollMax[f]; ++i) {\n                    dp[r][f] = ((dp[r][f] + dp[r - i][6]) % mod  - dp[r - i][f] + mod) % mod;                     \n                }\n                \n                dp[r][6] =(dp[r][6] + dp[r][f]) % mod; \n            }\n        }\n        \n        int ans = 0; \n        for (int f = 0; f < 6; ++f) {\n            ans += dp[n][f]; \n            ans = ans % mod; \n        }\n        return ans; \n        \n    }\n};","compare_result":"11111111111111111111111111111111","title_slug":"dice-roll-simulation"}