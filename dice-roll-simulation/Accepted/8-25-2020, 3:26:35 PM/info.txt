{"id":386293449,"lang":"cpp","time":"1 year, 7 months","timestamp":1598383595,"status_display":"Accepted","runtime":"204 ms","url":"/submissions/detail/386293449/","is_pending":"Not Pending","title":"Dice Roll Simulation","memory":"23.1 MB","code":"class Solution {\npublic:\n    int dieSimulator(int n, vector<int>& rollMax) {\n        // dp[i][j][k] : \n        \n        /*\n        \n            i: times in a row\n            j: dice face\n            k: roll number. \n            on day k, roll number j i times in a row. \n        */\n        \n        int mod = 1000000007; \n        vector<vector<vector<int>>> dp(16, vector<vector<int>>(7, vector<int>(n + 1, 0))); \n\n        \n        for (int j = 1; j <= 6; ++j) {\n            dp[1][j][1] = 1; \n        }\n        \n        for (int k = 2; k <= n; ++k) { // roll number\n            for (int j = 1; j <= 6; ++j) { // dice face \n                \n                // first time in a row: \n                int onceinarow = 0; \n                for (int face = 1; face <= 6; ++face) {\n                    if (face != j) {\n                        for (int i = 1; i <= rollMax[face - 1]; ++i) {\n                            onceinarow += dp[i][face][k - 1];\n                            onceinarow %= mod; \n                        }\n                    }\n                }\n                dp[1][j][k] = onceinarow; \n                for (int i = 2; i <= rollMax[j - 1]; ++i) {\n                    dp[i][j][k] = dp[i - 1][j][k - 1]; \n                }\n                \n            }\n        }\n        \n        int ans = 0; \n        for (int i = 1; i <= 15; ++i) {\n            for (int j = 1; j <= 6; ++j) {\n                ans += dp[i][j][n]; \n                ans %= mod; \n            }\n        }\n\n        return ans; \n        \n        \n    }\n};","compare_result":"11111111111111111111111111111111","title_slug":"dice-roll-simulation"}