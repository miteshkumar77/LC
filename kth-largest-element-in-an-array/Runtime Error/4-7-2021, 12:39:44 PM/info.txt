{"id":477745471,"lang":"c","time":"1Â year","timestamp":1617813584,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/477745471/","is_pending":"Not Pending","title":"Kth Largest Element in an Array","memory":"N/A","code":"typedef int elem;\n\nelem swapvar;\nvoid swap(elem* a, elem* b) {\n\tswapvar = *a;\n\t*a = *b;\n\t*b = swapvar;\n}\n\nint cmp(elem* a, elem* b) {\n\tif (*a > *b) {\n\t\treturn -1;\n\t} else if (*a < *b) {\n\t\treturn 1;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\nelem* partition(elem* l, elem* r, elem pivot) {\n    \n    elem* c = l;\n    \n    while(c <= r) {\n        if (cmp(l, &pivot) == -1) {\n            ++l;\n            if (c < l) {\n                c = l;\n            }\n            continue;\n        }\n        if (cmp(r, &pivot) == 1) {\n            --r;\n            continue;\n        }\n        if (c < l) {\n            c = l;\n            continue;\n        }\n        if (cmp(c, &pivot) == -1) {\n            swap(c, l); ++l; continue;\n        } \n        if (cmp(c, &pivot) == 1) {\n            swap(c, r);\n            --r;\n            continue;\n        }\n        ++c;\n    }\n    return r;\n}\n\n\nelem findKth(elem* l, elem* r, size_t k) {\n\telem* piv;\n\twhile(l < r) {\n\t\tpiv = rand() % (r - l) + l;\n\t\tpiv = partition(l, r, *piv);\n\t\tif ((piv - l + 1) > k) {\n\t\t\tr = piv - 1;\n\t\t} else if ((piv - l + 1) < k) {\n\t\t\tk -= (piv - l + 1);\n\t\t\tl = piv + 1;\n\t\t} else {\n\t\t\treturn *piv;\n\t\t}\n\t}\n\tif (k != 0) {\n\t\tfprintf(stderr, \"ERROR: undefined sequence k = %ld <> 0\\n\", k);\n\t\texit(EXIT_FAILURE);\n\t}\n\treturn *l;\n}\n\nint findKthLargest(int* nums, int numsSize, int k){\n    elem* l = nums;\n    elem* r = nums + numsSize - 1;\n    return findKth(l, r, k);\n}","compare_result":"11000000000000000000000000000000","title_slug":"kth-largest-element-in-an-array"}