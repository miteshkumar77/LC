{"id":385363528,"lang":"cpp","time":"1 year, 7 months","timestamp":1598219958,"status_display":"Accepted","runtime":"32 ms","url":"/submissions/detail/385363528/","is_pending":"Not Pending","title":"Kth Largest Element in an Array","memory":"10.2 MB","code":"class Solution {\npublic:\n    int findKthLargest(vector<int>& nums, int k) {\n        return kth(nums, k); \n    }\n    \n    \n    \n    int kth(vector<int>& nums, int k) {\n        int L = 0; \n        int R = nums.size() - 1; \n        while(L < R) {\n            swap(nums[rand() % (R - L + 1) + L], nums[R]); \n            int mid = part(nums, L, R); \n            int count = R - mid + 1; \n            if (count == k) {\n                return nums[mid]; \n            } else if (count > k) {\n                L = mid + 1; \n            } else {\n                R = mid - 1; \n                k = k - count; \n            }\n        }\n        \n        return nums[L]; \n        \n    }\n    \n    \n    int part(vector<int>& nums, int L, int R) {\n        int i = L; \n        int p = nums[R]; \n        for (int j = L; j < R; ++j) {\n            if (nums[j] <= p) {\n                swap(nums[i++], nums[j]); \n            }\n        }\n        swap(nums[i], nums[R]); \n        return i; \n    }\n    \n    \n    \n    \n    \n    \n};","compare_result":"11111111111111111111111111111111","title_slug":"kth-largest-element-in-an-array"}