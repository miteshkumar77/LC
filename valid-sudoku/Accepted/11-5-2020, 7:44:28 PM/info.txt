{"id":417235177,"lang":"cpp","time":"1 year, 5 months","timestamp":1604623468,"status_display":"Accepted","runtime":"52 ms","url":"/submissions/detail/417235177/","is_pending":"Not Pending","title":"Valid Sudoku","memory":"22.6 MB","code":"class Solution {\npublic:\n    bool isValidSudoku(vector<vector<char>>& board) {\n        \n        int n = 9; \n        \n        vector<unordered_set<char>> row_occupied(n, unordered_set<char>());\n        vector<unordered_set<char>> col_occupied(n, unordered_set<char>());\n        vector<vector<unordered_set<char>>> square_occupied(3, vector<unordered_set<char>>(3, unordered_set<char>()));\n        \n        function<void(int,int,char)> insert = [&](int i, int j, char c) -> void {\n            row_occupied[i].insert(c);\n            col_occupied[j].insert(c);\n            square_occupied[i/3][j/3].insert(c);\n        };\n        \n        function<bool(int,int,char)> check = [&](int i, int j, char c) -> bool {\n            return row_occupied[i].find(c) == row_occupied[i].end() &&\n                col_occupied[j].find(c) == col_occupied[j].end() &&\n                square_occupied[i/3][j/3].find(c) == square_occupied[i/3][j/3].end();\n        };\n        \n        for (int i = 0; i < 9; ++i) {\n            for (int j = 0; j < 9; ++j) {\n                \n                if (board[i][j] != '.') {\n                    if (!check(i, j, board[i][j])) {\n                        return false;\n                    }\n                    insert(i, j, board[i][j]);\n                }\n                \n            }\n        }\n        \n        return true;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"valid-sudoku"}