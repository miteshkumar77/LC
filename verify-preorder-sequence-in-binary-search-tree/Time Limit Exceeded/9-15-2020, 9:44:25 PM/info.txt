{"id":396350049,"lang":"cpp","time":"1 year, 7 months","timestamp":1600220665,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/396350049/","is_pending":"Not Pending","title":"Verify Preorder Sequence in Binary Search Tree","memory":"N/A","code":"class Solution {\npublic:\n    bool verifyPreorder(vector<int>& preorder) {\n        \n        function<bool(int,int,int,int)> verify = [&](int L, int R, int mmin, int mmax) -> bool {\n            // cout << L << ' ' << R << ' ' << mmin << ' ' << mmax << endl; \n            if (L > R) {\n                return true; \n            }\n            \n            int mk = R + 1; \n            for (int i = L + 1; i <= R; ++i) {\n                if (preorder[i] > preorder[L]) {\n                    mk = i; \n                    break;\n                }\n            }\n            \n            // cout << mk << endl; \n            for (int i = L; i <= R; ++i) {\n                // cout << preorder[i] << ' ' << mmin << ' ' << mmax << endl; \n                if (preorder[i] < mmin || preorder[i] > mmax) {\n                    \n                    return false; \n                }\n            }\n            \n            return verify(L + 1, mk - 1, mmin, min(mmax, preorder[L])) &&\n                verify(mk, R, max(mmin, preorder[L]), mmax); \n        };\n        return verify(0, preorder.size() - 1, INT_MIN, INT_MAX); \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111000000000000","title_slug":"verify-preorder-sequence-in-binary-search-tree"}