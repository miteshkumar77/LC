{"id":376277009,"lang":"cpp","time":"1 year, 8 months","timestamp":1596598653,"status_display":"Accepted","runtime":"88 ms","url":"/submissions/detail/376277009/","is_pending":"Not Pending","title":"Squares of a Sorted Array","memory":"25.8 MB","code":"class Solution {\npublic:\n    vector<int> sortedSquares(vector<int>& A) {\n        vector<int> ans; ans.reserve(A.size()); \n        int min = INT_MAX; \n        int L = 0; \n        int R = 0; \n        for (int i = 1; i < A.size(); ++i) {\n            if (abs(A[L]) >= abs(A[i])) {\n                L = i; \n            } else {\n                break; \n            }\n        }\n        R = L + 1; \n        while(L >= 0 || R < A.size()) {\n            if (L < 0) {\n                ans.push_back(A[R] * A[R++]); \n            } else if (R >= A.size()) {\n                ans.push_back(A[L] * A[L--]); \n            } else {\n                if (A[L] * A[L] >= A[R] * A[R]) {\n                    ans.push_back(A[R] * A[R++]);\n                } else {\n                    ans.push_back(A[L] * A[L--]); \n                }\n            }\n        }\n        return ans; \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"squares-of-a-sorted-array"}