{"id":510217921,"lang":"cpp","time":"10Â months","timestamp":1624122465,"status_display":"Accepted","runtime":"24 ms","url":"/submissions/detail/510217921/","is_pending":"Not Pending","title":"K Inverse Pairs Array","memory":"16.4 MB","code":"class Solution {\npublic:\n    \n    int kInversePairs(int n, int k) {\n        /*\n            dp[i][j]: ways to arrange sticks 1 through i with exactly j inversions\n            if (i < j) dp[i][j] = 0;\n            else dp[i][j] = sum(dp[i-1][x], x = 0 through j);\n        */\n        int M = 1e9 + 7;\n        vector<vector<int>> dp(n + 1, vector<int>(k + 1, 0));\n        for (int i = 1; i <= n; ++i) {\n            dp[i][0] = 1;\n        }\n        int pref;\n        for (int i = 2; i <= n; ++i) {\n            pref = 1;\n            for (int j = 1; j <= k; ++j) {\n                pref = (pref + dp[i-1][j]) % M;\n                if (j >= i) pref = (pref + M - dp[i-1][j-i]) % M;\n                dp[i][j] = pref;\n            }\n        }   \n        return dp[n][k];\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"k-inverse-pairs-array"}