{"id":547774725,"lang":"cpp","time":"7 months, 2 weeks","timestamp":1630497805,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/547774725/","is_pending":"Not Pending","title":"Array Nesting","memory":"30.6 MB","code":"class Solution {\npublic:\n    vector<int> p;\n    vector<int> s;\n    \n    int find(int n) {\n        if (p[n] == -1) return n;\n        p[n] = find(p[n]);\n        return p[n];\n    }\n    \n    bool onion(int a, int b) {\n        int pa = find(a); int pb = find(b);\n        if (pa == pb) return false;\n        p[pa] = pb;\n        s[pb] += s[pa];\n        return true;\n    }\n    \n    int arrayNesting(vector<int>& nums) {\n        int n = nums.size();\n        int ans = 0;\n        p = vector<int> (n, -1);\n        s = vector<int> (n, 1);\n        for (int i = 0; i < n; ++i) {\n            onion(nums[i], i);\n            ans = max(ans, s[find(nums[i])]);\n        }\n        return ans;\n    }\n};","compare_resulttitle_slug":"array-nesting"}