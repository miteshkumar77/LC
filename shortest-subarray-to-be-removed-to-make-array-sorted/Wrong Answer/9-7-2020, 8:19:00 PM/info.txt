{"id":392554652,"lang":"cpp","time":"1 year, 7 months","timestamp":1599524340,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/392554652/","is_pending":"Not Pending","title":"Shortest Subarray to be Removed to Make Array Sorted","memory":"N/A","code":"class Solution {\npublic:\n    \n    bool check(vector<int>& arr, int len) {\n        int i = 0; \n        while(i + 1 < arr.size() && arr[i] <= arr[i + 1]) {\n            ++i; \n        }\n        if (i == 0) {\n            if (!checks(arr, INT_MIN, i + len) && !checks(arr, arr[i], i + len + 1)) {\n                return false; \n            }\n        } else {\n            if (!checks(arr, arr[i - 1], i + len) && !checks(arr, arr[i], i + len + 1)) {\n                return false; \n            }\n        }\n        return true; \n    }\n    \n    bool checks(vector<int>& arr, int start, int i) {\n        if (i < arr.size() && arr[i] < start) {\n            return false; \n        }\n        for (; i + 1 < arr.size(); ++i) {\n            if (arr[i + 1] < arr[i]) {\n                return false; \n            }\n        }\n        return true; \n    }\n    int findLengthOfShortestSubarray(vector<int>& arr) {\n        int L = 0; \n        int R = arr.size(); \n        int ans = R; \n        while(L <= R) {\n            int mid = L + (R - L)/2; \n            if (check(arr, mid)) {\n                ans = mid; \n                R = mid - 1; \n            } else {\n                L = mid + 1; \n            }\n        }\n        return ans; \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111101011111111111111111111111111111111111111111111111111111111111","title_slug":"shortest-subarray-to-be-removed-to-make-array-sorted"}