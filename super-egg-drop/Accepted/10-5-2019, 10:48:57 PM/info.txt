{"id":267257926,"lang":"python","time":"2 years, 6 months","timestamp":1570330137,"status_display":"Accepted","runtime":"2340 ms","url":"/submissions/detail/267257926/","is_pending":"Not Pending","title":"Super Egg Drop","memory":"11.8 MB","code":"class Solution(object):\n    def superEggDrop(self, K, N):\n\n        # Right now, dp[i] represents dp(1, i)\n        dp = range(N+1)\n\n        for k in xrange(2, K+1):\n            # Now, we will develop dp2[i] = dp(k, i)\n            dp2 = [0]\n            x = 1\n            for n in xrange(1, N+1):\n                # Let's find dp2[n] = dp(k, n)\n                # Increase our optimal x while we can make our answer better.\n                # Notice max(dp[x-1], dp2[n-x]) > max(dp[x], dp2[n-x-1])\n                # is simply max(T1(x-1), T2(x-1)) > max(T1(x), T2(x)).\n                while x < n and max(dp[x-1], dp2[n-x]) > \\\n                                max(dp[x], dp2[n-x-1]):\n                    x += 1\n\n                # The final answer happens at this x.\n                dp2.append(1 + max(dp[x-1], dp2[n-x]))\n\n            dp = dp2\n\n        return dp[-1]","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"super-egg-drop"}