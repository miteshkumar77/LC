{"id":506575883,"lang":"cpp","time":"10 months, 1 week","timestamp":1623457130,"status_display":"Accepted","runtime":"148 ms","url":"/submissions/detail/506575883/","is_pending":"Not Pending","title":"Stone Game VIII","memory":"97.3 MB","code":"class Solution {\npublic:\n    vector<int> sums;\n    vector<int> dp;\n    int n;\n    int td(int i) {\n        if (i+1 == n) return max(sums[i+1], sums[i] - sums[i+1]);\n        if (i == n) return sums[i];\n        if (dp[i] == -1) dp[i] = max(td(i+1), sums[i] - td(i+1));\n        return dp[i];\n        /*\n        \n        if (i + 1 == n) {\n            return max(sums[i+1], sums[i] - sums[i+1]);\n        } else {\n            if (dp[i] == -1) {\n                dp[i] = max(td(i+1), sums[i] - td(i+1));\n            }\n            return dp[i];\n        }\n        */\n    } \n    int stoneGameVIII(vector<int>& stones) {\n        // a1 - (b1 - (a2 - (b2 - ...)))\n        n = stones.size();\n        sums = vector<int>(n+1,0);\n        dp = vector<int>(n+1, -1);\n        for (int i = 0; i < stones.size(); ++i) {\n            sums[i+1] = sums[i] + stones[i];\n        }\n        return td(2);\n    }\n};\n/*\n    td(1) = max(td(2), -10 - td(2)) = max(-22, -10 + 22) = 12\n    td(2) = -22\n\n\n\n\n*/","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"stone-game-viii"}