{"id":446197751,"lang":"cpp","time":"1 year, 2 months","timestamp":1611293984,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/446197751/","is_pending":"Not Pending","title":"Line Reflection","memory":"N/A","code":"class Solution {\npublic:\n    bool isReflected(vector<vector<int>>& points) {\n        unordered_map<int, unordered_map<int,int>> levels;\n        for (int i = 0; i < points.size(); ++i) {\n            ++levels[points[i][1]][points[i][0]];\n        }\n        \n        int minx = INT_MAX;\n        int maxx = INT_MIN;\n        for (auto [pidx, ct] : levels.begin() -> second) {\n            minx = min(minx, pidx);\n            maxx = max(maxx, pidx); \n        }\n        \n        int y = (maxx + minx)/2;\n        int half = 0;\n        if ((maxx - minx) % 2 != 0) {\n            half = 1;\n        }\n        \n        // cout << minx << ' ' << maxx << endl;\n        \n        for (auto p : levels) {\n            for (auto [x, ct] : p.second) {\n                int reflected;\n                if ((half && (double)x < (double)y + (1.0/2.0)) || (x < y)) {\n                    reflected = x + (y - x) * 2 + half;\n                } else {\n                    reflected = x - (x - y) * 2 + half;\n                }\n                \n                // cout << x << ' ' << p.first << ' ' << ct << ' ' << reflected << ' ' << (double)y + (1.0/2.0) * (double)(half) << endl;\n                if (!p.second.count(reflected)) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n};","compare_result":"111111111111111101111110111111111111","title_slug":"line-reflection"}