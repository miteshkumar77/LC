{"id":291590957,"lang":"python","time":"2 years, 3 months","timestamp":1578276412,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/291590957/","is_pending":"Not Pending","title":"Two Sum","memory":"13.2 MB","code":"class Solution(object):\n    def twoSum(self, nums, target):\n        \"\"\"\n        :type nums: List[int]\n        :type target: int\n        :rtype: List[int]\n        \n        \"\"\"\n        \n        \n        h = {}\n        for i, num in enumerate(nums):\n            n = target - num\n            if n not in h:\n                h[num] = i\n            else:\n                return [h[n], i]\n        \n#         past = {}\n        \n#         for i, j in enumerate(nums):\n            \n#             tmp = target - j\n            \n#             if tmp not in past:\n#                 past[j] = i\n#             else:\n#                 return [past[tmp], i]\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n#         pairs = [None]*len(nums)\n#         for i in range(len(nums)):\n#             pairs[i] = (nums[i], i)\n        \n\n#         pairs.sort(key=lambda x: x[0])\n\n#         i = 0\n#         j = len(pairs) - 1\n        \n#         # print(pairs)\n#         while (i != j and pairs[i][0] + pairs[j][0] != target):\n#             # print(i, j, pairs[i][0], pairs[j][0])\n#             if pairs[i][0] + pairs[j][0] < target:\n#                 i = i + 1\n#             else:\n#                 j = j - 1\n#         return [pairs[i][1], pairs[j][1]]\n        ","compare_result":"11111111111111111111111111111","title_slug":"two-sum"}