{"id":423487341,"lang":"golang","time":"1Â year, 4Â months","timestamp":1606184831,"status_display":"Accepted","runtime":"116 ms","url":"/submissions/detail/423487341/","is_pending":"Not Pending","title":"Count Good Nodes in Binary Tree","memory":"13.8 MB","code":"/**\n * Definition for a binary tree node.\n * type TreeNode struct {\n *     Val int\n *     Left *TreeNode\n *     Right *TreeNode\n * }\n */\nfunc goodNodes(root *TreeNode) int {\n    ans := 0\n    var v func(*TreeNode,int) \n    \n    v = func(r *TreeNode, parent int) {\n        if r == nil {\n            return\n        }\n        \n        if r.Val >= parent {\n            parent = r.Val\n            ans++\n        }\n        v(r.Left, parent)\n        v(r.Right, parent)\n    }\n    \n    v(root, -10001)\n    return ans\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111","title_slug":"count-good-nodes-in-binary-tree"}