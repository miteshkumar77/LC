{"id":423486151,"lang":"cpp","time":"1 year, 4 months","timestamp":1606184555,"status_display":"Accepted","runtime":"196 ms","url":"/submissions/detail/423486151/","is_pending":"Not Pending","title":"Count Good Nodes in Binary Tree","memory":"87.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    \n    int goodNodes(TreeNode* root) {\n        int ans = 0;\n        function<void(TreeNode*, int)> bt = [&](TreeNode* r, int parent) -> void {\n            if (!r) return;\n            if (r -> val >= parent) {\n                parent = r -> val;\n                ++ans;\n            }\n            bt(r -> left, parent);\n            bt(r -> right, parent);\n        };\n        bt(root, INT_MIN);\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111","title_slug":"count-good-nodes-in-binary-tree"}