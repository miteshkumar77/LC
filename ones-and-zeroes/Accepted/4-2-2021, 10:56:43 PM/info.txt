{"id":475734213,"lang":"cpp","time":"1Â year","timestamp":1617418603,"status_display":"Accepted","runtime":"252 ms","url":"/submissions/detail/475734213/","is_pending":"Not Pending","title":"Ones and Zeroes","memory":"9.7 MB","code":"class Solution {\npublic:\n    int findMaxForm(vector<string>& strs, int m, int n) {\n        vector<int> ones(strs.size(), 0);\n        vector<int> zeroes(strs.size(), 0);\n        for (int i = 0; i < strs.size(); ++i) {\n            for (char c : strs[i]) {\n                if (c == '0') {\n                    ++zeroes[i];    \n                } else {\n                    ++ones[i];\n                }\n            }\n        }    \n        int ans = 0; \n        vector<vector<int>> dp(m + 1, vector<int>(n + 1, -1));\n        dp[0][0] = 0;\n        for (int c = 0; c < strs.size(); ++c) {\n            for (int i = m; i >= 0; --i) {\n               for (int j = n; j >= 0; --j) {\n                   if (i >= zeroes[c] && j >= ones[c] && dp[i - zeroes[c]][j - ones[c]] != -1) {\n                       dp[i][j] = max(dp[i][j], dp[i - zeroes[c]][j - ones[c]] + 1);\n                       ans = max(ans, dp[i][j]);\n                   }             \n               } \n            }\n        }\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"ones-and-zeroes"}