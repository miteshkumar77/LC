{"id":438635803,"lang":"cpp","time":"1 year, 3 months","timestamp":1609803861,"status_display":"Accepted","runtime":"380 ms","url":"/submissions/detail/438635803/","is_pending":"Not Pending","title":"Ones and Zeroes","memory":"10.4 MB","code":"class Solution {\npublic:\n    int findMaxForm(vector<string>& strs, int m, int n) {\n        int N = strs.size();\n        vector<array<int, 2>> ct(N, {0,0});\n        \n        for (int i = 0; i < N; ++i) {\n            for (char p : strs[i]) {\n                ++ct[i][p - '0'];\n            }\n        }\n        \n        vector<vector<int>> dp(m + 1, vector<int>(n + 1, -1)); \n        \n        dp[0][0] = 0;\n        int ans = 0;\n        for (int s = 1; s <= N; ++s) {\n            for (int z = m; z >= 0; --z) {\n                for (int o = n; o >= 0; --o) {\n                    if (z - ct[s - 1][0] >= 0 && o - ct[s - 1][1] >= 0 && dp[z - ct[s - 1][0]][o - ct[s - 1][1]] >= 0) {\n                        dp[z][o] = max(dp[z][o], dp[z - ct[s - 1][0]][o - ct[s - 1][1]] + 1);\n                        ans = max(ans, dp[z][o]);\n                    }\n                }\n            }\n        }\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"ones-and-zeroes"}