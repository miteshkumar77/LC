{"id":327490195,"lang":"cpp","time":"1 year, 12 months","timestamp":1587353272,"status_display":"Accepted","runtime":"132 ms","url":"/submissions/detail/327490195/","is_pending":"Not Pending","title":"Merge Two Binary Trees","memory":"24.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* mergeTrees(TreeNode* t1, TreeNode* t2) {\n        if (!t1 && !t2) {\n            return nullptr;\n        }\n        \n        int val = 0; \n        \n        if (t1) {\n            val = t1 -> val; \n        }\n        \n        if (t2) {\n            val += t2 -> val;\n        }\n        \n        TreeNode* t_n = new TreeNode(val);\n        \n        t_n -> left = mergeTrees((t1 == nullptr)?nullptr:t1 -> left, (t2 == nullptr)?nullptr:t2 -> left);\n        t_n -> right = mergeTrees((t1 == nullptr)?nullptr:t1 -> right, (t2 == nullptr)?nullptr:t2 -> right);\n        \n        return t_n; \n        \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-two-binary-trees"}