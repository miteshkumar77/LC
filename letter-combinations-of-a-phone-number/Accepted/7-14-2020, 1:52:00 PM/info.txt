{"id":366589021,"lang":"cpp","time":"1 year, 9 months","timestamp":1594749120,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/366589021/","is_pending":"Not Pending","title":"Letter Combinations of a Phone Number","memory":"6.6 MB","code":"class Solution {\npublic:\n    vector<string> letterCombinations(string digits) {\n        array<vector<char>, 10> lmap {\n            vector<char>{},\n            vector<char>{},\n            vector<char>{'a', 'b', 'c'},\n            vector<char>{'d', 'e', 'f'},\n            vector<char>{'g', 'h', 'i'},\n            vector<char>{'j', 'k', 'l'},\n            vector<char>{'m', 'n', 'o'},\n            vector<char>{'p', 'q', 'r', 's'},\n            vector<char>{'t', 'u', 'v'},\n            vector<char>{'w', 'x', 'y', 'z'}\n        }; \n        \n        list<char> box; \n        vector<string> ans; ans.reserve((int)pow(3, digits.size() + 1));\n        generator(ans, lmap, box, digits, 0); \n        return ans; \n        \n    }\n    \n    \n    void generator(vector<string>& ans, array<vector<char>, 10>& lmap, list<char>& box, string& digits, int i) {\n        if (i == digits.size()) {\n            string s = \"\";\n            for (auto it : box) {\n                s += it;\n            }\n            if (s.length()) {\n                ans.push_back(s); \n            }\n            return; \n        }\n        \n        for (char c : lmap[digits[i] - '0']) {\n            box.push_back(c); \n            generator(ans, lmap, box, digits, i + 1); \n            box.pop_back(); \n        }\n    }\n};","compare_result":"1111111111111111111111111","title_slug":"letter-combinations-of-a-phone-number"}