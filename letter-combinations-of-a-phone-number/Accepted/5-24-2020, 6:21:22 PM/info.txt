{"id":344179544,"lang":"cpp","time":"1 year, 10 months","timestamp":1590358882,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/344179544/","is_pending":"Not Pending","title":"Letter Combinations of a Phone Number","memory":"6.5 MB","code":"class Solution {\npublic:\n    \n    vector<vector<char> > mapping{\n        vector<char>{},\n        vector<char>{},\n        vector<char>{'a','b','c'},\n        vector<char>{'d','e','f'},\n        vector<char>{'g','h','i'},\n        vector<char>{'j','k','l'},\n        vector<char>{'m','n','o'},\n        vector<char>{'p','q','r','s'},\n        vector<char>{'t','u','v'},\n        vector<char>{'w','x','y','z'},\n        \n    }; \n    vector<string> letterCombinations(string digits) {\n        string digs = digits; \n        string elem = \"\"; \n        vector<string> res; \n        if (digits == \"\") {\n            return res; \n        }\n        generator(digs, elem, res);\n        return res; \n    }\n    \n    void generator(string& digits, string& elem, vector<string>& res) {\n        if (elem.length() == digits.length()) {\n            res.push_back(elem); \n            return; \n        }\n        \n        vector<char> int_map = mapping[digits[elem.size()] - '0']; \n        for (int i = 0; i < int_map.size(); ++i) {\n            elem += int_map[i]; \n            generator(digits, elem, res); \n            elem.pop_back(); \n        }\n    }\n};","compare_result":"1111111111111111111111111","title_slug":"letter-combinations-of-a-phone-number"}