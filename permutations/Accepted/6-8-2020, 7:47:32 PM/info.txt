{"id":350976977,"lang":"python","time":"1 year, 10 months","timestamp":1591660052,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/350976977/","is_pending":"Not Pending","title":"Permutations","memory":"12.7 MB","code":"class Solution(object):\n    def permute(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: List[List[int]]\n        \"\"\"\n        \n        ans = []\n        self.helper(nums, 0, [], ans)\n        return ans \n    \n    def helper(self, n, i, s, ans):\n        if len(s) == len(n):\n            ans.append(s)\n            return \n\n        for k in range(len(s), 0, -1):\n            self.helper(n, i + 1, s[:k] + [n[i]] + s[k:], ans)\n        self.helper(n, i + 1, [n[i]] + s, ans)","compare_result":"1111111111111111111111111","title_slug":"permutations"}