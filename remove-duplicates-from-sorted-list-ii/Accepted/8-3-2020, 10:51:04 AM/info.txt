{"id":375440843,"lang":"cpp","time":"1 year, 8 months","timestamp":1596466264,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/375440843/","is_pending":"Not Pending","title":"Remove Duplicates from Sorted List II","memory":"11.1 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* deleteDuplicates(ListNode* head) {\n        if (!head) {\n            return nullptr; \n        }\n        ListNode* cur = head; \n        ListNode* prev = nullptr; \n        while(cur) {\n            if (cur -> next && cur -> next -> val == cur -> val) {\n                int v = cur -> val; \n                while(cur && cur -> val == v) {\n                    auto tmp = cur -> next; \n                    delete cur; \n                    cur = tmp; \n                }\n                \n                if (!prev) {\n                    head = cur; \n                } else {\n                    prev -> next = cur; \n                }\n            } else {\n                prev = cur; \n                cur = cur -> next; \n            }\n        }\n        return head; \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"remove-duplicates-from-sorted-list-ii"}