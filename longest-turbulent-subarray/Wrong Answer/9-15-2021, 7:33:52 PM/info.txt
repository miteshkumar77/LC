{"id":555606670,"lang":"cpp","time":"7Â months","timestamp":1631748832,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/555606670/","is_pending":"Not Pending","title":"Longest Turbulent Subarray","memory":"N/A","code":"class Solution {\npublic:\n    int maxTurbulenceSize(vector<int>& arr) {\n        if (arr.empty()) return 0;\n        int ml = 1;\n        int mh = 1;\n        int ans = 0;\n        int n = arr.size();\n        for (int i = 1; i < n; ++i) {\n            if (arr[i] < arr[i-1]) {\n                ml = mh + 1;\n                mh = 1;\n            } else if (arr[i] > arr[i-1]) {\n                mh = ml + 1;\n                ml = 1;\n            } else {\n                ml = 1;\n                mh = 1;\n            }\n            ans = max(ans, max(ml, mh));\n        }\n        return ans;\n    }\n};","compare_result":"11011111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-turbulent-subarray"}