{"id":443476783,"lang":"cpp","time":"1 year, 3 months","timestamp":1610757672,"status_display":"Accepted","runtime":"64 ms","url":"/submissions/detail/443476783/","is_pending":"Not Pending","title":"Longest Turbulent Subarray","memory":"40.4 MB","code":"class Solution {\npublic:\n    int maxTurbulenceSize(vector<int>& arr) {\n        int n = arr.size();\n        int evenMax = 1;\n        int oddMax = 1;\n        int gans = 1;\n        for (int i = 1; i < n; ++i) {\n            if (i % 2 == 0) {\n                if (!(arr[i] > arr[i-1])) {\n                    evenMax = 0;\n                }\n                if (!(arr[i] < arr[i-1])) {\n                    oddMax = 0;\n                }\n            } else {\n                if (!(arr[i] > arr[i-1])) {\n                    oddMax = 0;\n                }\n                if (!(arr[i] < arr[i-1])) {\n                    evenMax = 0;\n                }\n            }\n            ++evenMax;\n            ++oddMax;\n            gans = max(gans, max(evenMax, oddMax));\n        }\n        \n        return gans;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-turbulent-subarray"}