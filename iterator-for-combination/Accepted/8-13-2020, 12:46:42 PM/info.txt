{"id":380408225,"lang":"cpp","time":"1 year, 8 months","timestamp":1597337202,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/380408225/","is_pending":"Not Pending","title":"Iterator for Combination","memory":"12.4 MB","code":"class CombinationIterator {\npublic:\n    CombinationIterator(string tcharacters, int combinationLength) {\n        stk.push(array<int, 2>{0, combinationLength}); \n        characters = tcharacters; \n        dub = \"\"; \n        longestlen = combinationLength; \n    }\n    \n    string next() {\n        shuffle(); \n        stk.pop(); \n        return dub; \n    }\n    \n    bool hasNext() {\n        shuffle(); \n        return !stk.empty(); \n    }\n    \n    \n    void shuffle() {\n        // cout << stk.top()[0] << ' ' << stk.top()[1] << ' ' << dub << endl; \n        if (stk.empty()) {\n            return; \n        } else if (stk.top()[1] == 0) {\n            return; \n        } else if (stk.top()[0] == characters.length() - stk.top()[1] + 1) {\n            \n            dub.pop_back();  \n            stk.pop(); \n            // cout << stk.size() << endl; \n        } else {\n            if (dub.length() != longestlen - stk.top()[1]) {\n                dub.pop_back(); \n            }\n            dub += characters[stk.top()[0]]; \n            stk.push(array<int, 2>{++stk.top()[0], stk.top()[1] - 1}); \n        }\n        shuffle(); \n    }\n    \n    int longestlen = 0; \n    string dub; \n    stack<array<int, 2>> stk; \n    string characters; \n    // {i, left}\n};\n\n/**\n * Your CombinationIterator object will be instantiated and called as such:\n * CombinationIterator* obj = new CombinationIterator(characters, combinationLength);\n * string param_1 = obj->next();\n * bool param_2 = obj->hasNext();\n */","compare_result":"1111111111111111","title_slug":"iterator-for-combination"}