{"id":367010831,"lang":"cpp","time":"1 year, 9 months","timestamp":1594829492,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/367010831/","is_pending":"Not Pending","title":"Diameter of Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\n\nclass Solution {\npublic:\n    typedef pair<int, int> pii; \n    int diameterOfBinaryTree(TreeNode* root) {\n        return diam(root).second - 1; \n    }\n    \n    \n    pair<int, int> diam(TreeNode* root) {\n        if (!root) {\n            return pii(0, 0); \n        }\n        \n        pii rL = diam(root -> left); \n        pii rR = diam(root -> right); \n        return pii(max(rL.first, rR.first) + 1, max(max(rL.first + rR.first + 1, rL.second), rR.second)); \n    }\n};","compare_result":"1011111111111111111111111111111111111111111111111111111111111111111101111111111111111111111111111111111111","title_slug":"diameter-of-binary-tree"}