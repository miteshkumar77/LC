{"id":333585990,"lang":"cpp","time":"1 year, 11 months","timestamp":1588481824,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/333585990/","is_pending":"Not Pending","title":"Diameter of Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    int diameterOfBinaryTree(TreeNode* root) {\n        int mx = 0; \n        diameterOfBinaryTreeh(root, mx); \n        return mx; \n    }\n    int diameterOfBinaryTreeh(TreeNode* root, int& mx) {\n        int mn = 0; \n        \n        int retl = 0;\n        int retr = 0; \n        \n        if (root -> left) {\n            retl = diameterOfBinaryTreeh(root -> left, mx) + 1; \n            \n        }\n        \n        if (root -> right) {\n            retr = diameterOfBinaryTreeh(root -> right, mx) + 1; \n        }\n        \n        int comp = retl + retr; \n        \n        if (comp > mx) {\n            mx = comp; \n        }\n        return max(retl , retr); \n        \n    }\n};","compare_result":"1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"diameter-of-binary-tree"}