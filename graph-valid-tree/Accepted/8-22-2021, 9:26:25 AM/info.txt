{"id":542402721,"lang":"cpp","time":"7 months, 4 weeks","timestamp":1629638785,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/542402721/","is_pending":"Not Pending","title":"Graph Valid Tree","memory":"12 MB","code":"class Solution {\npublic:\n    vector<int> parent;\n    vector<int> rank;\n    \n    int find(int node) {\n        if (parent[node] == -1) return node;\n        parent[node] = find(parent[node]);\n        return parent[node];\n    }\n    \n    bool onion(int a, int b) {\n        int pa = find(a); int pb = find(b);\n        if (pa == pb) return false;\n        if (rank[pa] == rank[pb]) {\n            parent[pa] = pb;\n            rank[pb] = rank[pa] + 1;\n            return true;\n        }\n        if (rank[pa] < rank[pb]) {\n            swap(pa, pb);\n        }\n        parent[pa] = pb;\n        return true;\n    }\n\n\n    bool validTree(int n, vector<vector<int>>& edges) {\n        if (edges.size() != n-1) return false;\n        parent = vector<int>(n, -1);\n        rank = vector<int>(n, 1);\n        for (auto e : edges) {\n            if (!onion(e[0], e[1])) return false;\n        }\n        return true;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111","title_slug":"graph-valid-tree"}