{"id":379021344,"lang":"cpp","time":"1 year, 8 months","timestamp":1597091551,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/379021344/","is_pending":"Not Pending","title":"Graph Valid Tree","memory":"N/A","code":"class Solution {\npublic:\n    bool validTree(int n, vector<vector<int>>& edges) {\n        vector<int> sets(n, -1); \n        \n        function<int(int)> find = [&](int i) -> int {\n            if (sets[i] == -1) {\n                return i; \n            }\n            sets[i] = find(sets[i]); \n            return sets[i]; \n        };\n        \n        \n        function<bool(int, int)> onion = [&](int i, int j) -> int {\n            int ip = find(i);\n            int jp = find(j); \n            if (ip == jp) {\n                return false; \n            }\n            sets[ip] = sets[jp]; \n            return true; \n        }; \n        \n        \n        for (vector<int> e : edges) {\n            if (!onion(e[0], e[1])) {\n                return false; \n            }\n        }\n        return true; \n    }\n};","compare_result":"10100000001101100111100000011000000000000010","title_slug":"graph-valid-tree"}