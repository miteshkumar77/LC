{"id":343159206,"lang":"cpp","time":"1 year, 11 months","timestamp":1590170993,"status_display":"Accepted","runtime":"108 ms","url":"/submissions/detail/343159206/","is_pending":"Not Pending","title":"Deepest Leaves Sum","memory":"41.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int deepestLeavesSum(TreeNode* root) {\n        list<TreeNode*> prev; \n        if (root) {\n            prev.push_back(root); \n        }\n        while(prev.size() != 0) {\n            list<TreeNode*> next; \n            for (auto iter = prev.begin(); iter != prev.end(); ++iter) {\n                if ((*iter) -> left) {\n                    next.push_back((*iter) -> left); \n                }\n                if ((*iter) -> right) {\n                    next.push_back((*iter) -> right); \n                }\n                \n            }\n            \n            if (next.size() == 0) {\n                int sum = 0; \n                for (TreeNode* node : prev) {\n                    sum += node -> val; \n                }\n                return sum; \n            }  \n            prev.swap(next); \n        }\n        return 0; \n    }\n};","compare_result":"111111111111111","title_slug":"deepest-leaves-sum"}