{"id":349067166,"lang":"cpp","time":"1 year, 10 months","timestamp":1591299790,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/349067166/","is_pending":"Not Pending","title":"Merge Intervals","memory":"N/A","code":"class Solution {\npublic:\n    vector<vector<int>> merge(vector<vector<int>>& intervals) {\n        \n        if (intervals.size() <= 1) {\n            return intervals; \n        }\n        sort(intervals.begin(), intervals.end(), [] (const vector<int>& a, const vector<int>& b) -> bool {\n            return a[0] < b[0]; \n        }); \n        vector<vector<int> > ans; \n        int start = intervals[0][0]; \n        int end = intervals[0][1]; \n        for (int i = 1; i < intervals.size(); ++i) {\n            if (intervals[i - 1][1] >= intervals[i][0]) {\n                end = max(end, intervals[i][1]); \n            } else {\n                ans.push_back(vector<int>{start, end}); \n                start = intervals[i][0]; \n                end = intervals[i][1]; \n            }\n        }\n        \n        if (ans.size() == 0 || end > ans[ans.size() - 1][1]) {\n            ans.push_back(vector<int>{start, end}); \n        }\n        return ans; \n    }\n};","compare_result":"1111111111111111000011000001110111111101001011101010111111111111010100111110111011011000111111010100000111010101111111100010011011010010100100101010000000000000000000010","title_slug":"merge-intervals"}