{"id":421783646,"lang":"cpp","time":"1 year, 5 months","timestamp":1605739120,"status_display":"Accepted","runtime":"32 ms","url":"/submissions/detail/421783646/","is_pending":"Not Pending","title":"Merge Intervals","memory":"14.7 MB","code":"class Solution {\npublic:\n    vector<vector<int>> merge(vector<vector<int>>& intervals) {\n        if (intervals.size() == 0) {\n            return intervals; \n        }\n        sort(intervals.begin(), intervals.end(), [] (vector<int>& a, vector<int>& b) -> bool {\n            return a[0] < b[0]; \n        }); \n        vector<int> curr = intervals[0]; \n        vector<vector<int> > ans; ans.reserve(intervals.size()); \n        for (int i = 1; i < intervals.size(); ++i) {\n            if (curr[1] >= intervals[i][0]) {\n                curr[1] = max(curr[1], intervals[i][1]); \n            } else {\n                ans.push_back(curr); \n                curr = intervals[i]; \n            }\n        }\n        ans.push_back(curr); \n        return ans; \n        \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-intervals"}