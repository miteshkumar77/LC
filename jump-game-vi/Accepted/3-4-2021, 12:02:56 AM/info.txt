{"id":463317768,"lang":"cpp","time":"1 year, 1 month","timestamp":1614834176,"status_display":"Accepted","runtime":"240 ms","url":"/submissions/detail/463317768/","is_pending":"Not Pending","title":"Jump Game VI","memory":"295.4 MB","code":"class Solution {\npublic:\n    int maxResult(vector<int>& nums, int k) {\n        int n = nums.size();\n        int num_elements = 1;\n        deque<pair<int,int>> q;\n        int gans = nums[0];\n        q.push_back({nums[0], 1});\n        \n        for (int i = 1; i < n; ++i) {\n            if(num_elements > k) {\n                --num_elements;\n                --q.back().second;\n                if (q.back().second == 0) {\n                    q.pop_back(); \n                }\n            }\n            \n            \n            gans = q.back().first + nums[i];\n            pair<int,int> t = {gans, 1};\n            ++num_elements;\n            while(!q.empty() && q.front().first <= gans) {\n                t.second += q.front().second;\n                q.pop_front();\n            }\n            q.push_front(t);\n        }\n        \n        return gans;\n    }\n};\n\n\n/**\n\n    [1, -1, -2, 4, -7, 3]\n              \n    0    1   \n    1    1\n\n*/","compare_result":"11111111111111111111111111111111111111111111111111111111111111111","title_slug":"jump-game-vi"}