{"id":437455545,"lang":"cpp","time":"1 year, 3 months","timestamp":1609575653,"status_display":"Accepted","runtime":"716 ms","url":"/submissions/detail/437455545/","is_pending":"Not Pending","title":"Find a Corresponding Node of a Binary Tree in a Clone of That Tree","memory":"166.1 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\n\nclass Solution {\npublic:\n    TreeNode* getTargetCopy(TreeNode* original, TreeNode* cloned, TreeNode* target) {\n        if (!cloned || original == target) {\n            return cloned;\n        }\n        \n        TreeNode* res = getTargetCopy(original->left, cloned->left, target);\n        return res?res:getTargetCopy(original->right, cloned->right, target);\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111","title_slug":"find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree"}