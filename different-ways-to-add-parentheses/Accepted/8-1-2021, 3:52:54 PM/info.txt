{"id":531742818,"lang":"cpp","time":"8 months, 2 weeks","timestamp":1627847574,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/531742818/","is_pending":"Not Pending","title":"Different Ways to Add Parentheses","memory":"7.4 MB","code":"class Solution {\npublic:\n    using ll = long long;\n    bool isop(char c) {\n        return c == '+' || c == '-' || c == '*';\n    }\n    \n    ll apply_op(int a, int b, char c) {\n        if (c == '+') return a + b;\n        if (c == '-') return a - b;\n        return a * b;\n    }\n    \n    vector<int> const& solve(string const& exp, int l, int r, vector<vector<vector<int>>>& dp, vector<vector<bool>>& seen) {\n        if (seen[l][r]) return dp[l][r];\n        int op_count = 0;\n        for (int i = l; i <= r; ++i) {\n            if (isop(exp[i])) {\n                auto lr = solve(exp, l, i-1, dp, seen);\n                auto rr = solve(exp, i+1, r, dp, seen);\n                for (int x : lr) {\n                    for (int y : rr) {\n                        dp[l][r].push_back(apply_op(x, y, exp[i]));\n                    }\n                }\n                ++op_count;\n            }\n        }\n        seen[l][r] = true;\n        if (op_count == 0) {\n            dp[l][r].push_back(stoi(exp.substr(l, r - l + 1)));\n        }\n        return dp[l][r];\n    }\n    \n    vector<int> diffWaysToCompute(string expression) {\n        int n = expression.size();\n        vector<vector<vector<int>>> dp(n, vector<vector<int>>(n));\n        vector<vector<bool>> seen(n, vector<bool>(n, false));\n        return solve(expression, 0, n-1, dp, seen);\n    }\n};","compare_result":"1111111111111111111111111","title_slug":"different-ways-to-add-parentheses"}