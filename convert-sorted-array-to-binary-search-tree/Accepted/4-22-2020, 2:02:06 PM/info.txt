{"id":328653259,"lang":"cpp","time":"1 year, 12 months","timestamp":1587578526,"status_display":"Accepted","runtime":"24 ms","url":"/submissions/detail/328653259/","is_pending":"Not Pending","title":"Convert Sorted Array to Binary Search Tree","memory":"23.1 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* sortedArrayToBST(vector<int>& nums) {\n        return sortedHelper(nums, 0, nums.size() - 1); \n    }\n    \n    TreeNode* sortedHelper(vector<int>& nums, int L, int R) {\n        if (L > R) {\n            return nullptr; \n        }\n        \n        int mid = L + (R - L)/2; \n        TreeNode* root = new TreeNode(nums[mid]); \n        root -> left = sortedHelper(nums, L, mid - 1); \n        root -> right = sortedHelper(nums, mid + 1, R); \n        return root; \n    }\n};","compare_result":"11111111111111111111111111111111","title_slug":"convert-sorted-array-to-binary-search-tree"}