{"id":528849590,"lang":"cpp","time":"8 months, 3 weeks","timestamp":1627349512,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/528849590/","is_pending":"Not Pending","title":"Convert Sorted Array to Binary Search Tree","memory":"24.1 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* sortedArrayToBST(vector<int> const & nums) {\n        if (nums.size() == 0) {\n            return nullptr;\n        }\n        int mid = nums.size()/2;\n        return new TreeNode(nums[mid],\n        sortedArrayToBST(vector<int>(nums.begin(), nums.begin() + mid)),\n        sortedArrayToBST(vector<int>(nums.begin() + mid + 1, nums.end())));\n    }\n};","compare_result":"1111111111111111111111111111111","title_slug":"convert-sorted-array-to-binary-search-tree"}