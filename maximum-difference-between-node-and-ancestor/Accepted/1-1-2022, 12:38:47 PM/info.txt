{"id":610914558,"lang":"cpp","time":"3 months, 2 weeks","timestamp":1641058727,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/610914558/","is_pending":"Not Pending","title":"Maximum Difference Between Node and Ancestor","memory":"10.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int solve(TreeNode* root, int mx, int mn) {\n        if (!root) return INT_MIN;\n        int ans = max(abs(root->val - mx), abs(root->val - mn));\n        mx = max(mx, root->val);\n        mn = min(mn, root->val);\n        return max(ans, max(solve(root->left, mx, mn), solve(root->right, mx, mn)));\n    }\n    int maxAncestorDiff(TreeNode* root) {\n        return solve(root, root->val, root->val);\n    }\n};","compare_result":"111111111111111111111111111","title_slug":"maximum-difference-between-node-and-ancestor"}