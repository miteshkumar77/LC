{"id":418507245,"lang":"cpp","time":"1 year, 5 months","timestamp":1604941007,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/418507245/","is_pending":"Not Pending","title":"Maximum Difference Between Node and Ancestor","memory":"13.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int maxAncestorDiff(TreeNode* root) {\n        function<int(TreeNode*,int,int)> dfs = [&](TreeNode* node, int lo, int hi) -> int {\n            if (!node) return 0;\n            \n            int nlo = min(lo, node -> val);\n            int nhi = max(hi, node -> val);\n            int diff = max(abs(node -> val - lo), abs(node -> val - hi)); \n            \n            return max(max(dfs(node -> left, nlo, nhi), dfs(node -> right, nlo, nhi)), diff);\n        };\n        \n        return dfs(root, root -> val, root -> val);\n    }\n};","compare_result":"111111111111111111111111111","title_slug":"maximum-difference-between-node-and-ancestor"}