{"id":440422894,"lang":"cpp","time":"1 year, 3 months","timestamp":1610141724,"status_display":"Accepted","runtime":"416 ms","url":"/submissions/detail/440422894/","is_pending":"Not Pending","title":"Minimum Cost to Cut a Stick","memory":"10.7 MB","code":"class Solution {\npublic:\n    int minCost(int n, vector<int>& cuts) {\n        sort(cuts.begin(), cuts.end());\n        \n        int C = cuts.size();\n        vector<vector<int>> dp(C, vector<int>(C, -1));\n        /*\n            dp[i][j] = min cost to make cuts i through j \n        */\n        \n        function<int(int,int,int,int)> sol = [&](int l, int r, int left, int right) -> int {\n            if (r < l) return 0;\n            \n            if (dp[l][r] != -1) return dp[l][r];\n            int ans = INT_MAX;\n            for (int c = l; c <= r; ++c) {\n                ans = min(ans, right - left + sol(l, c - 1, left, cuts[c]) + sol(c + 1, r, cuts[c], right));\n            }\n            dp[l][r] = ans;\n            return ans;\n        };\n        \n        return sol(0, C - 1, 0, n); \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-cost-to-cut-a-stick"}