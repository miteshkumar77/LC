{"id":361202362,"lang":"cpp","time":"1 year, 9 months","timestamp":1593712693,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/361202362/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal II","memory":"13.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>> levelOrderBottom(TreeNode* root) {\n        list<TreeNode*> start; \n        if (root)  {\n            start.push_back(root); \n        }\n        vector<vector<int> > ans; \n        helper(ans, start); \n        return ans; \n    }\n    \n    \n    void helper(vector<vector<int>>& ans, list<TreeNode*>& level) {\n        if (level.size() == 0) {\n            return; \n        }\n        vector<int> lvl; lvl.reserve(level.size()); \n        list<TreeNode*> next; \n        for (TreeNode* root : level) {\n            lvl.push_back(root -> val); \n            if (root -> left) {\n                next.push_back(root -> left); \n            }\n            if (root -> right) {\n                next.push_back(root -> right); \n            }\n        }\n        \n        helper(ans, next); \n        ans.push_back(lvl); \n    }\n};","compare_result":"1111111111111111111111111111111111","title_slug":"binary-tree-level-order-traversal-ii"}